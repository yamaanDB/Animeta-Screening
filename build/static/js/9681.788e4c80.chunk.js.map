{"version":3,"file":"static/js/9681.788e4c80.chunk.js","mappings":"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","sources":["components/AddUnits/RoomsBedsForm/CommonModal/CommonModal.js","assets/images/Filters.svg","components/AddUnits/RoomsBedsForm/index.jsx","webpack://Boston-Living/./src/components/AddUnits/RoomsBedsForm/CommonModal/styles.scss?29a1","webpack://Boston-Living/./src/components/AddUnits/RoomsBedsForm/index.module.scss?d793"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Modal, Box } from \"@mui/material\";\nimport NormalButton from \"../../../UI/common/NormalButton/NormalButton\";\nimport \"./styles.scss\";\nimport ErrorOutlineOutlinedIcon from '@mui/icons-material/ErrorOutlineOutlined';\nimport CommonFieldsTable from \"../CommonFieldsTable\";\nimport { useForm } from \"react-hook-form\";\n\nconst CommonModal = ({ visible, modalLabel, handleClose, handleApply, selectedFlats, watch, handleCommonField = () => { }, loading }) => {\n\n  const roomNumberType = watch(\"roomNumberType\")\n  const bedNumberType = watch(\"bedNumberType\")\n  const roomFormat = watch(\"roomFormat\")\n  const sequenceFormat = watch(\"sequenceFormat\");\n  const {\n    register,\n    setValue,\n    control,\n    watch: tempFormWatch,\n    handleSubmit\n  } = useForm({\n    mode: \"all\",\n    defaultValues: {\n      \"roomNumberType\": roomNumberType,\n      \"bedNumberType\": bedNumberType,\n      \"roomFormat\": roomFormat,\n      \"sequenceFormat\": sequenceFormat,\n      \"unitDetails\": [\n        {\n          \"flatName\": \"A1001\",\n          \"numberOfRooms\": \"\",\n          \"rooms\": []\n        }\n      ]\n    }\n  });\n  const [showExtendedColumns, setShowExtendedColumns] = useState(false);\n  const [isFormCompleted, setIsFormCompleted] = useState(false);\n\n  return (\n    <div className=\"col-md-10 m-0 p-0\">\n      <Modal\n        open={visible}\n        onClose={handleClose}\n        aria-labelledby=\"modal-title\"\n        aria-describedby=\"modal-description\"\n      >\n        <Box\n          sx={{\n            position: \"absolute\",\n            top: \"50%\",\n            left: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n            width: showExtendedColumns ? 1100 : 605,\n            borderRadius: \"16px\",\n            bgcolor: \"background.paper\",\n            boxShadow: 24,\n            p: 2,\n          }}\n        >\n          <p id=\"modal-description\" className=\"fw-600 \">\n            {modalLabel}\n          </p>\n          <hr />\n          <div className={`basicForm m-0  `}>\n            <ErrorOutlineOutlinedIcon\n              className={`iconbtn`}\n              onClick={\n                () => { }\n                //handleAdd(i, key)\n              }\n            ></ErrorOutlineOutlinedIcon>\n            <label>You are filling common fields for {selectedFlats.join(\", \")}</label>\n          </div>\n          <div className={`col-md-8 table pt-3 `}>\n            <CommonFieldsTable\n              tabelHeader={\"Room Number Format\"}\n              tabelHeader2={\"Number of Rooms\"}\n              tabelHeader4={\"Room Number\"}\n              tabelHeader5={\"Occupancy\"}\n              tabelHeader6={\"Number of Beds\"}\n              tabelHeader7={\"Bed Number\"}\n              setShowExtendedColumns={setShowExtendedColumns}\n              showExtendedColumns={showExtendedColumns}\n              setIsFormCompleted={setIsFormCompleted}\n              onSubmit={handleCommonField}\n              register={register}\n              setValue={setValue}\n              control={control}\n              watch={tempFormWatch}\n            />\n          </div>\n          <hr />\n          <div className=\"d-flex w-100 col-12 justify-content-end mt-4 \">\n            <div className=\"col-3 mx-3 \">\n              <NormalButton\n                className={\"cancelBtn w-100 \"}\n                label={\"Cancel\"}\n                onClick={handleClose}\n                disabled={loading}\n              />\n            </div>\n            <div className=\"col-3 \">\n              <NormalButton\n                onClick={handleSubmit(handleApply)}\n                className={\"applyBtn w-100\"}\n                label={\"Apply\"}\n                disabled={!isFormCompleted || loading}\n              />\n            </div>\n          </div>\n        </Box>\n      </Modal>\n    </div>\n  );\n};\n\nexport default CommonModal;\n","var _g;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgFilters(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 18 18\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"Icons - 18px\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    id: \"Vector\",\n    d: \"M10.2738 17C10.1361 17 10.0021 16.9532 9.89187 16.8667L7.3456 14.8667C7.26654 14.8046 7.20237 14.724 7.15818 14.6315C7.11398 14.5389 7.09097 14.4368 7.09097 14.3333V10.5867L2.62482 5.32467C2.30763 4.94992 2.10053 4.48721 2.0284 3.99216C1.95628 3.4971 2.02221 2.99077 2.21825 2.53401C2.4143 2.07725 2.73214 1.68951 3.13355 1.41738C3.53496 1.14525 4.00287 1.00032 4.48105 1H13.5203C13.9984 1.00059 14.4662 1.14576 14.8675 1.41807C15.2687 1.69038 15.5864 2.07825 15.7822 2.53506C15.978 2.99187 16.0438 3.49818 15.9715 3.99316C15.8991 4.48815 15.6919 4.95073 15.3746 5.32533L10.9104 10.5867V16.3333C10.9104 16.5101 10.8433 16.6797 10.7239 16.8047C10.6045 16.9298 10.4426 17 10.2738 17ZM8.36411 14L9.63724 15V10.3333C9.63737 10.1701 9.69467 10.0126 9.79829 9.89067L14.4249 4.43933C14.5791 4.25672 14.6798 4.03136 14.7148 3.7903C14.7498 3.54924 14.7176 3.30274 14.6221 3.08037C14.5265 2.85801 14.3718 2.66924 14.1763 2.53673C13.9809 2.40421 13.7531 2.33359 13.5203 2.33333H4.48105C4.24835 2.3337 4.02069 2.40436 3.82538 2.53684C3.63007 2.66932 3.4754 2.858 3.37992 3.08023C3.28443 3.30247 3.25219 3.54884 3.28705 3.78979C3.32192 4.03074 3.42241 4.25604 3.57648 4.43867L8.20369 9.89067C8.30708 10.0127 8.36415 10.1702 8.36411 10.3333V14Z\",\n    fill: \"#1E2528\"\n  }))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgFilters);\nexport default __webpack_public_path__ + \"static/media/Filters.24de1fbae7220a623ab3c5303934c563.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, memo, useRef } from \"react\";\nimport styles from \"./index.module.scss\";\nimport FormErrorMessage from \"components/UI/common/ErrorMessage\";\nimport { useForm } from \"react-hook-form\";\nimport NormalButton from \"components/UI/common/NormalButton/NormalButton\";\nimport InputBox from \"components/UI/common/InputBox/InputBox\";\nimport RadioButton from \"../../UI/common/RadioButton\";\nimport CheckBox from \"../../UI/common/CheckBox/CommonCheckBox\";\nimport TaskAltIcon from \"@mui/icons-material/TaskAlt\";\nimport LoginIcon from \"@mui/icons-material/Login\";\nimport CommonModal from \"./CommonModal/CommonModal\";\nimport EraseIcon from \"../../../assets/icons/erase.svg\";\nimport InfoIcon from \"assets/images/infoIcon.svg\";\nimport RoomsTable from \"./RoomsTable\";\nimport HighlightOffIcon from \"@mui/icons-material/HighlightOff\";\nimport ClearModal from \"./ClearModal/ClearModal\";\nimport ApplyToModal from \"./ApplyToModal/ApplyToModal\";\nimport FilterIcon from \"assets/images/Filters.svg\";\nimport { numberInput } from \"helpers\";\nimport Tooltip, { tooltipClasses } from \"@mui/material/Tooltip\";\nimport { styled } from \"@mui/material/styles\";\nimport InfoOutlinedIcon from \"@mui/icons-material/InfoOutlined\";\n\nconst RoomsBedsForm = ({ handleNextTab }) => {\n  const {\n    register,\n    handleSubmit,\n    getValues,\n    setValue,\n    reset,\n    control,\n    formState: { errors },\n    watch\n  } = useForm({\n    mode: \"all\",\n    defaultValues: {\n      \"propertyId\": \"6524b1d8d4aff1b06cf1aba9\",\n      \"blockName\": \"A1\",\n      \"blockId\": \"6524b1d8d4aff1b06cf1aba9\",\n      \"roomNumberType\": \"ALPHANUMERIC\",  // ALPHANUMERIC,  NUMERIC\n      \"bedNumberType\": \"NUMERIC\", // ALPHANUMERIC,  NUMERIC\n      \"roomFormat\": \"R1\",\n      \"sequenceFormat\": \"1\",\n      \"isDraft\": false,\n      \"unitDetails\": [\n        {\n          \"flatName\": \"A1001\",\n          \"numberOfRooms\": \"\",\n          \"rooms\": [],\n        },\n        {\n          \"flatName\": \"A1002\",\n          \"numberOfRooms\": \"\",\n          \"rooms\": [],\n        },\n        {\n          \"flatName\": \"A1003\",\n          \"numberOfRooms\": \"\",\n          \"rooms\": [],\n        },\n        {\n          \"flatName\": \"A2001\",\n          \"numberOfRooms\": \"\",\n          \"rooms\": [],\n        },\n        {\n          \"flatName\": \"A3001\",\n          \"numberOfRooms\": \"\",\n          \"rooms\": [],\n        }\n\n        // {\n        //   \"flatName\": \"A1002\",\n        //   \"numberOfRooms\": \"\",\n        //   \"roomNumber\": \"\",\n        //   \"occupancy\": \"\",\n        //   \"numberOfBeds\": \"\",\n        //   \"bedNumber\": \"\",\n        //   \"unitSequence\": \"\"\n        // },\n        // {\n        //   \"flatName\": \"A1003\",\n        //   \"numberOfRooms\": \"\",\n        //   \"roomNumber\": \"\",\n        //   \"occupancy\": \"\",\n        //   \"numberOfBeds\": \"\",\n        //   \"bedNumber\": \"\",\n        //   \"unitSequence\": \"\"\n        // },\n        // {\n        //   \"flatName\": \"A1004\",\n        //   \"numberOfRooms\": \"\",\n        //   \"roomNumber\": \"\",\n        //   \"occupancy\": \"\",\n        //   \"numberOfBeds\": \"\",\n        //   \"bedNumber\": \"\",\n        //   \"unitSequence\": \"\"\n        // },\n        // {\n        //   \"flatName\": \"A1005\",\n        //   \"numberOfRooms\": \"\",\n        //   \"roomNumber\": \"\",\n        //   \"occupancy\": \"\",\n        //   \"numberOfBeds\": \"\",\n        //   \"bedNumber\": \"\",\n        //   \"unitSequence\": \"\"\n        // },\n        // {\n        //   \"flatName\": \"A1006\",\n        //   \"numberOfRooms\": \"\",\n        //   \"roomNumber\": \"\",\n        //   \"occupancy\": \"\",\n        //   \"numberOfBeds\": \"\",\n        //   \"bedNumber\": \"\",\n        //   \"unitSequence\": \"\"\n        // },\n        // {\n        //   \"flatName\": \"A1007\",\n        //   \"numberOfRooms\": \"\",\n        //   \"roomNumber\": \"\",\n        //   \"occupancy\": \"\",\n        //   \"numberOfBeds\": \"\",\n        //   \"bedNumber\": \"\",\n        //   \"unitSequence\": \"\"\n        // }\n      ]\n    }\n  });\n\n  const formRef = useRef();\n  const [saveDraft, setSaveDraft] = useState(false);\n  const [openCommonModal, setOpenCommonModal] = useState(false);\n  const [openClearModal, setOpenClearModal] = useState(false);\n  const [openApplyToModal, setOpenApplyToModal] = useState(false);\n  const [isFiltersOpen, setIsFiltersOpen] = useState(false);\n  const [showStatusDropdown, setShowStatusDropdown] = useState(false);\n  const [isBulkUploadVisible, setIsBulkUploadVisible] = useState(false);\n  const [selectedFlats, setSelectedFlats] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const LightTooltip = styled(({ className, ...props }) => (\n    <Tooltip {...props} classes={{ popper: className }} />\n  ))(({ theme, width = 180 }) => ({\n    [`& .${tooltipClasses.tooltip}`]: {\n      backgroundColor: theme.palette.common.white,\n      color: \"#000\",\n      boxShadow: theme.shadows[5],\n      fontSize: 11,\n      // width: \"180px\",\n      maxWidth: 450,\n      width,\n      margin: \"20px -15px 0 0px\",\n      borderRadius: \"10px\",\n    },\n\n    [`& .${tooltipClasses.arrow}`]: {\n      color: \"#FFFFFF\",\n      margin: \"0 0px 0 -7px\",\n    },\n  }));\n\n  const handleOpenFilters = () => {\n    setIsFiltersOpen((prevState) => !prevState);\n  };\n\n  const handleCloseFilters = () => {\n    setIsFiltersOpen(false);\n  };\n\n  const onsubmit = (data) => {\n    // Your form submission logic here\n    console.log(data);\n  };\n\n  const handleSaveDraft = () => {\n    setSaveDraft(true);\n    handleSubmit(onsubmit);\n    setTimeout(() => {\n      setSaveDraft(false);\n    }, 500);\n    handleNextTab();\n  };\n\n  const handleRadioChange = (data, type) => {\n    if (type === \"roomNumberType\") {\n      setValue(\"roomNumberType\", data)\n      setValue(\"roomFormat\", null)\n    }\n    if (type === \"bedNumberType\") {\n      setValue(\"bedNumberType\", data)\n      setValue(\"sequenceFormat\", data === \"NUMERIC\" ? \"1\" : \"B1\")\n    }\n  };\n\n  const handleCommonField = (data) => {\n    setLoading(true)\n    if (selectedFlats.length) {\n      const unitDetails = getValues(\"unitDetails\");\n      for (let flatName of selectedFlats) {\n        const flatIndex = unitDetails.findIndex(unit => unit.flatName === flatName);\n        if (flatIndex >= 0) {\n          unitDetails[flatIndex] = {\n            flatName: flatName,\n            numberOfRooms: data.unitDetails[0].numberOfRooms,\n            rooms: data.unitDetails[0].rooms.map(room => ({\n              roomNumber: room?.roomNumber,\n              occupancy: room?.occupancy,\n              numberOfBeds: room?.numberOfBeds,\n              beds: room.beds.map(bed => ({\n                bedNumber: bed.bedNumber,\n                unitSequence: room?.occupancy === \"FULL_ROOM\" ? \"\" : `${flatName}-${room?.roomNumber}-${bed.bedNumber}`\n              })),\n              unitSequence: room?.occupancy === \"FULL_ROOM\" ? `${flatName}-${room?.roomNumber}-0` : \"\"\n            }))\n          }\n        }\n      }\n      setValue(\"unitDetails\", unitDetails);\n      setTimeout(() => {\n        setOpenCommonModal(false);\n        setLoading(false);\n        setSelectedFlats([]);\n      }, 500);\n    }\n  }\n\n  const checkIsCompletedFlat = (flatName) => {\n    const unitDetails = getValues(\"unitDetails\");\n    if (unitDetails.length) {\n      const getFlatData = unitDetails.find(unit => {\n        if (unit.flatName === flatName) {\n          if (unit?.rooms?.length) {\n            return unit.rooms.every(room => (room.occupancy === \"FULL_ROOM\" && room.unitSequence != \"\") || (room.occupancy === \"SHARING\" && room.beds.length && room.beds.every(bed => bed.unitSequence != \"\")))\n          }\n        }\n        return false;\n      });\n      if (getFlatData) return true;\n    }\n    return false\n  }\n\n  const checkIsEmptyRow = () => {\n    if (selectedFlats.length) {\n      const unitDetails = getValues(\"unitDetails\");\n      const isSome = selectedFlats.every(flatName => {\n        const flat = unitDetails.find(unit => unit.flatName === flatName);\n        console.log(\"testt flat\", flat.numberOfRooms)\n        return flat.numberOfRooms == \"\";\n      })\n      console.log(\"testt isSome\", isSome);\n      return isSome;\n\n    }\n    return false;\n  }\n\n  return (\n    <>\n      <div className={styles.basicInfo}>\n        <div className={styles.contentPart}>\n          <div className=\"new-section py-2 px-2\">\n            <div className={styles.basicTitle}>\n              <h3 className={styles.propertyLabel}>Structure Details</h3>\n            </div>\n            <div className=\"row\">\n              <div className={` col-md-4 mx-4  ${styles.basicForm} px-4`}>\n                <div className=\"col-6 py-2\">\n                  <label>\n                    Select a room number format{\" \"}\n                    <span className=\"text-danger\">*</span>\n                  </label>\n                  <div className=\"d-flex align-items-center gap-3 my-2\">\n                    <span className=\"d-flex align-items-baseline\">\n                      <RadioButton\n                        label=\"Numeric\"\n                        value=\"NUMERIC\"\n                        className={\"pl-1 pr-05 bg-primary-2\"}\n                        checkedValue={watch(\"roomNumberType\")}\n                        onRadioChange={(data) => handleRadioChange(data, \"roomNumberType\")}\n                      />\n                      <LightTooltip\n                        title={\n                          <div className=\"p-1 bg_grey-1\">\n                            The block name format can only be in the form of\n                            numbers. E.g: 1,2,3 etc.\n                          </div>\n                        }\n                        placement=\"bottom-start\"\n                        style={{ backgroundColor: \"white\" }}\n                      >\n                        <InfoOutlinedIcon className={`${styles.iconbtn} `} />\n                      </LightTooltip>\n                    </span>\n                    <span className=\"d-flex align-items-baseline\">\n                      <RadioButton\n                        label=\"Alphanumeric\"\n                        value=\"ALPHANUMERIC\"\n                        className={\"pl-1 pr-05 bg-primary-2\"}\n                        checkedValue={watch(\"roomNumberType\")}\n                        onRadioChange={(data) => handleRadioChange(data, \"roomNumberType\")}\n                      />\n                      <LightTooltip\n                        title={\n                          <div className=\"p-1 bg_grey-1\">\n                            The block name format has to be a combination of\n                            alphabet and number. E.g: A1,B1,C1 etc.\n                          </div>\n                        }\n                        placement=\"bottom-start\"\n                        style={{ backgroundColor: \"white\" }}\n                      >\n                        <InfoOutlinedIcon className={`${styles.iconbtn} `} />\n                      </LightTooltip>\n                    </span>\n                  </div>\n                </div>\n\n                <div className={`col-md-3 ${styles.rowWidth} py-2 mb-3`}>\n                  <label>\n                    Enter room number format{\" \"}\n                    <span className=\"text-danger\">*</span>\n                  </label>\n                  <InputBox\n                    className=\"login_input\"\n                    type={watch(\"roomNumberType\") === \"ALPHANUMERIC\" ? \"text\" : \"number\"}\n                    name={\"roomFormat\"}\n                    placeholder={watch(\"roomNumberType\") === \"ALPHANUMERIC\" ? \"Eg: A1\" : \"Eg. 1\"}\n                    keydown={numberInput}\n                    register={register(\"roomFormat\", {\n                      pattern: /^(?!\\s*$).+/,\n                      validate: (value, field) => {\n                        if (field.isDraft) return true;\n                        if (value) return true;\n                        return false;\n                      },\n                    })}\n                  />\n                  <FormErrorMessage\n                    error={errors.roomFormat}\n                    messages={{\n                      validate: \"Room name format is required\",\n                      pattern: \"Room name format is Invalid\",\n                    }}\n                  />\n                </div>\n              </div>\n              <div className={`col-md-4 ${styles.basicForm} mx-2 px-4`}>\n                <div className=\"col-7 py-2\">\n                  <label>\n                    Select a bed number format{\" \"}\n                    <span className=\"text-danger\">*</span>\n                  </label>\n                  <div className=\"d-flex align-items-center gap-3 my-2\">\n                    <span className=\"d-flex align-items-baseline\">\n                      <RadioButton\n                        label=\"Numeric\"\n                        value=\"NUMERIC\"\n                        className={\"pl-1 pr-05 bg-primary-2\"}\n                        checkedValue={watch(\"bedNumberType\")}\n                        onRadioChange={(data) => handleRadioChange(data, \"bedNumberType\")}\n                      />\n                      <LightTooltip\n                        title={\n                          <div className=\"p-1 bg_grey-1\">\n                            The block name format can only be in the form of\n                            numbers. E.g: 1,2,3 etc.\n                          </div>\n                        }\n                        placement=\"bottom-start\"\n                        style={{ backgroundColor: \"white\" }}\n                      >\n                        <InfoOutlinedIcon className={`${styles.iconbtn} `} />\n                      </LightTooltip>\n                    </span>\n                    <span className=\"d-flex align-items-baseline\">\n                      <RadioButton\n                        label=\"Alphanumeric\"\n                        value=\"ALPHANUMERIC\"\n                        className={\"pl-1 pr-05 bg-primary-2\"}\n                        checkedValue={watch(\"bedNumberType\")}\n                        onRadioChange={(data) => handleRadioChange(data, \"bedNumberType\")}\n                      />\n                      <LightTooltip\n                        title={\n                          <div className=\"p-1 bg_grey-1\">\n                            The block name format has to be a combination of\n                            alphabet and number. E.g: A1,B1,C1 etc.\n                          </div>\n                        }\n                        placement=\"bottom-start\"\n                        style={{ backgroundColor: \"white\" }}\n                      >\n                        <InfoOutlinedIcon className={`${styles.iconbtn} `} />\n                      </LightTooltip>\n                    </span>\n                  </div>\n                </div>\n                <hr />\n                <div className={` ${styles.sequence} col-7  py-3`}>\n                  Sequence Format: {watch(\"sequenceFormat\")}\n                </div>\n              </div>\n            </div>\n\n            <div className=\"col-12 py-1\">\n              <div className=\"d-flex align-items-center justify-content-end\">\n                {!openCommonModal && <LightTooltip\n                  title={\n                    <div className=\"p-1 d-flex gap-2 bg_grey-1\">\n                      <div><InfoOutlinedIcon sx={{ fontSize: 14 }} /></div> <span>Minimum 2 rows need to be selected and have to be in empty state to be able to fill common fields</span>\n                    </div>\n                  }\n                  placement=\"top\"\n                  width={310}\n                  style={{ backgroundColor: \"white\" }}\n                >\n                  <a\n                    className={`${styles.addServiceWrap} ${selectedFlats.length > 1 && checkIsEmptyRow() ? \"\" : styles.disabled}`}\n                    onClick={formRef.current?.handleAddService}\n                  >\n                    <TaskAltIcon className={`${styles.iconbtn}`}></TaskAltIcon>\n                    <span className={styles.addServiceText} onClick={() => selectedFlats.length > 1 && setOpenCommonModal(true)}>Fill Common Fields</span>\n\n                  </a>\n                </LightTooltip>}\n\n                {!openApplyToModal && <LightTooltip\n                  title={\n                    <div className=\"p-1 d-flex gap-2 bg_grey-1\">\n                      <div><InfoOutlinedIcon sx={{ fontSize: 14 }} /> </div> <span>You cannot apply fields from an empty row</span>\n                    </div>\n                  }\n                  placement=\"top\"\n                  width={290}\n                  style={{ backgroundColor: \"white\" }}\n                >\n                  <a\n                    className={`${styles.addServiceWrap} ${selectedFlats.length == 1 && checkIsCompletedFlat(selectedFlats[0]) ? \"\" : styles.disabled}`}\n                    onClick={formRef.current?.handleAddService}\n                  >\n                    <LoginIcon className={`${styles.iconbtn}`} ></LoginIcon>\n                    <span className={styles.addServiceText} onClick={() => setOpenApplyToModal(true)}>Apply To</span>\n                  </a>\n                </LightTooltip>}\n                {!openClearModal && <a\n                  className={styles.addServiceWrap}\n                  onClick={formRef.current?.handleAddService}\n                >\n                  <img\n                    className={`${styles.iconbtn}`}\n                    src={EraseIcon}\n                  ></img>\n\n                  <span className={styles.addServiceText} onClick={() => setOpenClearModal(true)}>Clear</span>\n\n                </a>}\n\n                <div className=\"px-3\">\n                  <div className={`  ${styles.hr}`} />\n                </div>\n\n                <div className=\"px-2 pe-3 \">\n                  <div className={styles.btnWidth}>\n\n                    <NormalButton\n                      className={\"draftBtn\"}\n                      label={\"Filters\"}\n                      id={\"draftBtn\"}\n                      onClick={handleOpenFilters}\n                    />\n                  </div>\n                </div>\n\n                <div className=\"position-relative\">\n                  <LightTooltip\n                    title={\n                      <div className=\"p-1 d-flex gap-2 bg_grey-1\">\n                        <span>Filters are only applicable for saved data.</span>\n                      </div>\n                    }\n                    placement=\"top-start\"\n                    width={250}\n                    style={{ backgroundColor: \"white\" }}\n                  >\n                    <InfoOutlinedIcon sx={{ fontSize: 28 }} />\n                  </LightTooltip>\n                </div>\n\n                {isFiltersOpen && (\n                  <div className={styles.overlay}>\n                    <div className={`${styles.filtersFrame}  `}>\n                      <div\n                        className=\"px-3 pt-3 pb-2 d-flex \"\n                        style={{\n                          background: \"white\",\n                          borderRadius: \"16px 16px 0 0\",\n                          gap: '18em',\n\n                        }}\n                      >\n                        <h3 className={styles.propertyLabel}>Filters</h3>\n                        <div className=\"d-flex\">\n\n                          <HighlightOffIcon\n                            className={styles.icon}\n                            onClick={handleCloseFilters}\n                            style={{ cursor: 'pointer' }}\n                          />\n                        </div>\n                      </div>\n\n                      <div className={styles.dropdownCTA}>\n                        <div className={styles.dropdownCTAmedium}>\n                          <div className={`${styles.div5} mt-3 mx-4`}>\n                            <div className={styles.statusContainer}>\n                              <p className={styles.today}>\n                                <span className={styles.textwrapper}>\n                                  Blocks:\n                                </span>\n                              </p>\n                            </div>\n                            <svg\n                              className={`${styles.downArrow} mx-2 ${showStatusDropdown ? styles.upArrow : \"\"\n                                }`}\n                              width=\"18\"\n                              height=\"18\"\n                              viewBox=\"0 0 18 18\"\n                              fill=\"none\"\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                            >\n                              <path\n                                d=\"M8.78571 12.1286L4.41421 7.7571C4.02368 7.36657 3.39053 7.36657 3.00001 7.7571C2.60948 8.14763 2.60948 8.78078 3.00001 9.17131L8.00001 14.1713C8.39054 14.5618 9.02369 14.5618 9.41421 14.1713L14.4142 9.17131C14.8047 8.78078 14.8047 8.14763 14.4142 7.7571C14.0237 7.36657 13.3905 7.36657 13 7.7571L8.78571 12.1286Z\"\n                                fill=\"currentColor\"\n                              />\n                            </svg>\n                            {showStatusDropdown && (\n                              <div className={styles.statusDropdownContainer}>\n                                <div className={styles.statusDropdown}>\n                                  <div className=\"d-flex  px-4 mt-3\">\n                                    <div className=\"\">\n                                      <CheckBox />\n                                    </div>\n                                    <div\n                                      className={`d-flex ${styles.textwrapper}  px-2`}\n                                    >\n                                      Select All\n                                    </div>\n                                  </div>\n                                  <hr />\n                                </div>\n                              </div>\n                            )}\n                          </div>\n\n                          <div className={`${styles.div5} mt-3 mx-4`}>\n                            <div className={styles.statusContainer}>\n                              <p className={styles.today}>\n                                <span className={styles.textwrapper}>\n                                  Floors :\n                                </span>\n                              </p>\n                            </div>\n                            <svg\n                              className={`${styles.downArrow} mx-2  ${showStatusDropdown ? styles.upArrow : \"\"\n                                }`}\n                              width=\"18\"\n                              height=\"18\"\n                              viewBox=\"0 0 18 18\"\n                              fill=\"none\"\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                            >\n                              <path\n                                d=\"M8.78571 12.1286L4.41421 7.7571C4.02368 7.36657 3.39053 7.36657 3.00001 7.7571C2.60948 8.14763 2.60948 8.78078 3.00001 9.17131L8.00001 14.1713C8.39054 14.5618 9.02369 14.5618 9.41421 14.1713L14.4142 9.17131C14.8047 8.78078 14.8047 8.14763 14.4142 7.7571C14.0237 7.36657 13.3905 7.36657 13 7.7571L8.78571 12.1286Z\"\n                                fill=\"currentColor\"\n                              />\n                            </svg>\n                            {showStatusDropdown && (\n                              <div className={styles.statusDropdownContainer}>\n                                <div className={styles.statusDropdown}>\n                                  <div className=\"d-flex  px-4 mt-3\">\n                                    <div className=\"\">\n                                      <CheckBox />\n                                    </div>\n                                    <div\n                                      className={`d-flex ${styles.textwrapper}  px-2`}\n                                    >\n                                      Select All\n                                    </div>\n                                  </div>\n                                  <hr />\n                                </div>\n                              </div>\n                            )}\n                          </div>\n                        </div>\n                      </div>\n                      <div\n                        className=\"px-3 py-3 mt-3\"\n                        style={{\n                          background: \"white\",\n                          borderRadius: \"0 0 16px 16px\",\n                        }}\n                      >\n                        <div style={{ width: \"100%\" }}>\n                          <NormalButton\n                            className={\"applyBtn\"}\n                            label={\"Apply Filters\"}\n                            style={{ background: \"#D2D3D4\" }}\n                          />\n                        </div>\n                      </div>\n                      {/* Add your filter content here */}\n\n                      {/* <button onClick={handleCloseFilters}>Close</button> */}\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n            <CommonModal\n              visible={openCommonModal}\n              handleClose={() => setOpenCommonModal(false)}\n              modalLabel={`Fill Common Fields`}\n              selectedFlats={selectedFlats}\n              watch={watch}\n              handleApply={handleCommonField}\n              loading={loading}\n            />\n            <ApplyToModal\n              visible={openApplyToModal}\n              handleClose={() => setOpenApplyToModal(false)}\n              modalLabel={`Applying fields from A1001`}\n            />\n            <ClearModal\n              visible={openClearModal}\n              handleClose={() => setOpenClearModal(false)}\n              modalLabel={`Are you sure you want to clear the row?`}\n            />\n            {!loading && <div className={`col-12 ${styles.table} mt-3`}>\n              <RoomsTable\n                initialData={watch(\"unitDetails\")}\n                tabelHeader={\"Flat Number\"}\n                tabelHeader2={\"Number of Rooms\"}\n                tabelHeader3={\"Unit Sequence\"}\n                tabelHeader4={\"Room Number\"}\n                tabelHeader5={\"Occupancy\"}\n                tabelHeader6={\"Number of Beds\"}\n                tabelHeader7={\"Bed Number\"}\n                errors={errors}\n                register={register}\n                watch={watch}\n                getValues={getValues}\n                setValue={setValue}\n                onToggleBulkUpload={() =>\n                  setIsBulkUploadVisible(!isBulkUploadVisible)\n                }\n                setSelectedFlats={setSelectedFlats}\n                selectedFlats={selectedFlats}\n                control={control}\n              />\n            </div>}\n          </div>\n        </div>\n        <hr />\n        <div className={`d-flex justify-content-end ${styles.btn} py-2`}>\n          <div className={styles.btnWidth}>\n            <NormalButton\n              className={\"draftBtn\"}\n              label={\"Save as Draft\"}\n              id={\"draftBtn\"}\n              onClick={handleSaveDraft}\n            />\n          </div>\n          <div className={styles.btnWidth}>\n            <NormalButton\n              className={\"submitBtn\"}\n              label={\"Save & Proceed\"}\n              id=\"submitBtn\"\n              // onClick={handleNextTab}\n              onClick={(e) => {\n                setValue(\"isDraft\", false);\n                handleSubmit(onsubmit)(e);\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default memo(RoomsBedsForm);\n","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"authLayout\":\"RoomsBedsForm_authLayout__iAcQe\",\"main-container\":\"RoomsBedsForm_main-container__MoInc\",\"vvip_icon_box\":\"RoomsBedsForm_vvip_icon_box__Xvm9F\",\"main\":\"RoomsBedsForm_main__GpkZT\",\"mainLayout\":\"RoomsBedsForm_mainLayout__XK-vT\",\"scroll-x\":\"RoomsBedsForm_scroll-x__qGl00\",\"ant-upload-list-none-container\":\"RoomsBedsForm_ant-upload-list-none-container__AGrVg\",\"timerBox\":\"RoomsBedsForm_timerBox__RJ6l4\",\"pointer\":\"RoomsBedsForm_pointer__oMNH+\",\"timeDisplayBox\":\"RoomsBedsForm_timeDisplayBox__-5Cl2\",\"seperateBox\":\"RoomsBedsForm_seperateBox__MWcF5\",\"seperateBox_one\":\"RoomsBedsForm_seperateBox_one__8dhMU\",\"seperateBox_two\":\"RoomsBedsForm_seperateBox_two__SdPX-\",\"seperateBox_three\":\"RoomsBedsForm_seperateBox_three__ntPcd\",\"active_box\":\"RoomsBedsForm_active_box__pT-nN\",\"inActive_box\":\"RoomsBedsForm_inActive_box__bDH96\",\"smallOk_btn\":\"RoomsBedsForm_smallOk_btn__WPVX0\",\"common-title\":\"RoomsBedsForm_common-title__-WWF+\",\"common-subtitle\":\"RoomsBedsForm_common-subtitle__SE1pH\",\"common-subtitle1\":\"RoomsBedsForm_common-subtitle1__5x+Nb\",\"dropdown-menu\":\"RoomsBedsForm_dropdown-menu__6AZA7\",\"preview-value\":\"RoomsBedsForm_preview-value__ulz3W\",\"preview-value1\":\"RoomsBedsForm_preview-value1__rCkU-\",\"preview-value2\":\"RoomsBedsForm_preview-value2__M--tN\",\"preview-label\":\"RoomsBedsForm_preview-label__D-i4s\",\"B4-Medium\":\"RoomsBedsForm_B4-Medium__IytdO\",\"B4-Semi-bold\":\"RoomsBedsForm_B4-Semi-bold__MMgaL\",\"B3-Medium\":\"RoomsBedsForm_B3-Medium__d4M7A\",\"basicInfo\":\"RoomsBedsForm_basicInfo__7OiM9\",\"info\":\"RoomsBedsForm_info__+t3SC\",\"addServiceWrap\":\"RoomsBedsForm_addServiceWrap__4h2H+\",\"addServiceText\":\"RoomsBedsForm_addServiceText__kcGsZ\",\"checkboxWrap\":\"RoomsBedsForm_checkboxWrap__tO5X5\",\"selectText\":\"RoomsBedsForm_selectText__aa41b\",\"B3-Semi-bold\":\"RoomsBedsForm_B3-Semi-bold__VC52q\",\"B2-Semi-bold\":\"RoomsBedsForm_B2-Semi-bold__I-WuS\",\"B1-regular\":\"RoomsBedsForm_B1-regular__Puq90\",\"tooltip\":\"RoomsBedsForm_tooltip__hBYPB\",\"capitalize-text\":\"RoomsBedsForm_capitalize-text__NVEyG\",\"error-message\":\"RoomsBedsForm_error-message__Vhyd+\",\"contentPart\":\"RoomsBedsForm_contentPart__lOMau\",\"btn\":\"RoomsBedsForm_btn__ieSXw\",\"rowWidth\":\"RoomsBedsForm_rowWidth__l5rqd\",\"AddressWidth\":\"RoomsBedsForm_AddressWidth__9KRcG\",\"btnWidth\":\"RoomsBedsForm_btnWidth__Ualrg\",\"propertyLabel\":\"RoomsBedsForm_propertyLabel__mMs8o\",\"basicForm\":\"RoomsBedsForm_basicForm__GjLZI\",\"iconbtn\":\"RoomsBedsForm_iconbtn__sipqp\",\"circleAdd\":\"RoomsBedsForm_circleAdd__YeS-p\",\"basicForm2\":\"RoomsBedsForm_basicForm2__iPckF\",\"gap\":\"RoomsBedsForm_gap__IKV3n\",\"sequence\":\"RoomsBedsForm_sequence__VOQpT\",\"checkbox\":\"RoomsBedsForm_checkbox__IX60i\",\"hr\":\"RoomsBedsForm_hr__DXmxf\",\"disabled\":\"RoomsBedsForm_disabled__YmaYe\",\"selectwrap\":\"RoomsBedsForm_selectwrap__3v226\",\"position-relative\":\"RoomsBedsForm_position-relative__UjQ0J\",\"show\":\"RoomsBedsForm_show__3sh1l\",\"actions\":\"RoomsBedsForm_actions__yFubY\",\"filters\":\"RoomsBedsForm_filters__+ZMok\",\"overlay\":\"RoomsBedsForm_overlay__aVbEX\",\"filtersFrame\":\"RoomsBedsForm_filtersFrame__UrB8N\",\"dropdownCTA\":\"RoomsBedsForm_dropdownCTA__hlWjZ\",\"today\":\"RoomsBedsForm_today__Whycq\",\"statusDropdown\":\"RoomsBedsForm_statusDropdown__ukeyX\",\"statusOption\":\"RoomsBedsForm_statusOption__1RoMU\",\"textwrapper\":\"RoomsBedsForm_textwrapper__PKfsH\",\"dropdownSelect\":\"RoomsBedsForm_dropdownSelect__rH9zT\",\"div5\":\"RoomsBedsForm_div5__k-3nL\"};"],"names":["_ref","visible","modalLabel","handleClose","handleApply","selectedFlats","watch","_ref$handleCommonFiel","handleCommonField","loading","roomNumberType","bedNumberType","roomFormat","sequenceFormat","_useForm","useForm","mode","defaultValues","register","setValue","control","tempFormWatch","handleSubmit","_useState","useState","_useState2","_slicedToArray","showExtendedColumns","setShowExtendedColumns","_useState3","_useState4","isFormCompleted","setIsFormCompleted","_jsx","className","children","Modal","open","onClose","_jsxs","Box","sx","position","top","left","transform","width","borderRadius","bgcolor","boxShadow","p","id","ErrorOutlineOutlinedIcon","onClick","join","CommonFieldsTable","tabelHeader","tabelHeader2","tabelHeader4","tabelHeader5","tabelHeader6","tabelHeader7","onSubmit","NormalButton","label","disabled","RoomsBedsForm","_formRef$current","_formRef$current2","_formRef$current3","handleNextTab","getValues","reset","errors","formState","formRef","useRef","setSaveDraft","openCommonModal","setOpenCommonModal","_useState5","_useState6","openClearModal","setOpenClearModal","_useState7","_useState8","openApplyToModal","setOpenApplyToModal","_useState9","_useState10","isFiltersOpen","setIsFiltersOpen","_useState11","_useState12","showStatusDropdown","_useState13","_useState14","isBulkUploadVisible","setIsBulkUploadVisible","_useState15","_useState16","setSelectedFlats","_useState17","_useState18","setLoading","LightTooltip","styled","_ref2","props","_objectWithoutProperties","_excluded","Tooltip","_objectSpread","classes","popper","_ref3","_ref4","theme","_ref3$width","_defineProperty","concat","tooltipClasses","tooltip","backgroundColor","palette","common","white","color","shadows","fontSize","maxWidth","margin","arrow","onsubmit","data","console","log","handleRadioChange","type","_Fragment","styles","basicInfo","contentPart","basicTitle","propertyLabel","basicForm","RadioButton","value","checkedValue","onRadioChange","title","placement","style","InfoOutlinedIcon","iconbtn","rowWidth","InputBox","name","placeholder","keydown","numberInput","pattern","validate","field","isDraft","FormErrorMessage","error","messages","sequence","addServiceWrap","length","unitDetails","isSome","every","flatName","flat","find","unit","numberOfRooms","checkIsEmptyRow","current","handleAddService","TaskAltIcon","addServiceText","_unit$rooms","rooms","room","occupancy","unitSequence","beds","bed","checkIsCompletedFlat","LoginIcon","src","EraseIcon","hr","btnWidth","prevState","overlay","filtersFrame","background","gap","HighlightOffIcon","icon","cursor","dropdownCTA","dropdownCTAmedium","div5","statusContainer","today","textwrapper","downArrow","upArrow","height","viewBox","fill","xmlns","d","statusDropdownContainer","statusDropdown","CheckBox","CommonModal","_step","_iterator","_createForOfIteratorHelper","_loop","flatIndex","findIndex","map","roomNumber","numberOfBeds","bedNumber","s","n","done","err","e","f","setTimeout","ApplyToModal","ClearModal","table","RoomsTable","initialData","tabelHeader3","onToggleBulkUpload","btn","memo"],"sourceRoot":""}