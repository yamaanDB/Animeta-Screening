{"version":3,"file":"static/js/9553.25ce8c8c.chunk.js","mappings":"4LAmEA,UA/D4B,SAAHA,GAA4E,IAAtEC,EAAOD,EAAPC,QAASC,EAAeF,EAAfE,gBAAiBC,EAAkBH,EAAlBG,mBAAoBC,EAAKJ,EAALI,MAAOC,EAASL,EAATK,UAClFC,GAA4CC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApDI,EAAcF,EAAA,GAAEG,EAAiBH,EAAA,GAClCI,GAAcC,EAAAA,EAAAA,QAAO,MAarBC,EAAgB,WAAH,OAAwB,OAAfZ,QAAe,IAAfA,OAAe,EAAfA,EAAiBa,WAAkB,OAAPd,QAAO,IAAPA,OAAO,EAAPA,EAASc,OAAM,EAEjEC,EAAqB,SAACC,GACtBL,EAAYM,UAAYN,EAAYM,QAAQC,SAASF,EAAMG,SAC7DT,GAAkB,EAEtB,EASA,OAPAU,EAAAA,EAAAA,YAAU,WAER,OADAC,SAASC,iBAAiB,QAASP,GAC5B,WACLM,SAASE,oBAAoB,QAASR,EACxC,CACF,GAAG,KAGDS,EAAAA,EAAAA,MAAA,OAAKpB,UAAS,GAAAqB,OAAKC,EAAAA,QAAO,yBAAwB,KAAAD,OAAIhB,EAAiBiB,EAAAA,QAAa,KAAI,IAAMC,IAAKhB,EAAYiB,SAAA,EAC7GC,EAAAA,EAAAA,KAAA,UAAQzB,UAAWsB,EAAAA,QAAOtB,GAAY0B,QAAS,kBAAMpB,GAAmBD,EAAe,EAACmB,SACrFzB,IAGFM,IACCe,EAAAA,EAAAA,MAAA,OAAKpB,UAAWsB,EAAAA,QAAO,iBAAiBE,SAAA,EACtCJ,EAAAA,EAAAA,MAAA,SAAOpB,UAAWsB,EAAAA,QAAO,kBAAkBE,SAAA,EACzCC,EAAAA,EAAAA,KAAA,SACEE,KAAK,WACLC,QAASnB,IACToB,SA/BY,WACtB/B,EAAmBW,IAAkB,GAAKb,EAC5C,IA8BY,gBAGI,OAAPA,QAAO,IAAPA,OAAO,EAAPA,EAASkC,KAAI,SAACC,GAAM,OACnBX,EAAAA,EAAAA,MAAA,SAAoBpB,UAAWsB,EAAAA,QAAO,kBAAkBE,SAAA,EACtDC,EAAAA,EAAAA,KAAA,SACEE,KAAK,WACLK,MAAOD,EACPH,QAAwB,OAAf/B,QAAe,IAAfA,OAAe,EAAfA,EAAiBoC,SAASF,GACnCF,SAAU,kBAhDK,SAACE,GAC5B,IAAMG,EAAgC,OAAfrC,QAAe,IAAfA,GAAAA,EAAiBoC,SAASF,GAC7ClC,EAAgBsC,QAAO,SAACC,GAAI,OAAKA,IAASL,CAAM,IAAC,GAAAV,QAAAgB,EAAAA,EAAAA,GAC7CxC,GAAe,CAAEkC,IACzBjC,EAAmBoC,EACrB,CA2C8BI,CAAqBP,EAAO,IAE7CA,IAPSA,EAQJ,SAMpB,C,+BChEA,WAAgB,wBAAwB,qCAAqC,kBAAkB,+BAA+B,MAAQ,qBAAqB,KAAO,oBAAoB,gBAAgB,6BAA6B,iBAAiB,8B","sources":["components/UI/common/MultiSelecDropdown/index.jsx","webpack://Boston-Living/./src/components/UI/common/MultiSelecDropdown/style.module.scss?d1c7"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport styles from \"./style.module.scss\"; // Import the SCSS file\n// import { ReactComponent as BottomDrop} from '../../../assets/icons/bottowDrop.svg';\n\nconst MultiSelectDropdown = ({ options, selectedOptions, setSelectedOptions, label, className }) => {\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const dropdownRef = useRef(null);\n\n  const handleCheckboxChange = (option) => {\n    const updatedOptions = selectedOptions?.includes(option)\n      ? selectedOptions.filter((item) => item !== option)\n      : [...selectedOptions, option];\n    setSelectedOptions(updatedOptions);\n  };\n\n  const handleSelectAll = () => {\n    setSelectedOptions(isAllSelected() ? [] : options);\n  };\n\n  const isAllSelected = () => selectedOptions?.length === options?.length;\n\n  const handleClickOutside = (event) => {\n    if (dropdownRef.current && !dropdownRef.current.contains(event.target)) {\n      setIsDropdownOpen(false);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, []);\n\n  return (\n    <div className={`${styles[\"multi-select-dropdown\"]} ${isDropdownOpen ? styles['open'] : ''}`} ref={dropdownRef}>\n      <button className={styles[className]} onClick={() => setIsDropdownOpen(!isDropdownOpen)}>\n        {label} \n        {/* <BottomDrop/> */}\n      </button>\n      {isDropdownOpen && (\n        <div className={styles[\"dropdown-list\"]}>\n          <label className={styles[\"checkbox-label\"]}>\n            <input\n              type=\"checkbox\"\n              checked={isAllSelected()}\n              onChange={handleSelectAll}\n            />\n            Select All\n          </label>\n          {options?.map((option) => (\n            <label key={option} className={styles[\"checkbox-label\"]}>\n              <input\n                type=\"checkbox\"\n                value={option}\n                checked={selectedOptions?.includes(option)}\n                onChange={() => handleCheckboxChange(option)}\n              />\n              {option}\n            </label>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MultiSelectDropdown;\n","// extracted by mini-css-extract-plugin\nexport default {\"multi-select-dropdown\":\"style_multi-select-dropdown__l3nVX\",\"dropdown-toggle\":\"style_dropdown-toggle__rdTOK\",\"addTo\":\"style_addTo__6RfJY\",\"open\":\"style_open__IVDvI\",\"dropdown-list\":\"style_dropdown-list__c9Smc\",\"checkbox-label\":\"style_checkbox-label__BuSIu\"};"],"names":["_ref","options","selectedOptions","setSelectedOptions","label","className","_useState","useState","_useState2","_slicedToArray","isDropdownOpen","setIsDropdownOpen","dropdownRef","useRef","isAllSelected","length","handleClickOutside","event","current","contains","target","useEffect","document","addEventListener","removeEventListener","_jsxs","concat","styles","ref","children","_jsx","onClick","type","checked","onChange","map","option","value","includes","updatedOptions","filter","item","_toConsumableArray","handleCheckboxChange"],"sourceRoot":""}