{"version":3,"file":"static/js/1268.52598dc6.chunk.js","mappings":"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","sources":["components/UI/common/TableComp/TableComp.js","webpack://Boston-Living/./src/components/UI/common/TableComp/style.scss?a3ad"],"sourcesContent":["import React, { useState } from \"react\";\n// styles\nimport \"./style.scss\";\n// services\nimport ReactPaginate from \"react-paginate\";\nimport { FaCaretLeft, FaCaretRight } from \"react-icons/fa\";\n//import { Tooltip } from \"antd\";\nimport moment from \"moment\";\n// helpers\nimport { history } from \"helpers\";\n\nfunction TableComp(props) {\n  const {\n    data,\n    EditAction,\n    DeleteAction,\n    ReadAction,\n    includedKeys,\n    pageCount,\n    onPageChange,\n    editRouteName,\n    setCurrentPage,\n    handleOpenModal,\n    currentPage,\n    onRowsSelect,\n    calmanagement = false,\n    management = false,\n  } = props;\n\n  const [selectedRows, setSelectedRows] = useState([]);\n  // Dynamic colors for Status KeyName\n  const statusColors = {\n    active: \"#27AE60\",\n    inactive: \"#EB5757\",\n    open: \"#EB5757\",\n    accepted: \"#2F80ED\",\n    inprogress: \"#F2C94C\",\n    closed: \"#27AE60\",\n    failed: \"#EB5757\",\n    success: \"#27AE60\",\n    PENDING: \"#EB5757\",\n    COMPLETED: \"#27AE60\",\n  };\n\n  const handlePageChange = (selectedPage) => {\n    setCurrentPage(selectedPage.selected + 1);\n    onPageChange(selectedPage.selected + 1);\n  };\n\n  const handleRowSelect = (rowId) => {\n    let updatedRows;\n    if (selectedRows.includes(rowId)) {\n      updatedRows = selectedRows.filter((id) => id !== rowId);\n    } else {\n      updatedRows = [...selectedRows, rowId];\n    }\n    setSelectedRows(updatedRows);\n    onRowsSelect(updatedRows);\n  };\n\n  const handleSelectAll = () => {\n    let updatedRows;\n    if (selectedRows.length === data.length) {\n      updatedRows = [];\n    } else {\n      const allRowIds = data.map((obj) => obj._id);\n      updatedRows = allRowIds;\n    }\n    setSelectedRows(updatedRows);\n    onRowsSelect(updatedRows);\n  };\n\n\n  const getValueForKey = (key, obj) => {\n    const nestedKeys = key.split(\".\");\n    let value = obj;\n    for (const nestedKey of nestedKeys) {\n      if (value.hasOwnProperty(nestedKey)) {\n        value = value[nestedKey];\n      } else {\n        return (value = \"-\");\n      }\n    }\n    if (\n      nestedKeys.includes(\"familyMember\") &&\n      typeof value === \"string\" &&\n      moment(value, \"YYYY-MM-DDTHH:mm:ss.SSSZ\", true).isValid()\n    ) {\n      return moment(value).format(\"MMM DD YYYY\");\n    } else {\n      return value;\n    }\n  };\n\n  return (\n    <div className=\"table-container\">\n      <table className=\"data-table\">\n        <thead>\n          <tr>\n            {DeleteAction && (\n              <th className=\"checkBox_place\">\n                <input\n                  type=\"checkbox\"\n                  onChange={handleSelectAll}\n                  checked={selectedRows.length === data.length}\n                  className=\"check_box cursor-pointer\"\n                />\n              </th>\n            )}\n            {includedKeys.map((key) => {\n              return (\n                <>\n                  <th\n                    className=\"\"\n                    key={key}\n                    style={{ ...(key?.width ? { width: key?.width } : {}) }}\n                  >\n                    {key.label}\n                  </th>\n                </>\n              );\n            })}\n\n            {(DeleteAction || ReadAction || EditAction) && (\n              <th className=\"action_place\"> Actions</th>\n            )}\n          </tr>\n        </thead>\n\n        <tbody>\n          {data.map((obj) => {\n            return (\n              <tr key={obj.id}>\n                {DeleteAction && (\n                  <td className=\"checkBox_place\">\n                    <input\n                      type=\"checkbox\"\n                      onChange={() => handleRowSelect(obj._id)}\n                      checked={selectedRows.includes(obj._id)}\n                      className=\"check_box cursor-pointer\"\n                    />\n                  </td>\n                )}\n                {includedKeys.map((item) => {\n                  const key = item.value;\n                  const value = getValueForKey(key, obj);\n                  // status keys color change\n                  if (obj.hasOwnProperty(key)) {\n                    const value = obj[key];\n                    const label = item.label;\n                    const statusKey = key.toLowerCase();\n                    if (statusKey.includes(\"status\")) {\n                      const status = value.toLowerCase();\n                      const color = statusColors[status] || \"black\";\n                      return (\n                        <td key={key}>\n                          <span style={{ color }}>\n                            {value.charAt(0).toUpperCase() + value.slice(1)}\n                          </span>\n                        </td>\n                      );\n                      // for id\n                    } else if (statusKey.includes(\"aditionalinfo\")) {\n                      return (\n                        // <Tooltip title={value} color={\"#fff\"} key={\"#fff\"}>\n                        //   <td key={key}>{value}</td>\n                        // </Tooltip>\n                        <></>\n                      );\n                    } else if (statusKey.includes(\"id\")) {\n                      return <td key={key}>{value}</td>;\n                    } else if (\n                      calmanagement &&\n                      statusKey.includes(\"description\")\n                    ) {\n                      return (\n                        <td key={key}>\n                          <a href={value} target=\"_blank\" rel=\"noreferrer\">\n                            {value}\n                          </a>\n                        </td>\n                      );\n                    } else if (statusKey.includes(\"type\")) {\n                      return (\n                        <td key={key}>\n                          {value.charAt(0).toUpperCase() + value.slice(1)}\n                        </td>\n                      );\n                    } else if (statusKey.includes(\"producticons3\")) {\n                      return (\n                        <td key={key}>\n                          <a href={value} target=\"_blank\" rel=\"noreferrer\">\n                            <img src={value} alt={value} className=\"img\" />{\" \"}\n                          </a>\n                        </td>\n                      );\n                    } else if (statusKey.includes(\"imageurls3\")) {\n                      return (\n                        <td key={key}>\n                          <a href={value} target=\"_blank\"  rel=\"noreferrer\">\n                            <img src={value} alt={value} className=\"img\" />{\" \"}\n                          </a>\n                        </td>\n                      );\n                      // date formatter\n                    } else if (statusKey === \"date\") {\n                      return (\n                        <td key={key}>{moment(value).format(\"MMM DD YYYY\")}</td>\n                      );\n                      // date and time formatter\n                    } else if (\n                      moment(value, \"YYYY-MM-DDTHH:mm:ss.SSSZ\", true).isValid()\n                    ) {\n                      return (\n                        <td key={key}>\n                          {moment(value).format(\"MMM DD YYYY hh:mm a\")}\n                        </td>\n                      );\n                    } else if (\n                      typeof value === \"string\" &&\n                      /<[a-z][\\s\\S]*>/i.test(value)\n                    ) {\n                      const textOnlyValue = value.replace(/<[^>]+>/g, \"\");\n                      return <td key={key}>{textOnlyValue}</td>;\n                      // for boolean\n                    } else {\n                      return (\n                        <td key={key}>\n                          {typeof value === \"boolean\" ? (\n                            value ? (\n                              <span style={{ color: \"#1D9E00\" }}>Active</span>\n                            ) : (\n                              <span style={{ color: \"#DD2025\" }}>Inactive</span>\n                            )\n                          ) : (\n                            value\n                          )}\n                        </td>\n                      );\n                    }\n                  }\n                  return <td key={key}>{value}</td>;\n                })}\n                {(DeleteAction || ReadAction || EditAction) && (\n                  <td>\n                    <span className=\"actions\">\n                      {EditAction && (\n                        <img\n                          src={\"\"}\n                          alt=\"Edit\"\n                          style={{\n                            color: \"#B4B4B4\",\n                            cursor: \"pointer\",\n                          }}\n                          onClick={() => {\n                            localStorage.removeItem(\"editId\");\n                            localStorage.setItem(\"editId\", obj._id);\n                            localStorage.removeItem(\"editPage\");\n                            localStorage.setItem(\"editPage\", currentPage);\n                            history.push(`${editRouteName}`);\n                          }}\n                        />\n                      )}\n                      {ReadAction && (\n                        <img\n                          src={\"\"}\n                          alt=\"read\"\n                          style={{\n                            color: \"#B4B4B4\",\n                            cursor: \"pointer\",\n                          }}\n                          onClick={() => {\n                            localStorage.removeItem(\"viewId\");\n                            localStorage.setItem(\"viewId\", obj._id);\n                            history.push(`${editRouteName}`);\n                          }}\n                        />\n                      )}\n                      {!management && DeleteAction && (\n                        <img\n                          onClick={() => handleOpenModal(obj._id)}\n                          src={\"\"}\n                          alt=\"delete\"\n                          style={{\n                            color: \"#B4B4B4\",\n                            cursor: \"pointer\",\n                          }}\n                        />\n                      )}\n                    </span>\n                  </td>\n                )}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n      <div className=\"my-4\">\n        <ReactPaginate\n          previousLabel={<FaCaretLeft />}\n          nextLabel={<FaCaretRight />}\n          pageCount={pageCount}\n          onPageChange={handlePageChange}\n          forcePage={currentPage - 1}\n          containerClassName={\"pagination\"}\n          previousClassName={\"pagination-previous\"}\n          nextClassName={\"pagination-next\"}\n          pageClassName={\"pagination-item\"}\n          breakClassName={\"pagination-item\"}\n          activeClassName={\"active_page\"}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default TableComp;\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["props","data","EditAction","DeleteAction","ReadAction","includedKeys","pageCount","onPageChange","editRouteName","setCurrentPage","handleOpenModal","currentPage","onRowsSelect","_props$calmanagement","calmanagement","_props$management","management","_useState","useState","_useState2","_slicedToArray","selectedRows","setSelectedRows","statusColors","active","inactive","open","accepted","inprogress","closed","failed","success","PENDING","COMPLETED","_jsxs","className","children","_jsx","type","onChange","updatedRows","length","map","obj","_id","checked","key","_Fragment","style","_objectSpread","width","label","rowId","includes","filter","id","concat","_toConsumableArray","handleRowSelect","item","value","_step","nestedKeys","split","_iterator","_createForOfIteratorHelper","s","n","done","nestedKey","hasOwnProperty","err","e","f","moment","isValid","format","getValueForKey","statusKey","toLowerCase","status","color","charAt","toUpperCase","slice","href","target","rel","src","alt","test","textOnlyValue","replace","cursor","onClick","localStorage","removeItem","setItem","history","push","ReactPaginate","previousLabel","FaCaretLeft","nextLabel","FaCaretRight","selectedPage","selected","forcePage","containerClassName","previousClassName","nextClassName","pageClassName","breakClassName","activeClassName"],"sourceRoot":""}