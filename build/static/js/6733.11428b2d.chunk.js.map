{"version":3,"file":"static/js/6733.11428b2d.chunk.js","mappings":"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","sources":["components/Modules/Inventory/CompanyDetailsForm/index.jsx","service/CompanyDetails.js","webpack://Boston-Living/./src/components/Modules/Inventory/CompanyDetailsForm/index.module.scss?56c6"],"sourcesContent":["import React, { useMemo, useState, useEffect, useCallback } from \"react\";\n// styles\nimport styles from \"./index.module.scss\";\n// internal components\nimport FormErrorMessage from \"components/UI/common/ErrorMessage\";\nimport InputBox from \"components/UI/common/InputBox/InputBox\";\nimport { useForm } from \"react-hook-form\";\nimport NormalButton from \"components/UI/common/NormalButton/NormalButton\";\n//import InputGroup from \"components/UI/common/InputGruops\";\nimport { sleep } from \"Constants/helperFunctions\";\nimport CommonLabelInput from \"components/UI/common/CommonLabelInput\";\nimport CustomController from \"components/UI/common/Controller\";\nimport NormalMultiSelect from \"components/UI/common/NormalMultiSelect\";\nimport {\n  addCompanyDetails,\n  getCompanyDetails,\n  updateCompanyDetails,\n} from \"service/BasicDetails\";\nimport { Country, State, City } from \"country-state-city\";\nimport { isDraft } from \"@reduxjs/toolkit\";\nimport { getValue } from \"@mui/system\";\nimport CopyIcon from \"assets/icons/copy.svg\";\nimport { numberInput } from \"helpers/validation\";\nimport { IconButton } from \"@mui/material\";\nimport PopoverStickOnHover from \"components/UI/common/PopoverStickOnHover\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setTabDirty, setTabStatus } from \"redux/slice/basicSlice\";\nimport { Toast } from \"Constants/toast\";\nimport debounce from \"lodash/debounce\";\nimport { debounceFunction, history } from \"helpers\";\nimport DeleteModal from \"components/UI/common/DeleteModal\";\nimport {\n  searchCompanyName,\n  searchCompanyNameDetails,\n} from \"service/CompanyDetails\";\n\nconst CompanyDetailsForm = ({\n  handleNextTab,\n  showPreview,\n  activeTab,\n  isPreviewScreen,\n  childSaveDraftRef,\n}) => {\n  const {\n    register,\n    handleSubmit,\n    getValues,\n    setValue,\n    reset,\n    control,\n    watch,\n    formState: { errors, isDirty },\n  } = useForm({\n    //mode: \"all\",\n    mode: \"onChange\",\n  });\n  const dispatch = useDispatch();\n  const [saveDraft, setSaveDraft] = useState(false);\n  const [openModal, setOpenModal] = useState(false);\n  const [selectedCountry, setSelectedCountry] = useState(null);\n  const [selectedCountryISO, setSelectedCountryISO] = useState(\"\");\n  const [selectedStateISO, setSelectedStateISO] = useState(\"\");\n  const [selectedCityISO, setSelectedCityISO] = useState(\"\");\n  const [putMethod, setPutMethod] = useState(false);\n  const [Data, setData] = useState([]);\n  const [isDisabled, setIsDisabled] = useState(false);\n  const [isPreview, setIsPreview] = useState(showPreview);\n  const [cityValue, setCity] = useState(\"\");\n  const [CompanyName, setCompanyName] = useState(\"\");\n  const [companyData, setCompanyData] = useState([]);\n  const [showData, setShowData] = useState(false);\n  const [CompanyNameID, setCompanyNameID] = useState(\"\");\n  const [companyId, setCompanyID] = useState(\"651d31499973000a3769a267\");\n  const [PreviousCompanyid, setpreviousCompanyid] = useState(\"\");\n\n  const [location, setLocation] = useState({\n    country: null,\n    state: null,\n    city: null,\n  });\n\n  const propertyId = useSelector((state) => state.basic.propertyId);\n  const UnitCreationDraft = useSelector((state) => state.basic.unitCreationDraft);\n  const PropertyStatus = useSelector((state) => state.basic.propertyStatus);\n  const TotalDraft = useSelector((state) => state.basic.TotalDraft);\n  const PendingProperty = useSelector(\n    (state) => state.basic.showPendingProperty\n  );\n  useEffect(() => {\n    dispatch(setTabDirty(isDirty));\n  }, [isDirty]);\n\n  const countryOptions = useMemo(() => {\n    const countries = Country?.getAllCountries() || [];\n    return countries.map((o) => ({ value: o.name, label: o.name, ...o }));\n  }, []);\n\n  const stateOption = useMemo(() => {\n    const filterStates = location.country\n      ? State.getStatesOfCountry(location.country.isoCode)\n      : [];\n    return filterStates.map((o) => ({ value: o.name, label: o.name, ...o }));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.country, location.state]);\n\n  const cityOption = useMemo(() => {\n    let filterCity = [];\n    if (location.country && location.state) {\n      filterCity = City.getCitiesOfState(\n        location.country.isoCode,\n        location.state.isoCode\n      );\n    }\n    return filterCity.map((o) => ({ value: o.name, label: o.name, ...o }));\n  }, [location.country, location.state]);\n  useEffect(() => {\n    // Reset state and city to null when country changes\n    setLocation((prevLocation) => ({\n      country: selectedCountry,\n      state: null,\n      city: null,\n    }));\n  }, [selectedCountry]);\n\n  useEffect(() => {\n    if (Data) {\n      const { country, state, city } = Data;\n      const newLocations = { ...location };\n      if (!newLocations.country) {\n        newLocations.country =\n          countryOptions.find((o) => o.name === country) || null;\n        setSelectedCountry(newLocations.country);\n      }\n      if (!newLocations.state) {\n        newLocations.state = stateOption.find((o) => o.name === state) || null;\n      }\n      if (!newLocations.city) {\n        newLocations.city = cityOption.find((o) => o.name === city) || null;\n      }\n      setLocation(newLocations);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [Data, countryOptions, stateOption, cityOption]);\n\n  useEffect(() => {\n    if (location.country) {\n      setValue(\"compCountry\", location.country.value);\n    }\n    if (location.state) {\n      setValue(\"compState\", location.state.value);\n    }\n    if (location.city) {\n      setValue(\"compCity\", location.city.value);\n      setCity(location.city.value);\n    }\n  }, [location]);\n  // useEffect(() => {\n  //   if (countryOptions && stateOption && cityOption) {\n  //     const { country, state, city } = testDefaultValues.locationDetails;\n  //     setSelectedCountry(countryOptions.find((o) => o.name === country));\n  //     //setSelectedState(stateOption.find(o => o.name === state))\n  //     //setSelectedCity(cityOption.find(o => o.name === city))\n  //   }\n  // }, [cityOption, stateOption, countryOptions]);\n\n  const getCompanyDetailData = async (page) => {\n    try {\n      // const propertyId = \"652414b6aedac4d4e61d835a\";\n      // const createdBy = \"652414b6aedac4d4e61d835a\";\n      const response = await getCompanyDetails(propertyId, companyId);\n      if (response.status === 200) {\n        const data = response.data;\n        setData(data.locationDetails);\n        setValue(\"companyName\", data.companyName);\n        setValue(\"companyContactMobile\", data?.mobileNumber);\n        setValue(\"companyRegNumber\", data?.registrationNumber);\n        setValue(\"panCardNumber\", data?.panNumber);\n        setValue(\"gstNumber\", data?.gstNumber);\n        setValue(\"compAddressLine1\", data?.locationDetails?.addressLine1);\n        setValue(\"compAddressLine2\", data?.locationDetails?.addressLine2);\n        setValue(\"compArea\", data?.locationDetails?.area);\n        setValue(\"compMapLink\", data?.locationDetails?.googleMapLink);\n        setValue(\"compLandmark\", data?.locationDetails?.landmark);\n        setValue(\"compPostalCode\", data?.locationDetails?.postalCode);\n        setSelectedCountryISO(data?.locationDetails?.countryISO);\n        setSelectedStateISO(data?.locationDetails?.stateISO);\n        setSelectedCityISO(data?.locationDetails?.city);\n        if (data?._id) {\n          setPutMethod(true);\n          setCompanyID(data?._id);\n          setpreviousCompanyid(data?._id);\n        }\n      } else {\n        Toast({ type: \"error\", message: response.data.message });\n      }\n    } catch (e) {\n      console.log(\"e :>> \", e);\n    }\n  };\n\n  useEffect(() => {\n    getCompanyDetailData();\n  }, []);\n\n  const handleSaveDraft = async (e) => {\n    if (isPreviewScreen) {\n      handleNextTab(activeTab, false, isPreviewScreen, true);\n      return;\n    }\n    setValue(\"isDraft\", true);\n    setSaveDraft(true);\n    setIsDisabled(true);\n\n    setTimeout(() => {\n      handleSubmit(onsubmit, (arg1) => {\n        console.log(arg1);\n      })(e);\n    }, 1000);\n  };\n\n  const onsubmit = async (data) => {\n    setIsDisabled(true);\n    await sleep(500);\n    try {\n      let body =\n        putMethod && saveDraft == false\n          ? {\n            propertyId: propertyId,\n            companyName: getValues(\"companyName\") || \"\",\n            status: \"ACTIVE\" || \"\",\n            id: companyId,\n            previousCompanyId: PreviousCompanyid,\n            isDraft: getValues(\"isDraft\") == true,\n            registrationNumber: String(\n              getValues(\"companyRegNumber\") || \"\"\n            ).toUpperCase(),\n            countryCode: \"+91\" || \" \",\n            mobileNumber: getValues(\"companyContactMobile\") || \"\",\n            gstNumber: String(getValues(\"gstNumber\") || \"\").toUpperCase(),\n            isDraft: getValues(\"isDraft\") ? getValues(\"isDraft\") : false,\n            panNumber: String(getValues(\"panCardNumber\") || \"\").toUpperCase(),\n            locationDetails: {\n              addressLine1: getValues(\"compAddressLine1\") || \"\",\n              addressLine2: getValues(\"compAddressLine2\") || \"\",\n              state: location.state?.name || \"\",\n              country: location.country?.name || \"\",\n              city: location.city?.name || \"\",\n              countryISO: \"DD\",\n              stateISO: \"FD\",\n              area: getValues(\"compArea\") || \"\",\n              landmark: getValues(\"compLandmark\") || \"\",\n              postalCode: getValues(\"compPostalCode\") || \"\",\n              googleMapLink: getValues(\"compMapLink\") || \"\",\n            },\n          }\n          : {\n            propertyId: propertyId,\n            companyName: getValues(\"companyName\") || \"\",\n            status: \"ACTIVE\" || \"\",\n            // id: companyId,\n            registrationNumber: getValues(\"companyRegNumber\") || \"\",\n            countryCode: \"+91\" || \" \",\n            mobileNumber: getValues(\"companyContactMobile\") || \"\",\n            gstNumber: getValues(\"gstNumber\") || \"\",\n            isDraft: getValues(\"isDraft\") ? getValues(\"isDraft\") : false,\n            panNumber: getValues(\"panCardNumber\") || \"\",\n            locationDetails: {\n              addressLine1: getValues(\"compAddressLine1\") || \"\",\n              addressLine2: getValues(\"compAddressLine2\") || \"\",\n              state: location.state?.name || \"\",\n              country: location.country?.name || \"\",\n              city: location.city?.name || \"\",\n              countryISO: \"DD\",\n              stateISO: \"FF\",\n              area: getValues(\"compArea\") || \"\",\n              landmark: getValues(\"compLandmark\") || \"\",\n              postalCode: getValues(\"compPostalCode\") || \"\",\n              googleMapLink: getValues(\"compMapLink\") || \"\",\n            },\n          };\n      const response = await (putMethod && saveDraft == false\n        ? addCompanyDetails(body)\n        : addCompanyDetails(body));\n\n      if (response.status == 200) {\n        dispatch(setTabDirty(false));\n        // handleNextTab(0, false);\n        // if (isPreviewScreen) handleNextTab(activeTab, false, isPreviewScreen);\n        // else if (Boolean(getValues(\"isDraft\")) == false) {\n        //   handleNextTab(0, false, true);\n        // }\n        // history.push(\"/inventory/add-property/preview?tab=0\")\n        if (getValues(\"isDraft\") != true && !isPreviewScreen) {\n          setOpenModal(false);\n          setValue(\"openModal\", false);\n          if (isPreviewScreen) {\n            handleNextTab(activeTab, false, isPreviewScreen, true);\n          }\n          if (showPreview) {\n            setValue(\"openModal\", true);\n            console.log(getValues(\"openModal\"), \"opp\")\n            return;\n            //history.push(\"/inventory\");\n          } else if (Boolean(getValues(\"isDraft\")) == false) {\n            handleNextTab(0, false, true, true);\n          }\n          dispatch(setTabStatus());\n          setIsDisabled(false);\n          setValue(\"isDraft\", false);\n          setSaveDraft(false);\n        } else if (showPreview) {\n          setValue(\"openModal\", true);\n        } else if (isPreviewScreen) {\n          dispatch(setTabStatus());\n          setIsDisabled(false);\n          setValue(\"isDraft\", false);\n          setSaveDraft(false);\n          handleNextTab(6, false, isPreviewScreen, true);\n        }\n\n        setTimeout(() => {\n          if (getValues(\"isDraft\") == true) {\n            dispatch(setTabDirty(false));\n            dispatch(setTabStatus());\n            setIsDisabled(false);\n            setValue(\"isDraft\", false);\n            setSaveDraft(false);\n          }\n        }, 1000);\n      } else {\n        setIsDisabled(false);\n        setValue(\"isDraft\", false);\n        setSaveDraft(false);\n      }\n    } catch (e) {\n      setIsDisabled(false);\n      console.log(\"e :>> \", e);\n      setSaveDraft(false);\n      setValue(\"isDraft\", false);\n    }\n  };\n\n  const handleCopyText = () => {\n    navigator.clipboard.writeText(watch(\"compMapLink\"));\n  };\n\n  //   var urls =\n  // [\n  // /// correct urls\n  // \"https://www.google.com/maps?ll=37.0625,-95.677068&spn=45.197878,93.076172&t=h&z=4\",\n  // \"https://www.google.de/maps?ll=37.0625,-95.677068&spn=45.197878,93.076172&t=h&z=4\",\n  // \"https://www.google.com/maps?ll=37.0625,-95.677068&spn=45.197878,93.076172&t=h&z=4&layer=t&lci=com.panoramio.all,com.google.webcams,weather\",\n  // \"https://www.google.com/maps?ll=37.370157,0.615234&spn=45.047033,93.076172&t=m&z=4&layer=t\",\n  // \"https://maps.google.com/maps?q=New+York,+NY,+USA&hl=no&sll=19.808054,-63.720703&sspn=54.337928,93.076172&oq=n&hnear=New+York&t=m&z=10\",\n  // \"https://www.google.com/maps?q=New+York,+New+York,+USA&hl=no&ll=40.683762,-73.925629&spn=0.708146,1.454315&sll=41.47566,-72.026367&sspn=11.190693,23.269043&oq=new&hnear=New+York&t=m&z=10\",\n\n  // /// error urls\n  // \"https://www.google.com/\",\n  // \"https://zzz.google.com/maps\",\n  // \"https://www.google.com/+\",\n  // \"httpsxyz://www.google.com/maps\",\n  // \"http://www.anotherdomain.com/+\",\n  // \"http://maps.google.com/\",\n  // \"http://google.com/maps\",\n  // \"http://google.de/maps\",\n  // \"?q=New+York,+New+York,+USA&hl=no&ll=40.683762,-73.925629&spn=0.708146,1.454315&sll=41.47566,-72.026367&sspn=11.190693,23.269043&oq=new&hnear=New+York&t=m&z=10\",\n  // \"&sll=41.47566,-72.026367&sspn=11.190693,23.269043&oq=new&hnear=New+York&t=m&z=10\"\n\n  // ];\n  useEffect(() => {\n    setShowData(false);\n    try {\n      const searchCompanyNameData = async () => {\n        try {\n          setShowData(false);\n          const response = await searchCompanyName(`search=${CompanyName}`);\n          if (response.status === 200) {\n            console.log(response?.data);\n            setCompanyData(response?.data);\n            setShowData(true);\n          }\n        } catch (error) {\n          setShowData(true);\n          console.error(error);\n        }\n      };\n      {\n        CompanyName && searchCompanyNameData();\n      }\n    } catch (e) {\n      setShowData(true);\n      console.error(e);\n    }\n  }, [CompanyName]);\n\n  useEffect(() => {\n    CompanyNameID && searchCompanyNameDetailsfun();\n    if (CompanyName) {\n      setCompanyID(\"\");\n      setCompanyNameID(\"\");\n    }\n    console.log(CompanyNameID);\n  }, [CompanyNameID, CompanyName]);\n  const searchCompanyNameDetailsfun = async () => {\n    try {\n      const response = await searchCompanyNameDetails(CompanyNameID);\n      if (response.status === 200) {\n        const data = response.data.data;\n        console.log(data);\n        setData(data.locationDetails);\n        setValue(\"companyName\", data.companyName);\n        setValue(\"companyContactMobile\", data?.mobileNumber);\n        setValue(\"companyRegNumber\", data?.registrationNumber);\n        setValue(\"panCardNumber\", data?.panNumber);\n        setValue(\"gstNumber\", data?.gstNumber);\n        setValue(\"compAddressLine1\", data?.locationDetails?.addressLine1);\n        setValue(\"compAddressLine2\", data?.locationDetails?.addressLine2);\n        setValue(\"compArea\", data?.locationDetails?.area);\n        setValue(\"compMapLink\", data?.locationDetails?.googleMapLink);\n        setValue(\"compLandmark\", data?.locationDetails?.landmark);\n        setValue(\"compPostalCode\", data?.locationDetails?.postalCode);\n        setSelectedCountryISO(data?.locationDetails?.countryISO);\n        setSelectedStateISO(data?.locationDetails?.stateISO);\n        setSelectedCityISO(data?.locationDetails?.city);\n        setShowData(false);\n        if (data?._id) {\n          setPutMethod(true);\n          setCompanyID(data?._id);\n        }\n      } else {\n        Toast({ type: \"error\", message: response.data.message });\n      }\n    } catch (error) {\n      setShowData(false);\n      console.error(error);\n    }\n  };\n\n  const handlesearchCompanyName = useCallback(\n    debounceFunction((value) => {\n      setCompanyName(value);\n    }, 500),\n    []\n  );\n  const handleLastSubmit = () => {\n    setValue(\"openModal\", true);\n    alert(\"sdf\");\n    console.log(getValues(\"openModal\", true));\n  };\n  return (\n    <>\n      {!isPreview ? (\n        //  Edit Screen\n        <div className={styles.companyDetailsForm}>\n          <div className={`${styles.contentPart} px-3`}>\n            <div className=\"new-section py-2\">\n              <div className={styles.basicTitle}>\n                <h3>Company Basic Details</h3>\n              </div>\n              <div className={styles.basicForm}>\n                <div className={`row`}>\n                  <div className={`col-md-3 ${styles.rowWidth}  py-2`}>\n                    <label>\n                      Company Name\n                      <span className=\"text-danger\">*</span>\n                    </label>\n                    <InputBox\n                      className=\"login_input\"\n                      type=\"text\"\n                      value={getValues(\"companyName\")}\n                      name={\"companyName\"}\n                      onChange={(e) => handlesearchCompanyName(e.target.value)}\n                      placeholder=\"Enter company name\"\n                      register={register(\"companyName\", {\n                        required: saveDraft ? false : true,\n                        pattern: /^(?!\\s+$)[A-Za-z\\s]*$/,\n                      })}\n                      searchValue={CompanyName && showData ? true : false}\n                      searchData={companyData}\n                      showData={showData}\n                      SearchCompanyNameID={(data) =>\n                        setCompanyNameID(data?._id)\n                      }\n                    />\n                    <FormErrorMessage\n                      error={errors.companyName}\n                      messages={{\n                        required: \"Company name is required\",\n                        pattern: \"Company name is invalid\",\n                      }}\n                    />\n                  </div>\n                  <div className={`col-md-3 ${styles.rowWidth}  py-2`}>\n                    <label>\n                      Mobile Number<span className=\"text-danger\">*</span>\n                    </label>\n\n                    <CommonLabelInput\n                      className=\"login_input\"\n                      type=\"number\"\n                      onKeyDown={numberInput}\n                      name={\"companyContactMobile\"}\n                      placeholder=\"Enter mobile number\"\n                      errors={errors}\n                      value={getValues(\"companyContactMobile\")}\n                      prefixText=\"+91\"\n                      register={register(\"companyContactMobile\", {\n                        required: saveDraft ? false : true,\n                        minLength: 10,\n                        maxLength: 10,\n                        //pattern: /^[0-9\\b]+$/,\n                        pattern: /^[6-9]\\d{9}$/,\n                      })}\n                    />\n                    <FormErrorMessage\n                      error={errors.companyContactMobile}\n                      messages={{\n                        required: \"Mobile number is required\",\n                        minLength: \"Should contain minimum of 10 numbers\",\n                        maxLength: \"Should contain maximum of 10 numbers\",\n                        pattern: \"Mobile number is invalid\",\n                      }}\n                    />\n                  </div>\n                  <div className={`col-md-3 ${styles.rowWidth}  py-2`}>\n                    <label>\n                      Registration Number <span className=\"text-danger\">*</span>\n                    </label>\n                    <InputBox\n                      className=\"login_input\"\n                      type=\"text\"\n                      name={\"companyRegNumber\"}\n                      value={String(\n                        getValues(\"companyRegNumber\") || \"\"\n                      ).toUpperCase()}\n                      placeholder=\"Enter registration number\"\n                      register={register(\"companyRegNumber\", {\n                        required: saveDraft ? false : true,\n                        pattern: /^(?!\\s+$)[A-Za-z0-9]*$/i,\n                        maxLength: 21,\n                      })}\n                      upperCaseLabel={true}\n                    />\n                    <FormErrorMessage\n                      error={errors.companyRegNumber}\n                      messages={{\n                        required: \"Register Number is required\",\n                        maxLength: \"Should contain maximum of 21 characters\",\n                        pattern: \"Register Number is invalid\",\n                      }}\n                    />\n                  </div>\n                  <div className={`col-md-3 ${styles.rowWidth}  py-2`}>\n                    <label>\n                      PAN Number<span className=\"text-danger\">*</span>\n                    </label>\n                    <InputBox\n                      className=\"login_input\"\n                      type=\"text\"\n                      name={\"panCardNumber\"}\n                      value={String(\n                        getValues(\"panCardNumber\") || \"\"\n                      ).toUpperCase()}\n                      placeholder=\"Enter PAN number\"\n                      register={register(\"panCardNumber\", {\n                        required: saveDraft ? false : true,\n                        pattern: /^[A-Z]{5}[0-9]{4}[A-Z]{1}$/i,\n                      })}\n                      upperCaseLabel={true}\n                    />\n                    <FormErrorMessage\n                      error={errors.panCardNumber}\n                      messages={{\n                        required: \"Pan number is required\",\n                        pattern: \"Pan number is Invalid\",\n                      }}\n                    />\n                  </div>\n                  <div className={`col-md-3 ${styles.rowWidth}  py-2`}>\n                    <label>\n                      GST Number<span className=\"text-danger\">*</span>\n                    </label>\n                    <InputBox\n                      className=\"login_input\"\n                      type=\"text\"\n                      name={\"gstNumber\"}\n                      value={String(getValues(\"gstNumber\") || \"\").toUpperCase()}\n                      placeholder=\"Enter GST number\"\n                      register={register(\"gstNumber\", {\n                        required: saveDraft ? false : true,\n                        pattern:\n                          /^[0-9]{2}[A-Z]{5}[0-9]{4}[A-Z]{1}[1-9A-Z]{1}[Z]{1}[0-9A-Z]{1}$/i,\n                      })}\n                      upperCaseLabel={true}\n                    />\n                    <FormErrorMessage\n                      error={errors.gstNumber}\n                      messages={{\n                        required: \"GST number is required\",\n                        pattern: \"GST number is Invalid\",\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"new-section py-3\">\n              <div className=\"basic-title\">\n                <h3>\n                  Location Details<span className=\"text-danger\">*</span>\n                </h3>\n              </div>\n              <div className=\"basic-form\">\n                <div className=\"row\">\n                  <div className={` ${styles.AddressWidth}  py-2`}>\n                    <label>\n                      Address Line 1 <span className=\"text-danger\">*</span>\n                    </label>\n                    <InputBox\n                      className=\"login_input\"\n                      type=\"text\"\n                      value={getValues(\"compAddressLine1\")}\n                      name={\"compAddressLine1\"}\n                      placeholder=\"Enter address details like area name, street name, etc.\"\n                      errors={errors}\n                      register={register(\"compAddressLine1\", {\n                        required: saveDraft ? false : true,\n                        pattern: /^(?!\\s+$)[a-zA-Z0-9\\s\\-.,/+#\\s]*$/,\n                      })}\n                    />\n                    <FormErrorMessage\n                      error={errors.compAddressLine1}\n                      messages={{\n                        required: \"Address line is required\",\n                        pattern: \"Address line is invalid\",\n                      }}\n                    />\n                  </div>\n                  <div className={` ${styles.AddressWidth}  py-2`}>\n                    <label>Address Line 2</label>\n                    <InputBox\n                      className=\"login_input\"\n                      type=\"text\"\n                      name={\"compAddressLine2\"}\n                      value={getValues(\"compAddressLine2\")}\n                      placeholder=\"Enter address details like area name, street name, etc.\"\n                      errors={errors}\n                      register={register(\"compAddressLine2\", {\n                        required: false,\n                        pattern: /^(?!\\s+$)[a-zA-Z0-9\\s\\-.,/+#\\s]*$/,\n                      })}\n                    />\n                    <FormErrorMessage\n                      error={errors.compAddressLine2}\n                      messages={{\n                        required: \"Address line is required\",\n                        pattern: \"Address line is invalid\",\n                      }}\n                    />\n                  </div>\n                  <div className={`col-md-3 ${styles.rowWidth}  py-2`}>\n                    <label>\n                      Country <span className=\"text-danger\">*</span>\n                    </label>\n                    <CustomController\n                      name={\"compCountry\"}\n                      control={control}\n                      error={errors?.compCountry}\n                      value={getValues(\"compCountry\")}\n                      rules={{ required: saveDraft ? false : true }}\n                      messages={{\n                        required: \"Country is required\",\n                      }}\n                      render={({ field: { onChange, value }, ...fields }) => {\n                        return (\n                          <NormalMultiSelect\n                            {...fields}\n                            placeholder={\"Select country\"}\n                            options={countryOptions}\n                            name=\"compCountry\"\n                            handleChange={(e, valueobj) => {\n                              setLocation((prev) => ({\n                                ...prev,\n                                country: valueobj,\n                              }));\n                              onChange(e.target.value);\n                              setValue(\"compCountry\", valueobj.isoCode);\n                            }}\n                            isSearchable={true}\n                            value={value}\n                          />\n                        );\n                      }}\n                    />\n                  </div>\n                  <div className={`col-md-3 ${styles.rowWidth}  py-2`}>\n                    <label>\n                      State <span className=\"text-danger\">*</span>\n                    </label>\n                    <CustomController\n                      name={\"compState\"}\n                      control={control}\n                      error={errors?.compState}\n                      value={getValues(\"compState\")}\n                      rules={{\n                        required: saveDraft ? false : true,\n                        pattern: /^(?!\\s*$).+/,\n                      }}\n                      messages={{\n                        required: \"State is required\",\n                        pattern: \"State is Invalid\",\n                      }}\n                      render={({ field: { onChange, value }, ...fields }) => {\n                        return (\n                          <NormalMultiSelect\n                            {...fields}\n                            placeholder={\"Select State\"}\n                            isSearchable={true}\n                            options={stateOption}\n                            name=\"compState\"\n                            handleChange={(e, valueObj) => {\n                              onChange(e.target.value);\n                              setLocation((prev) => ({\n                                ...prev,\n                                state: valueObj,\n                              }));\n                            }}\n                            value={value}\n                          />\n                        );\n                      }}\n                    />\n                  </div>\n                  <div className={`col-md-3 ${styles.rowWidth}  py-2`}>\n                    <label>\n                      District / City <span className=\"text-danger\">*</span>\n                    </label>\n                    <CustomController\n                      name={\"compCity\"}\n                      control={control}\n                      error={errors?.compCity}\n                      value={getValues(\"CompCity\")}\n                      rules={{ required: saveDraft ? false : true }}\n                      messages={{ required: \"District / City is required\" }}\n                      render={({ field: { onChange, value }, ...fields }) => {\n                        return (\n                          <NormalMultiSelect\n                            {...fields}\n                            placeholder={\"Select District / City\"}\n                            options={cityOption}\n                            isSearchable={true}\n                            name=\"compCity\"\n                            handleChange={(e, value) => {\n                              onChange(e.target.value);\n                              setLocation((prev) => ({\n                                ...prev,\n                                city: value,\n                              }));\n                            }}\n                            value={value}\n                          />\n                        );\n                      }}\n                    />\n                  </div>\n                  <div className={`col-md-3 ${styles.rowWidth}  py-2`}>\n                    <label>\n                      Area <span className=\"text-danger\">*</span>\n                    </label>\n                    <InputBox\n                      className=\"login_input\"\n                      type=\"text\"\n                      value={getValues(\"compArea\")}\n                      name={\"compArea\"}\n                      placeholder=\"Enter area\"\n                      errors={errors}\n                      register={register(\"compArea\", {\n                        required: saveDraft ? false : true,\n                        pattern: /^(?!\\s+$)[A-Za-z0-9\\s]*$/,\n                      })}\n                    />\n                    <FormErrorMessage\n                      error={errors.compArea}\n                      messages={{\n                        required: \"Area is required\",\n                        pattern: \"Area name is invalid\",\n                      }}\n                    />\n                  </div>\n                  <div className={`col-md-3 ${styles.rowWidth}  py-2`}>\n                    <label>\n                      Landmark <span className=\"text-danger\">*</span>\n                    </label>\n                    <InputBox\n                      className=\"login_input\"\n                      type=\"text\"\n                      name={\"compLandmark\"}\n                      placeholder=\"Enter landmark\"\n                      errors={errors}\n                      value={getValues(\"compLandmark\")}\n                      register={register(\"compLandmark\", {\n                        required: saveDraft ? false : true,\n                        pattern: /^(?!\\s+$)[a-zA-Z0-9\\s\\-.,/+#\\s]*$/,\n                      })}\n                    />\n                    <FormErrorMessage\n                      error={errors.compLandmark}\n                      messages={{\n                        required: \"Landmark is required\",\n                        pattern: \"Landmark is invalid\",\n                      }}\n                    />\n                  </div>\n                  <div className={`col-md-3 ${styles.rowWidth}  py-2`}>\n                    <label>\n                      Postal Code <span className=\"text-danger\">*</span>\n                    </label>\n                    <InputBox\n                      className=\"login_input\"\n                      type=\"number\"\n                      onKeyDown={numberInput}\n                      name={\"compPostalCode\"}\n                      value={getValues(\"compPostalCode\")}\n                      placeholder=\"Enter postal code\"\n                      errors={errors}\n                      register={register(\"compPostalCode\", {\n                        required: saveDraft ? false : true,\n                        maxLength: 6,\n                        minLength: 6,\n                        pattern: /^[1-9]{1}[0-9]{2}[0-9]{3}$/,\n                      })}\n                    />\n                    <FormErrorMessage\n                      error={errors.compPostalCode}\n                      messages={{\n                        required: \"Postal code is required\",\n                        pattern: \"Postal code is invalid\",\n                        maxLength: \"Postal should be maximum of 6 numbers\",\n                        minLength: \"Postal should be minimum of 6 numbers\",\n                      }}\n                    />\n                  </div>\n\n                  <div className={` ${styles.AddressWidth}  py-2`}>\n                    <label>\n                      Google Map Link <span className=\"text-danger\">*</span>\n                    </label>\n                    <PopoverStickOnHover\n                      renderTooltipContent={() => (\n                        <div className=\"row m-0 justify-content-between\">\n                          <div className=\"col-10 p-0 pe-2\">\n                            <div className={styles.tooltipdesc}>\n                              {getValues(\"compMapLink\")}\n                            </div>\n                          </div>\n                          <div className=\"col-1 p-0  d-flex align-items-center\">\n                            <IconButton\n                              className=\"pe-2\"\n                              onClick={handleCopyText}\n                            >\n                              <img src={CopyIcon} alt=\"copy\" />\n                            </IconButton>\n                          </div>\n                        </div>\n                      )}\n                      value={\n                        watch(\"compMapLink\") &&\n                        !errors?.locationDetails?.googleMapLink\n                      }\n                      placement={\"top\"}\n                    >\n                      <div>\n                        <InputBox\n                          value={getValues(\"compMapLink\")}\n                          className=\"login_input\"\n                          type=\"text\"\n                          name={\"compMapLink\"}\n                          placeholder=\"Enter link\"\n                          register={register(\"compMapLink\", {\n                            required: saveDraft ? false : true,\n                            // pattern:\n                            // /^(http(s?):\\/\\/)?maps\\.app\\.goo\\.gl\\/[a-zA-Z0-9]+$/,\n                            pattern:\n                              /^(http|https):\\/\\/(www\\.)?google\\.com(\\.\\w*)?\\/maps\\/(place\\/[^@]*)?@([0123456789\\.,-]*z)(\\/data=[\\!:\\.\\-0123456789abcdefmsx]+)?/,\n                          })}\n                        />\n                      </div>\n                    </PopoverStickOnHover>\n                    {/* <FormErrorMessage\n              error={errors?.compMapLink}\n              messages={{\n                required: \"Map Link is required\",\n                pattern: \"Map Link is invalid\",\n              }}\n              position={\"absolute\"}\n            /> */}\n                    <FormErrorMessage\n                      error={errors.compMapLink}\n                      messages={{\n                        required: \"Google map Link is required\",\n                        pattern: \"Google map Link is invalid\",\n                      }}\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <hr />\n          <div className={`d-flex justify-content-end ${styles.btn} py-2 px-2`}>\n            <div className={styles.btnWidth}>\n              <NormalButton\n                className={\"draftBtn\"}\n                label={isPreviewScreen ? \"Cancel\" : \"Save as Draft\"}\n                //id={\"draftBtn\"}\n                innerref={childSaveDraftRef}\n                disabled={isDisabled}\n                onClick={debounce(handleSaveDraft, 800)}\n              />\n            </div>\n            <div className={styles.btnWidth}>\n              <NormalButton\n                className={\"submitBtn\"}\n                label={isPreviewScreen ? \"Save Changes\" : \"Save & Preview\"}\n                id=\"submitBtn\"\n                // disabled={errors  || isDisabled }\n                // onClick={handleNextTab}\n                // onClick={() => {\n                //   handleSubmit();\n                // }}\n                disabled={isDisabled}\n                onClick={debounce(handleSubmit(onsubmit), 800)}\n              // onClick={() => {\n              //   setOpenModal(true);\n              //   debounce(handleSubmit(onsubmit), 800);\n              // }}\n              />\n            </div>\n          </div>\n        </div>\n      ) : (\n        // preview Screen\n        <div className={styles.companyDetailsForm}>\n          <div className={`${styles.contentPart} px-3`}>\n            <div className=\"new-section py-2\">\n              <div className={styles.basicTitle}>\n                <h3>Company Basic Details</h3>\n              </div>\n              <div className={styles.basicForm}>\n                <div className={`row`}>\n                  <div\n                    className={`col-md-3 ${styles.rowWidth} d-flex flex-column  py-2`}\n                  >\n                    <label className=\"preview-label\">Company Name</label>\n                    <span className=\"preview-value1\">\n                      {getValues(\"companyName\")\n                        ? getValues(\"companyName\")\n                        : \"-\"}\n                    </span>\n                  </div>\n                  <div\n                    className={`col-md-3 ${styles.rowWidth} d-flex flex-column py-2`}\n                  >\n                    <label className=\"preview-label\">Mobile Number</label>\n                    <span className=\"preview-value1\">\n                      {getValues(\"companyContactMobile\")\n                        ? getValues(\"companyContactMobile\")\n                        : \"-\"}\n                    </span>\n                  </div>\n                  <div\n                    className={`col-md-3 ${styles.rowWidth} d-flex flex-column py-2`}\n                  >\n                    <label className=\"preview-label\">Registration Number</label>\n                    <span className=\"preview-value1\">\n                      {getValues(\"companyRegNumber\")\n                        ? getValues(\"companyRegNumber\")\n                        : \"-\"}\n                    </span>\n                  </div>\n                  <div\n                    className={`col-md-3 ${styles.rowWidth} d-flex flex-column  py-2`}\n                  >\n                    <label className=\"preview-label\">PAN Number</label>\n                    <span className=\"preview-value1\">\n                      {getValues(\"panCardNumber\")\n                        ? getValues(\"panCardNumber\")\n                        : \"-\"}\n                    </span>\n                  </div>\n                  <div\n                    className={`col-md-3 ${styles.rowWidth} d-flex flex-column py-2`}\n                  >\n                    <label className=\"preview-label\">GST Number</label>\n                    <span className=\"preview-value1\">\n                      {getValues(\"gstNumber\") ? getValues(\"gstNumber\") : \"-\"}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div className=\"new-section py-3\">\n              <div className=\"basic-title\">\n                <h3>Location Details</h3>\n              </div>\n              <div className=\"basic-form\">\n                <div className=\"row\">\n                  <div\n                    className={` ${styles.AddressWidth} d-flex flex-column  py-2`}\n                  >\n                    <label className=\"preview-label\">Address </label>\n                    {getValues(\"compAddressLine1\") ? (\n                      <span className=\"preview-value1\">\n                        {`\n                          ${getValues(\"compAddressLine1\")}\n                          ${getValues(\"compAddressLine2\")\n                            ? `, ${getValues(\"compAddressLine2\")}`\n                            : \"\"\n                          }`}\n                      </span>\n                    ) : (\n                      \"-\"\n                    )}\n                  </div>\n                  <div\n                    className={`col-md-3 ${styles.rowWidth} d-flex flex-column py-2`}\n                  >\n                    <label className=\"preview-label\">Country</label>\n                    <span className=\"preview-value1\">\n                      {getValues(\"compCountry\")\n                        ? getValues(\"compCountry\")\n                        : \"-\"}\n                    </span>\n                  </div>\n                  <div\n                    className={`col-md-3 ${styles.rowWidth} d-flex flex-column  py-2`}\n                  >\n                    <label className=\"preview-label\">State</label>\n                    <span className=\"preview-value1\">\n                      {getValues(\"compState\") ? getValues(\"compState\") : \"-\"}\n                    </span>\n                  </div>\n                  <div\n                    className={`col-md-3 ${styles.rowWidth} d-flex flex-column  py-2`}\n                  >\n                    <label className=\"preview-label\">City/District</label>\n                    <span className=\"preview-value1\">\n                      {cityValue !== \"\" ? cityValue : \"-\"}\n                    </span>\n                  </div>\n                  <div\n                    className={`col-md-3 ${styles.AddressWidth} d-flex flex-column  py-2`}\n                  >\n                    <label className=\"preview-label\">Area Name</label>\n                    <span className=\"preview-value1\">\n                      {getValues(\"compArea\") ? getValues(\"compArea\") : \"-\"}\n                    </span>\n                  </div>\n                  <div\n                    className={`col-md-3 ${styles.rowWidth} d-flex flex-column py-2`}\n                  >\n                    <label className=\"preview-label\">Landmark</label>\n                    <span className=\"preview-value1\">\n                      {getValues(\"compLandmark\")\n                        ? getValues(\"compLandmark\")\n                        : \"-\"}\n                    </span>\n                  </div>\n                  <div\n                    className={`col-md-3 ${styles.rowWidth} d-flex flex-column py-2`}\n                  >\n                    <label className=\"preview-label\">Postal Code</label>\n                    <span className=\"preview-value1\">\n                      {getValues(\"compPostalCode\")\n                        ? getValues(\"compPostalCode\")\n                        : \"-\"}\n                    </span>\n                  </div>\n                  <div\n                    className={` ${styles.rowWidth} d-flex flex-column  py-2`}\n                  >\n                    <label className=\"preview-label\">Google Map Link</label>\n                    {getValues(\"compMapLink\") ? (\n                      <>\n                        <a\n                          className={styles.viewMap}\n                          href={getValues(\"compMapLink\")}\n                          target=\"_blank\"\n                          rel=\"noreferrer\"\n                        >\n                          <span className={styles.viewMap}>View Map</span>\n                        </a>\n                      </>\n                    ) : (\n                      \"-\"\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          {!PendingProperty && PropertyStatus == \"PENDING\" ? <></> : <hr />}\n\n          {(!TotalDraft && PropertyStatus !== \"PENDING\") &&\n            <div className=\"d-flex justify-content-start\">\n              <div className={`d-flex justify-content-start ${styles.btn} py-2 px-2 col`}>\n                <div className={styles.btnWidth}>\n                  {PropertyStatus == \"APPROVED\" && UnitCreationDraft == false &&\n                    <NormalButton\n                      className={\"draftBtn\"}\n                      label={\"Add More Units\"}\n                      //id={\"draftBtn\"}\n                      //onClick={(e) => handleSaveDraft(e)}\n                      onClick={(e) => {\n                      }}\n                    />}\n                </div>\n              </div>\n              <div className={`d-flex justify-content-end ${styles.btn} py-2 px-2`}>\n\n                {PropertyStatus !== \"REJECTED\" && <div className={styles.btnWidth}>\n                  <NormalButton\n                    className={\"draftBtn\"}\n                    label={\"Edit Details\"}\n                    disabled={isDisabled}\n                    id={\"draftBtn\"}\n                    onClick={() => handleNextTab(activeTab, true)}\n                  // onClick={debounce(handleSaveDraft, 800)}\n                  />\n                </div>}\n                <div className={styles.btnWidth}>\n                  {PropertyStatus == \"APPROVED\" && UnitCreationDraft == true ?\n                    <NormalButton\n                      className={\"submitBtn\"}\n                      label={\"Continue Unit Creation\"}\n                      //id={\"draftBtn\"}\n                      //onClick={(e) => handleSaveDraft(e)}\n                      onClick={(e) => {\n                      }}\n                    /> :\n                    PropertyStatus == \"APPROVED\" && (UnitCreationDraft == null || UnitCreationDraft == \"\") ?\n                      <NormalButton\n                        className={\"submitBtn\"}\n                        label={\"Add Units\"}\n                        //id={\"draftBtn\"}\n                        //onClick={(e) => handleSaveDraft(e)}\n                        onClick={(e) => {\n                        }}\n                      /> :\n                      PropertyStatus == \"REJECTED\" ?\n                        <NormalButton\n                          className={\"submitBtn\"}\n                          label={\"Edit Details\"}\n                          disabled={isDisabled}\n                          id={\"draftBtn\"}\n                          onClick={() => handleNextTab(activeTab, true)}\n                        // onClick={debounce(handleSaveDraft, 800)}\n                        /> : <NormalButton\n                          className={\"submitBtn\"}\n                          label={\"Submit\"}\n                          id=\"submitBtn\"\n                          disabled={isDisabled}\n                          // onClick={() => handleLastSubmit()}\n                          onClick={debounce(handleSubmit(onsubmit), 800)}\n                        />}\n                </div>\n              </div>\n\n            </div>}\n\n        </div>\n      )}\n      <DeleteModal\n        visible={watch(\"openModal\") == true ? true : false}\n        handleClick={() => {\n          setOpenModal(false);\n          setValue(\"openModal\", false);\n          if (isPreviewScreen) {\n            handleNextTab(activeTab, false, isPreviewScreen);\n          }\n          if (showPreview) {\n            history.push(\"/inventory\");\n          } else if (Boolean(getValues(\"isDraft\")) == false) {\n            handleNextTab(0, false, true);\n          }\n          dispatch(setTabStatus());\n          setIsDisabled(false);\n          setValue(\"isDraft\", false);\n          setSaveDraft(false);\n        }}\n        PropertySubmited={true}\n        deleteModal={false}\n      />\n    </>\n  );\n};\n\nexport default CompanyDetailsForm;\n","import axios from \"axios\";\nimport { endpoints } from \"Constants/api\";\nimport axiosHelpers from \"Constants/axiosHelpers\";\nimport {\n  updateResidentTypes,\n  updatePropertyTypes,\n  setBasicDetails\n} from \"../redux/slice/basicSlice\";\n\n\n\nexport const addCompanyDetails = async (data) => {\n  let request = await axios({\n    method: \"post\",\n    url: `${endpoints?.companyDetails.ADD_COMPANY}`,\n    headers: {\n      // Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n    },\n    data,\n  }).catch(axiosHelpers);\n  return request;\n};\n\nexport const getCompanyDetails = async (propertyId, createdBy) => {\n  try {\n    const url = `${endpoints.companyDetails.GET_COMPANY_DETAILS}/${propertyId}/${createdBy}`;\n    const response = await axios.get(url, {\n      headers: {\n        // Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      },\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching company details:\", error);\n    throw error;\n  }\n};\nexport const searchCompanyName = async (search) => {\n    try {\n      const url = `${endpoints.companyDetails.SEARCH_COMPANY_NAME}?${search}`;\n      const response = await axios.get(url, {\n        headers: {\n          // Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      });\n      return response.data;\n    } catch (error) {\n      console.error(\"Error fetching company details:\", error);\n      throw error;\n    }\n  };\n  export const searchCompanyNameDetails = async (ID) => {\n    try {\n      const url = `${endpoints.companyDetails.GET_COMPANY_NAME_DETAILS}?id=${ID}`;\n      const response = await axios.get(url, {\n        headers: {\n          // Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n        },\n      });\n      return response;\n    } catch (error) {\n      console.error(\"Error fetching company details:\", error);\n      throw error;\n    }\n  };\nexport const updateCompanyDetails = async (body) => {\n  const request = await axios({\n    method: \"put\",\n    url: `${endpoints?.companyDetails.ADD_COMPANY}`,\n    headers: {\n      // Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n    },\n    data: body,\n  }).catch(axiosHelpers);\n\n  return request;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"companyDetailsForm\":\"CompanyDetailsForm_companyDetailsForm__114y6\",\"contentPart\":\"CompanyDetailsForm_contentPart__B7akU\",\"btn\":\"CompanyDetailsForm_btn__7y-yG\",\"rowWidth\":\"CompanyDetailsForm_rowWidth__DwASk\",\"AddressWidth\":\"CompanyDetailsForm_AddressWidth__BYbf5\",\"btnWidth\":\"CompanyDetailsForm_btnWidth__bqIRp\",\"viewMap\":\"CompanyDetailsForm_viewMap__4gySr\"};"],"names":["_ref","_errors$locationDetai","handleNextTab","showPreview","activeTab","isPreviewScreen","childSaveDraftRef","_useForm","useForm","mode","register","handleSubmit","getValues","setValue","control","reset","watch","_useForm$formState","formState","errors","isDirty","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","saveDraft","setSaveDraft","_useState3","_useState4","setOpenModal","_useState5","_useState6","selectedCountry","setSelectedCountry","_useState7","_useState8","setSelectedCountryISO","_useState9","_useState10","setSelectedStateISO","_useState11","_useState12","setSelectedCityISO","_useState13","_useState14","putMethod","setPutMethod","_useState15","_useState16","Data","setData","_useState17","_useState18","isDisabled","setIsDisabled","_useState19","_useState20","isPreview","_useState21","_useState22","cityValue","setCity","_useState23","_useState24","CompanyName","setCompanyName","_useState25","_useState26","companyData","setCompanyData","_useState27","_useState28","showData","setShowData","_useState29","_useState30","CompanyNameID","setCompanyNameID","_useState31","_useState32","companyId","setCompanyID","_useState33","_useState34","PreviousCompanyid","setpreviousCompanyid","_useState35","country","state","city","_useState36","location","setLocation","propertyId","useSelector","basic","UnitCreationDraft","unitCreationDraft","PropertyStatus","propertyStatus","TotalDraft","PendingProperty","showPendingProperty","useEffect","setTabDirty","countryOptions","useMemo","Country","getAllCountries","map","o","_objectSpread","value","name","label","stateOption","State","isoCode","cityOption","filterCity","City","getCitiesOfState","prevLocation","newLocations","find","getCompanyDetailData","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","page","response","_data$locationDetails","_data$locationDetails2","_data$locationDetails3","_data$locationDetails4","_data$locationDetails5","_data$locationDetails6","_data$locationDetails7","_data$locationDetails8","_data$locationDetails9","data","wrap","_context","prev","next","getCompanyDetails","sent","status","locationDetails","companyName","mobileNumber","registrationNumber","panNumber","gstNumber","addressLine1","addressLine2","area","googleMapLink","landmark","postalCode","countryISO","stateISO","_id","Toast","type","message","t0","console","log","stop","_x","apply","arguments","handleSaveDraft","_ref3","_callee2","e","_context2","abrupt","setTimeout","onsubmit","arg1","_x2","_ref4","_callee3","_location$state","_location$country","_location$city","_ref5","_location$state2","_location$country2","_location$city2","body","_context3","sleep","id","previousCompanyId","isDraft","String","toUpperCase","countryCode","_defineProperty","addCompanyDetails","Boolean","setTabStatus","_x3","handleCopyText","navigator","clipboard","writeText","searchCompanyNameData","_ref6","_callee4","_context4","searchCompanyName","concat","error","searchCompanyNameDetailsfun","_ref7","_callee5","_data$locationDetails10","_data$locationDetails11","_data$locationDetails12","_data$locationDetails13","_data$locationDetails14","_data$locationDetails15","_data$locationDetails16","_data$locationDetails17","_data$locationDetails18","_context5","searchCompanyNameDetails","handlesearchCompanyName","useCallback","debounceFunction","_jsxs","_Fragment","children","className","styles","companyDetailsForm","contentPart","_jsx","basicTitle","basicForm","rowWidth","AddressWidth","viewMap","href","target","rel","btn","btnWidth","NormalButton","onClick","disabled","debounce","InputBox","onChange","placeholder","required","pattern","searchValue","searchData","SearchCompanyNameID","FormErrorMessage","messages","CommonLabelInput","onKeyDown","numberInput","prefixText","minLength","maxLength","companyContactMobile","upperCaseLabel","companyRegNumber","panCardNumber","compAddressLine1","compAddressLine2","CustomController","compCountry","rules","render","_ref8","_ref8$field","field","fields","_objectWithoutProperties","_excluded","NormalMultiSelect","options","handleChange","valueobj","isSearchable","compState","_ref9","_ref9$field","_excluded2","valueObj","compCity","_ref10","_ref10$field","_excluded3","compArea","compLandmark","compPostalCode","PopoverStickOnHover","renderTooltipContent","tooltipdesc","IconButton","src","CopyIcon","alt","placement","compMapLink","innerref","DeleteModal","visible","handleClick","history","push","PropertySubmited","deleteModal","request","axios","method","url","endpoints","companyDetails","ADD_COMPANY","headers","catch","axiosHelpers","createdBy","GET_COMPANY_DETAILS","get","search","SEARCH_COMPANY_NAME","_x4","ID","GET_COMPANY_NAME_DETAILS","_x5","updateCompanyDetails","_x6"],"sourceRoot":""}