{"version":3,"file":"static/js/1803.dda825bc.chunk.js","mappings":"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","sources":["Constants/api.js","Constants/axiosHelpers.js","Constants/toast.js","service/Auth.js"],"sourcesContent":["// .ENV\nexport const baseUrl = \"http://doodlebluelive.com:2223/api/v1\",\n  authService = `${baseUrl}/users`,\n  propertyBasicDetailsService = `${baseUrl}/property`,\n  propertynotificationService =`${baseUrl}/notifications/property`;\n\nexport const endpoints = {\n  auth: {\n    SEND_OTP: `${authService}/sendOTP`,\n    VERIFY_OTP: `${authService}/verifyOTP`,\n    CREATE_PASSWORD: `${authService}/createPassword`,\n    LOGIN: `${authService}/signIn`,\n    RESET_PASSWORD: `${authService}/resetPassword`,\n    FORGET_PASSWORD: `${authService}/forgetPassword `,\n    LOGOUT: `${authService}/logout`,\n  },\n  basicdetails: {\n    ADD_BASIC_DETAILS: `${propertyBasicDetailsService}/basicDetails`,\n    ADD_RESIDENT_TYPE: `${propertyBasicDetailsService}/residentType`,\n    ADD_PROPERTY_TYPE: `${propertyBasicDetailsService}/addType`,\n    GET_PROPERTY_TYPES: `${propertyBasicDetailsService}/typeList`,\n    GET_RESIDENT_TYPES: `${propertyBasicDetailsService}/residentType`,\n    GET_BASIC_DETAILS: `${propertyBasicDetailsService}/basicDetails`,\n  },\n  uploadImageAndDocuments: {\n    UPLOAD_IMAGES_AND_DOCUMENTS: `${propertyBasicDetailsService}/fileUploads`,\n    PROCEED_IMAGES_AND_DOCUMENTS: `${propertyBasicDetailsService}/createMedia`,\n    GET_IMAGES_AND_DOCUMENTS: `${propertyBasicDetailsService}/media/list`,\n  },\n  companyDetails: {\n    ADD_COMPANY: `${propertyBasicDetailsService}/company`,\n    GET_COMPANY_DETAILS: `${propertyBasicDetailsService}/company`,\n    SEARCH_COMPANY_NAME:`${propertyBasicDetailsService}/company/search`,\n    GET_COMPANY_NAME_DETAILS:`${propertyBasicDetailsService}/singleCompany`,\n  },\n  stayDetails: {\n    ADD_UPDATE_STAY_TYPE: `${propertyBasicDetailsService}/stayType`,\n    ADD_DEFINE_ROOM_TYPE: `${propertyBasicDetailsService}/roomType`,\n    GET_STAY_TYPE: `${propertyBasicDetailsService}/stayType`,\n  },\n  chargersAndTimings: {\n    ADD_CHARGERS_TIMINGS: `${propertyBasicDetailsService}/chargesTimings`,\n    GET_CHARGERS_TIMINGS: `${propertyBasicDetailsService}/chargesTimings`,\n  },\n  roomPackages: {\n    ADD_ROOM_PACKAGES: `${propertyBasicDetailsService}/roomPackage`,\n    GET_ROOM_PACKAGES: `${propertyBasicDetailsService}/roomPackage`,\n    GET_ROOM_TYPE_LIST: `${propertyBasicDetailsService}/roomType`,\n  },\n  serviceAmenity: {\n    GET_FREQUENCY_LIST: `${propertyBasicDetailsService}/frequencyList`,\n    ADD_FREQUENCY: `${propertyBasicDetailsService}/addFrequencies`,\n    SERVICES_AMENITIES: `${propertyBasicDetailsService}/servicesAmenities`,\n    GET_ROOM_TYPE: `${propertyBasicDetailsService}/roomType`,\n  },\n  tabStatus: {\n    GET_TAB_STATUS: `${propertyBasicDetailsService}/tabStatus`,\n  },\n  propertyList: {\n    GET_PROPERTY_LIST: `${propertyBasicDetailsService}/list`,\n    DELETE_PROPERTY_LIST: `${propertyBasicDetailsService}/delete`,\n    DEACTIVATE_PROPERTY:`${propertyBasicDetailsService}/status`,\n    NOTIFICATION_LIST:`${propertynotificationService}`,\n    READ_NOTIFICATION:`${baseUrl}/notifications/addressNotification`\n  },\n};\n","import { history } from \"../helpers\";\nimport { Toast } from \"./toast\";\n\nexport default function axiosHelpers(error, action, checkUnauthorized = true){\n  const requestStatus = error?.request?.status;\n  const responseStatus = error?.response?.status;\n  const dataStatus = error?.response?.data?.status;\n\n  Toast({\n    type: \"error\",\n    message:\n      error?.response?.data?.data?.message ||\n      error?.response?.data?.Error ||\n      error?.response?.data?.message || \n      error?.message,\n  });\n  \n  /* if (!localStorage.getItem(\"token\")) {\n    history.push(\"/auth\");\n  }\n\n  if (dataStatus === 400 || responseStatus === 400 || requestStatus === 400) {\n    if (localStorage.getItem(\"token\")) {\n      Toast({\n        type: \"error\",\n        message:\n          error?.response?.data?.data?.message ||\n          error?.response?.data?.message ||\n          error?.response?.data?.data,\n      });\n    }\n  }\n\n  if (dataStatus === 401 || responseStatus === 401 || requestStatus === 401) {\n    localStorage.clear();\n    history.push(\"/auth\");\n  }\n\n  if (\n    checkUnauthorized &&\n    (dataStatus === 409 || responseStatus === 409 || requestStatus === 409)\n  ) {\n    if (localStorage.getItem(\"token\")) {\n      Toast({ type: \"error\", message: error?.response?.data?.message });\n    }\n  }\n\n  if (action === \"uploadImage\") {\n    if (dataStatus === 500 || responseStatus === 500 || requestStatus === 500) {\n      if (localStorage.getItem(\"token\")) {\n        const message = error?.response?.data?.message;\n        message && Toast({ type: \"error\", message });\n      } else history.push(\"/auth\");\n    }\n  } */\n\n  if (error.response) return error.response;\n  else if (error.request) return error.request;\n  else return error.message;\n};\n","import { NotificationManager } from \"react-notifications\";\nimport \"react-notifications/lib/notifications.css\";\n\nexport const Toast = ({ type, message }) => {\n  NotificationManager.listNotify.forEach((n) =>\n    NotificationManager.remove({ id: n.id })\n  );\n  switch (type) {\n    case \"success\":\n      NotificationManager.success(message, '', 3000);\n      break;\n    case \"error\":\n      NotificationManager.error(message, '', 3000);\n      break;\n    case \"info\":\n      NotificationManager.info(message, '', 3000);\n      break;\n    case \"warning\":\n      NotificationManager.warning(message, '', 3000);\n      break;\n  }\n};\n","import axios from \"axios\";\nimport { endpoints } from \"Constants/api\";\nimport axiosHelpers from \"Constants/axiosHelpers\";\n\nexport const SignInAPI = async (data) => {\n  const request = await axios({\n    method: \"post\",\n    url: endpoints.auth.SIGN_IN,\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n    },\n    data: data,\n  }).catch(axiosHelpers);\n  return request;\n};\n\nexport const resetPassword = async (data) => {\n  let request = await axios({\n    method: \"post\",\n    url: endpoints.auth.RESET_PASSWORD,\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n    },\n    data: data,\n  });\n  return request;\n};\n\nexport const verifyOtp = async (data) => {\n  let request = await axios({\n    method: \"post\",\n    url: endpoints.auth.VERIFY_OTP,\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n    },\n    data: data,\n  });\n  return request;\n};\n\nexport const updateUser = async (data) => {\n  let request = await axios({\n    method: \"put\",\n    url: endpoints.auth.UPDATE_USER,\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n    },\n    data: data,\n  });\n  return request;\n};\n\nexport const changePassword = async (data) => {\n  let request = await axios({\n    method: \"put\",\n    url: endpoints.auth.CHANGE_PASSWORD,\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n    },\n    data: data,\n  });\n  return request;\n};\n\nexport const forgotPassword = async (data, token) => {\n  let request = await axios({\n    method: \"put\",\n    url: endpoints.auth.FORGOT_PASSWORD,\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n    },\n    data: data,\n  });\n  return request;\n};\n\nexport const getUserById = async (id) => {\n  let request = await axios({\n    method: \"get\",\n    url: `${endpoints.auth.GET_USER_BY_ID}/${id}`,\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n    },\n  });\n  return request;\n};\n"],"names":["baseUrl","authService","concat","propertyBasicDetailsService","propertynotificationService","endpoints","auth","SEND_OTP","VERIFY_OTP","CREATE_PASSWORD","LOGIN","RESET_PASSWORD","FORGET_PASSWORD","LOGOUT","basicdetails","ADD_BASIC_DETAILS","ADD_RESIDENT_TYPE","ADD_PROPERTY_TYPE","GET_PROPERTY_TYPES","GET_RESIDENT_TYPES","GET_BASIC_DETAILS","uploadImageAndDocuments","UPLOAD_IMAGES_AND_DOCUMENTS","PROCEED_IMAGES_AND_DOCUMENTS","GET_IMAGES_AND_DOCUMENTS","companyDetails","ADD_COMPANY","GET_COMPANY_DETAILS","SEARCH_COMPANY_NAME","GET_COMPANY_NAME_DETAILS","stayDetails","ADD_UPDATE_STAY_TYPE","ADD_DEFINE_ROOM_TYPE","GET_STAY_TYPE","chargersAndTimings","ADD_CHARGERS_TIMINGS","GET_CHARGERS_TIMINGS","roomPackages","ADD_ROOM_PACKAGES","GET_ROOM_PACKAGES","GET_ROOM_TYPE_LIST","serviceAmenity","GET_FREQUENCY_LIST","ADD_FREQUENCY","SERVICES_AMENITIES","GET_ROOM_TYPE","tabStatus","GET_TAB_STATUS","propertyList","GET_PROPERTY_LIST","DELETE_PROPERTY_LIST","DEACTIVATE_PROPERTY","NOTIFICATION_LIST","READ_NOTIFICATION","axiosHelpers","error","action","_error$request","_error$response","_error$response2","_error$response2$data","_error$response3","_error$response3$data","_error$response3$data2","_error$response4","_error$response4$data","_error$response5","_error$response5$data","request","status","response","data","Toast","type","message","Error","_ref","NotificationManager","listNotify","forEach","n","remove","id","success","info","warning","SignInAPI","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","axios","method","url","SIGN_IN","headers","Authorization","localStorage","getItem","catch","sent","abrupt","stop","_x","apply","arguments","resetPassword","_ref2","_callee2","_context2","_x2","verifyOtp","_ref3","_callee3","_context3","_x3","updateUser","_ref4","_callee4","_context4","UPDATE_USER","_x4","changePassword","_ref5","_callee5","_context5","CHANGE_PASSWORD","_x5","forgotPassword","_ref6","_callee6","token","_context6","FORGOT_PASSWORD","_x6","_x7","getUserById","_ref7","_callee7","_context7","GET_USER_BY_ID","_x8"],"sourceRoot":""}