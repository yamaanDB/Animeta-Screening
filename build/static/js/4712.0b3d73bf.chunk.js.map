{"version":3,"file":"static/js/4712.0b3d73bf.chunk.js","mappings":"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","sources":["assets/images/infoIcon.svg","components/Modules/Inventory/BasicDetailsForm/index.jsx","components/UI/common/ReactSearchSelect/index.jsx","components/UI/common/Tooltip/index.jsx","webpack://Boston-Living/./src/components/Modules/Inventory/BasicDetailsForm/index.module.scss?f90e","webpack://Boston-Living/./src/components/UI/common/ReactSearchSelect/ReactSearchDropdown.module.scss?19ca","webpack://Boston-Living/./src/components/UI/common/Tooltip/Tooltip.module.scss?d6a2"],"sourcesContent":["var _path, _path2, _path3, _path4, _path5, _path6;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgInfoIcon(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 17.8837C12.4238 17.8837 12.7674 17.5401 12.7674 17.1163V10.9767C12.7674 10.5529 12.4238 10.2093 12 10.2093C11.5762 10.2093 11.2326 10.5529 11.2326 10.9767V17.1163C11.2326 17.5401 11.5762 17.8837 12 17.8837Z\",\n    fill: \"#1E2528\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 6.88372C12.5651 6.88372 13.0233 7.34185 13.0233 7.90698C13.0233 8.47211 12.5651 8.93023 12 8.93023C11.4349 8.93023 10.9767 8.47211 10.9767 7.90698C10.9767 7.34185 11.4349 6.88372 12 6.88372Z\",\n    fill: \"#1E2528\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M1 12C1 5.92487 5.92487 1 12 1C18.0751 1 23 5.92487 23 12C23 18.0751 18.0751 23 12 23C5.92487 23 1 18.0751 1 12ZM12 2.53488C6.77256 2.53488 2.53488 6.77256 2.53488 12C2.53488 17.2274 6.77256 21.4651 12 21.4651C17.2274 21.4651 21.4651 17.2274 21.4651 12C21.4651 6.77256 17.2274 2.53488 12 2.53488Z\",\n    fill: \"#1E2528\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 17.8837C12.4238 17.8837 12.7674 17.5401 12.7674 17.1163V10.9767C12.7674 10.5529 12.4238 10.2093 12 10.2093C11.5762 10.2093 11.2326 10.5529 11.2326 10.9767V17.1163C11.2326 17.5401 11.5762 17.8837 12 17.8837Z\",\n    stroke: \"#1E2528\",\n    strokeWidth: 0.5\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 6.88372C12.5651 6.88372 13.0233 7.34185 13.0233 7.90698C13.0233 8.47211 12.5651 8.93023 12 8.93023C11.4349 8.93023 10.9767 8.47211 10.9767 7.90698C10.9767 7.34185 11.4349 6.88372 12 6.88372Z\",\n    stroke: \"#1E2528\",\n    strokeWidth: 0.5\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M1 12C1 5.92487 5.92487 1 12 1C18.0751 1 23 5.92487 23 12C23 18.0751 18.0751 23 12 23C5.92487 23 1 18.0751 1 12ZM12 2.53488C6.77256 2.53488 2.53488 6.77256 2.53488 12C2.53488 17.2274 6.77256 21.4651 12 21.4651C17.2274 21.4651 21.4651 17.2274 21.4651 12C21.4651 6.77256 17.2274 2.53488 12 2.53488Z\",\n    stroke: \"#1E2528\",\n    strokeWidth: 0.5\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgInfoIcon);\nexport default __webpack_public_path__ + \"static/media/infoIcon.872334204f652c2ba8a1ac77cb2c8d3d.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useState, useMemo, memo } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useForm } from \"react-hook-form\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Tooltip from \"react-bootstrap/Tooltip\";\nimport Table from \"react-bootstrap/Table\";\n// styles\nimport styles from \"./index.module.scss\";\n// internal components\nimport FormErrorMessage from \"components/UI/common/ErrorMessage\";\nimport InputBox from \"components/UI/common/InputBox/InputBox\";\nimport NormalMultiSelect from \"components/UI/common/NormalMultiSelect\";\nimport CustomController from \"components/UI/common/Controller\";\nimport NormalButton from \"components/UI/common/NormalButton/NormalButton\";\n//import InputGroup from \"components/UI/common/InputGruops\";\nimport { sleep } from \"Constants/helperFunctions\";\nimport CommonLabelInput from \"components/UI/common/CommonLabelInput\";\nimport LandlineInput from \"components/UI/common/LandlineInput\";\nimport ReactSearchSelect from \"components/UI/common/ReactSearchSelect\";\nimport { numberInput } from \"helpers/validation\";\nimport {\n  addBasicDetails,\n  addResidentType,\n  getResidentTypes,\n  getPropertyTypes,\n  addPropertyType,\n  getBasicDetails,\n} from \"service/BasicDetails\";\nimport {\n  setPropertyId,\n  setTabDirty,\n  setTabStatus,\n} from \"redux/slice/basicSlice\";\nimport { Country, State, City } from \"country-state-city\";\nimport CopyIcon from \"assets/icons/copy.svg\";\nimport { IconButton } from \"@mui/material\";\nimport PopoverStickOnHover from \"components/UI/common/PopoverStickOnHover\";\nimport debounce from \"lodash/debounce\";\nimport TooltipHover from \"components/UI/common/Tooltip\";\n\nconst BasicDetailsForm = ({\n  handleNextTab,\n  showPreview,\n  activeTab,\n  isPreviewScreen,\n  childSaveDraftRef,\n}) => {\n  const defaultValues = {\n    // companyId: \"64e7a175207b3bd569c8c3bc\",\n    propertyName: \"\",\n    propertyType: \"\",\n    propertyTypeName: \"\",\n    status: \"\",\n    landlineStateCode: \"\",\n    landlineNumber: \"\",\n    countryCode: \"+91\",\n    mobileNumber: \"\",\n    residentType: [],\n    website: \"\",\n    locationDetails: {\n      addressLine1: \"\",\n      addressLine2: \"\",\n      country: \"\",\n      state: \"\",\n      city: \"\",\n      area: \"\",\n      landmark: \"\",\n      postalCode: \"\",\n      googleMapLink: \"\",\n      latitude: \"\",\n      longitude: \"\",\n      stateISO: \"\",\n      countryISO: \"\",\n    },\n    pocDetails: {\n      name: \"\",\n      emailId: \"\",\n      countryCode: \"+91\",\n      mobileNumber: \"\",\n      role: \"\",\n      staffId: \"64ec6e75f928701f01dd1c84\",\n    },\n    secPocDetails: [\n      {\n        name: \"\",\n        emailId: \"\",\n        countryCode: \"+91\",\n        mobileNumber: \"\",\n        role: \"\",\n        staffId: \"64ec6e75f928701f01dd1c84\",\n      },\n      {\n        name: \"\",\n        emailId: \"\",\n        countryCode: \"+91\",\n        mobileNumber: \"\",\n        role: \"\",\n        staffId: \"64ec6e75f928701f01dd1c84\",\n      },\n    ],\n    isDraft: false,\n  };\n  const {\n    register,\n    handleSubmit,\n    getValues,\n    setValue,\n    reset,\n    control,\n    formState: { errors, isDirty, dirtyFields },\n    watch,\n    trigger,\n    setError,\n    clearErrors,\n  } = useForm({\n    //mode: \"all\",\n    mode: \"onChange\",\n    defaultValues,\n    //reValidateMode: \"onChange\",\n  });\n\n  const dispatch = useDispatch();\n  const residentTypes = useSelector((state) => state.basic.residentTypes);\n  const propertyTypes = useSelector((state) => state.basic.propertyTypes);\n  const propertyId = useSelector((state) => state.basic.propertyId);\n  //const propertyId = \"652414b6aedac4d4e61d835a\";\n  const basicDetails = useSelector((state) => state.basic.basicDetails);\n  const [propertyTypeName, setpropertyTypeName] = useState(\"\");\n  const [isDisabled, setIsDisabled] = useState(false);\n  const [location, setLocation] = useState({\n    country: null,\n    state: null,\n    city: null,\n  });\n\n  const PropertyStatus = useSelector((state) => state.basic.propertyStatus);\n  const UnitCreationDraft = useSelector(\n    (state) => state.basic.unitCreationDraft\n  );\n  const TotalDraft = useSelector((state) => state.basic.TotalDraft);\n  const PendingProperty = useSelector(\n    (state) => state.basic.showPendingProperty\n  );\n  console.log(TotalDraft, \"ttdraftValue\");\n\n  // useEffect(() => {\n  //   window.addEventListener(\"beforeunload\", alertUser);\n  //   return () => {\n  //     window.removeEventListener(\"beforeunload\", alertUser);\n  //   };\n  // }, []);\n  // const alertUser = (e) => {\n  //   alert(\"your data may lost\");\n  //   e.preventDefault();\n  //   e.returnValue = \"\";\n  // };\n\n  useEffect(() => {}, [watch]);\n\n  useEffect(() => {\n    dispatch(getResidentTypes());\n    dispatch(getPropertyTypes());\n  }, [dispatch]);\n  console.log(propertyId, \"propertyId\");\n  useEffect(() => {\n    propertyId && dispatch(getBasicDetails(propertyId));\n    // alert(propertyId);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [propertyId]);\n\n  const countryOptions = useMemo(() => {\n    // const countries = [\n    //   {\n    //     currency: \"INR\",\n    //     flag: \"IN\",\n    //     isoCode: \"IN\",\n    //     latitude: \"20.00000000\",\n    //     longitude: \"77.00000000\",\n    //     name: \"India\",\n    //     phonecode: \"91\",\n    //     timezones: [\n    //       { zoneName: 'Asia/Kolkata', gmtOffset: 19800, gmtOffsetName: 'UTC+05:30', abbreviation: 'IST', tzName: 'Indian Standard Time' }\n    //     ],\n    //   },];\n    const countries = Country?.getAllCountries() || [];\n    return countries?.map((o) => ({ value: o.name, label: o.name, ...o }));\n  }, []);\n\n  const stateOption = useMemo(() => {\n    const filterStates = location?.country\n      ? State.getStatesOfCountry(location.country.isoCode)\n      : [];\n    return filterStates?.map((o) => ({ value: o.name, label: o.name, ...o }));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [location.country, location.state]);\n\n  const cityOption = useMemo(() => {\n    let filterCity = [];\n    if (location.country && location.state) {\n      filterCity = City.getCitiesOfState(\n        location.country.isoCode,\n        location.state.isoCode\n      );\n    }\n    return filterCity.map((o) => ({ value: o.name, label: o.name, ...o }));\n  }, [location.country, location.state]);\n\n  useEffect(() => {\n    const fillResidentType = (value) => {\n      const values = residentTypes.reduce((acc, val) => {\n        const existData = value.residentType.find((o) => o._id === val._id);\n        if (existData) {\n          acc.push(val);\n        }\n        return acc;\n      }, []);\n\n      return values;\n    };\n\n    const removeUnderscoreId = (restValues) => {\n      return restValues.map((o) => {\n        const { _id, ...options } = o;\n        return {\n          ...options,\n        };\n      });\n    };\n\n    const prefilledValues = (newValues) => {\n      const {\n        __v,\n        _id,\n        approvalStatus,\n        unitAdded,\n        updatedAt,\n        createdAt,\n        isDraft,\n        ...restValues\n      } = newValues;\n      const secPocDetails = [...restValues?.secPocDetails];\n      reset((values) => {\n        const saver = {\n          ...values,\n          ...restValues,\n          secPocDetails: removeUnderscoreId(restValues?.secPocDetails),\n          residentType: fillResidentType(restValues),\n        };\n        return { ...saver };\n      });\n    };\n    basicDetails && prefilledValues(basicDetails);\n    if (propertyTypes?.length && getValues(\"propertyType\")) {\n      const getSelectedPropertyType = propertyTypes.find(\n        (a) => a?.value === getValues(\"propertyType\")\n      );\n      if (getSelectedPropertyType?.label) {\n        setpropertyTypeName(getSelectedPropertyType?.label);\n      }\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [basicDetails]);\n\n  useEffect(() => {\n    if (basicDetails) {\n      const { country, state, city } = basicDetails.locationDetails;\n      const newLocations = { ...location };\n      if (!newLocations.country) {\n        newLocations.country =\n          countryOptions.find((o) => o.name === country) || null;\n      }\n      if (!newLocations.state) {\n        newLocations.state = stateOption.find((o) => o.name === state) || null;\n      }\n      if (!newLocations.city) {\n        newLocations.city = cityOption.find((o) => o.name === city) || null;\n      }\n      setLocation(newLocations);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [basicDetails, countryOptions, stateOption, cityOption]);\n\n  useEffect(() => {\n    dispatch(setTabDirty(isDirty));\n  }, [isDirty]);\n\n  const statusOptions = [\n    { value: \"ACTIVE\", label: \"Active\" },\n    { value: \"UPCOMING\", label: \"Upcoming\" },\n  ];\n\n  const roles = [\n    { value: \"CORP_SALES_MANAGER\", label: \"Corp Sales Manager\" },\n    { value: \"CORP_SALES_EXECUTIVE\", label: \"Corp Sales Executive\" },\n    { value: \"FRONT_OFFICE_EXECUTIVE\", label: \"Front Office Executive\" },\n    { value: \"FRONT_OFFICE_MANAGER\", label: \"Front Office Manager\" },\n    { value: \"RETAIL_SALES_EXECUTIVE\", label: \"Retail Sales Executive\" },\n    { value: \"RETAIL_SALES_MANAGER\", label: \"Retail Sales Manager\" },\n    { value: \"PROPERTY_MANAGER\", label: \"Property Manager\" },\n  ];\n\n  const [saveDraft, setSaveDraft] = useState(false);\n  const onsubmit = async (data) => {\n    if (!saveDraft && data.landlineNumber && !data.landlineStateCode) {\n      setError(\"landlineNumber\", { type: \"requiredSTDCode\" });\n      return false;\n    }\n\n    try {\n      setIsDisabled(true);\n      const isPost = true;\n      let form = {\n        ...data,\n        propertyTypeName: propertyTypeName,\n        landlineStateCode: data?.landlineStateCode,\n        residentType: data.residentType.map((o) => ({\n          residentType: o.label,\n          residentTypeId: o.value,\n          _id: o.value,\n        })),\n        locationDetails: {\n          ...data.locationDetails,\n          country: location.country?.name || \"\",\n          state: location.state?.name || \"\",\n          latitude: location.city?.latitude || \"\",\n          longitude: location.city?.longitude || \"\",\n        },\n        ...(propertyId ? { id: propertyId } : {}),\n      };\n\n      const response = await addBasicDetails(form, isPost);\n\n      if (response.status == 200) {\n        dispatch(setTabDirty(false));\n        dispatch(setTabStatus());\n        setIsDisabled(false);\n        dispatch(setPropertyId(response.data.data._id));\n        if (!Boolean(getValues(\"isDraft\"))) {\n          if (isPreviewScreen)\n            handleNextTab(activeTab, false, isPreviewScreen, true);\n          else handleNextTab(null, false, false, true);\n          propertyId && dispatch(getBasicDetails(propertyId));\n        }\n      } else {\n        setIsDisabled(false);\n      }\n      // await fetch()\n      //await setSaveDraft(false);\n      // setTimeout(async () => {\n\n      // }, 500);\n    } catch (e) {\n      // handle your error\n      setIsDisabled(false);\n    }\n  };\n\n  // const handleCreateProperty = (inputValue) => {\n  //   const newValue = { value: inputValue.toLowerCase(), label: inputValue };\n  //   setPropertyTypeInfo([...propertyTypeOption, newValue]);\n  //   //setMemberName(newValue);\n  //   // reset({\n  //   //   memberName: newValue,\n  //   // });\n  // };\n\n  const handleSaveDraft = async (e) => {\n    await setSaveDraft(true);\n    handleSubmit(onsubmit, (arg1) => {})(e);\n    // setTimeout(async () => {\n    //   await setSaveDraft(false);\n    // }, 800);\n  };\n\n  const handleAddResidentType = (data) => {\n    const residentTypes = data.fieldArray.map((o) => ({\n      residentType: o.name,\n    }));\n    addResidentType({\n      types: residentTypes,\n    }).then(() => {\n      dispatch(getResidentTypes());\n    });\n  };\n\n  const handleAddPropertyType = (data) => {\n    addPropertyType({\n      types: data.fieldArray,\n    }).then(() => {\n      dispatch(getPropertyTypes());\n    });\n  };\n\n  const handleCopyText = () => {\n    navigator.clipboard.writeText(watch(\"locationDetails.googleMapLink\"));\n  };\n\n  const propertyTypePreviewValue = useMemo(() => {\n    if (showPreview) {\n      return getValues(\"propertyType\")\n        ? propertyTypes.find((o) => o.value === getValues(\"propertyType\"))\n            ?.label\n        : getValues(\"propertyType\");\n    }\n    return \"\";\n  }, [propertyTypes, showPreview, getValues]);\n\n  const statusPreviewValue = useMemo(() => {\n    if (showPreview) {\n      return getValues(\"status\")\n        ? statusOptions.find((o) => o.value === getValues(\"status\"))?.label\n        : getValues(\"status\");\n    }\n    return \"\";\n  }, [showPreview, statusOptions, getValues]);\n\n  const residentTypeValue = watch(\"residentType\");\n  const residentTypePreviewValue = useMemo(() => {\n    if (showPreview) {\n      if (residentTypeValue.length > 2) {\n        return (\n          residentTypeValue\n            .map((o) => o.label)\n            .slice(0, 2)\n            .join(\", \") + \",\"\n        );\n      } else {\n        return residentTypeValue.map((o) => o.label).join(\", \");\n      }\n    }\n    return \"\";\n  }, [showPreview, residentTypeValue]);\n\n  const primaryRoleValue = useMemo(() => {\n    if (showPreview) {\n      const value = getValues(\"pocDetails.role\");\n      return value ? roles.find((o) => o.value === value)?.label : value;\n    }\n    return \"\";\n  }, [showPreview, roles]);\n\n  const secondaryRoleValue = useMemo(() => {\n    if (showPreview) {\n      const value = getValues(\"secPocDetails.0.role\");\n      return value ? roles.find((o) => o.value === value)?.label : value;\n    }\n    return \"\";\n  }, [showPreview, roles]);\n\n  const secondaryTwoRoleValue = useMemo(() => {\n    if (showPreview) {\n      const value = getValues(\"secPocDetails.1.role\");\n      return value ? roles.find((o) => o.value === value)?.label : value;\n    }\n    return \"\";\n  }, [showPreview, roles]);\n\n  return (\n    <div className={styles.basicInfo}>\n      <div className={`${styles.contentPart} px-3`}>\n        <div className=\"new-section py-2\">\n          <div className={styles.basicTitle}>\n            <h3 className={styles.propertyLabel}>Property Details</h3>\n          </div>\n          <div className={styles.basicForm}>\n            <div className={`row`}>\n              <div className={`col-md-3 ${styles.rowWidth} py-2`}>\n                <label className={showPreview ? \"preview-label\" : \"\"}>\n                  Property Name\n                  {!showPreview && <span className=\"text-danger\">*</span>}\n                </label>\n                {showPreview ? (\n                  <div className=\"preview-value1\">\n                    {getValues(\"propertyName\")\n                      ? getValues(\"propertyName\")\n                      : \"-\"}\n                  </div>\n                ) : (\n                  <>\n                    <InputBox\n                      className=\"login_input\"\n                      type=\"text\"\n                      name={\"propertyName\"}\n                      placeholder=\"Enter property name\"\n                      value={getValues(\"propertyName\")}\n                      register={register(\"propertyName\", {\n                        required: true,\n                        //pattern: /^[A-Za-z]+(?:\\s[A-Za-z]+)*$/,\n                        pattern: /^(?!\\s+$)[A-Za-z\\s]*$/,\n                        maxLength: 250,\n                        // validate: {\n                        //   required: (value, field) => {\n                        //     if (field.isDraft) return true;\n                        //     if (value) return true;\n                        //     return false;\n                        //   },\n                        //   // checkstring: (value) => {\n                        //   //   if (value) {\n                        //   //     return /^[A-Za-z ]+$/.test(value);\n                        //   //   }\n                        //   //   return true;\n                        //   // },\n                        //   maxLength: (value) => value && value.length > 250,\n                        // },\n                      })}\n                    />\n                    <FormErrorMessage\n                      error={errors.propertyName}\n                      messages={{\n                        required: \"Property name is required\",\n                        pattern: \"Invalid property name\",\n                        //checkstring: \"Property name is Invalid\",\n                        maxLength: \"Invalid property name\",\n                      }}\n                      position={\"absolute\"}\n                    />\n                  </>\n                )}\n              </div>\n              <div className={` col-md-3 ${styles.rowWidth} py-2`}>\n                <label className={showPreview ? \"preview-label\" : \"\"}>\n                  Property Type\n                  {!showPreview && <span className=\"text-danger\">*</span>}\n                </label>\n                {showPreview ? (\n                  <div className=\"preview-value1\">\n                    {propertyTypePreviewValue ? propertyTypePreviewValue : \"-\"}\n                  </div>\n                ) : (\n                  <CustomController\n                    name={\"propertyType\"}\n                    control={control}\n                    error={errors?.propertyType}\n                    defaultValue={[]}\n                    //gettext\n                    // defaultValue={getValues(\"propertyType\")}\n                    rules={{ required: saveDraft ? false : true }}\n                    messages={{ required: \"Property type is required\" }}\n                    position={\"absolute\"}\n                    render={({ field: { onChange, value }, ...fields }) => {\n                      return (\n                        <NormalMultiSelect\n                          {...fields}\n                          placeholder={\"Select property type\"}\n                          inputPlaceholder={\"Enter new property type\"}\n                          options={propertyTypes}\n                          isSearchable={false}\n                          name=\"propertyType\"\n                          isMulti={false}\n                          addProperty={true}\n                          handleChange={(e, { value, name } = {}) => {\n                            onChange(value);\n                            setpropertyTypeName(name);\n                            // setStatus(value);\n                          }}\n                          value={value}\n                          handleAdd={handleAddPropertyType}\n                        />\n                      );\n                    }}\n                  />\n                )}\n              </div>\n              <div className={` col-md-3 ${styles.rowWidth} py-2`}>\n                <label className={showPreview ? \"preview-label\" : \"\"}>\n                  Status{!showPreview && <span className=\"text-danger\">*</span>}\n                </label>\n                {showPreview ? (\n                  <div className=\"preview-value1\">\n                    {statusPreviewValue ? statusPreviewValue : \"-\"}\n                  </div>\n                ) : (\n                  <>\n                    <CustomController\n                      name={\"status\"}\n                      control={control}\n                      error={errors?.status}\n                      // defaultValue={getValues(\"district\")}\n                      rules={{ required: saveDraft ? false : true }}\n                      messages={{ required: \"Status is required\" }}\n                      position={\"absolute\"}\n                      render={({ field: { onChange, value }, ...fields }) => {\n                        return (\n                          <NormalMultiSelect\n                            {...fields}\n                            placeholder={\"Select status\"}\n                            options={statusOptions}\n                            name=\"status\"\n                            handleChange={(e, { value } = {}) => {\n                              onChange(value);\n                              // setStatus(value);\n                            }}\n                            value={value}\n                          />\n                        );\n                      }}\n                    />\n                  </>\n                )}\n              </div>\n              <div className={` col-md-3 ${styles.rowWidth} py-2`}>\n                <label className={showPreview ? \"preview-label\" : \"\"}>\n                  Property Contact (Landline)\n                </label>\n                {showPreview ? (\n                  <>\n                    {getValues(\"landlineNumber\") ||\n                    getValues(\"landlineStateCode\") ? (\n                      <div className=\"preview-value1\">\n                        {getValues(\"landlineStateCode\") +\n                          \" \" +\n                          getValues(\"landlineNumber\")}\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n                  </>\n                ) : (\n                  <>\n                    <CustomController\n                      name={\"landlineNumber\"}\n                      control={control}\n                      error={\n                        errors?.landlineNumber || errors?.landlineStateCode\n                      }\n                      rules={{\n                        required:\n                          !saveDraft && watch(\"landlineStateCode\") !== \"\"\n                            ? true\n                            : false,\n                        minLength:\n                          watch(\"landlineStateCode\")?.length <= 3 ? 8 : 7,\n                        maxLength:\n                          watch(\"landlineStateCode\")?.length <= 3 ? 8 : 7,\n                        pattern: /^[0-9\\b]+$/,\n                      }}\n                      position={\"absolute\"}\n                      messages={{\n                        minLength: `Should contain ${\n                          getValues(\"landlineStateCode\")?.length <= 3 ? 8 : 7\n                        } numbers`,\n                        maxLength: `Should contain ${\n                          getValues(\"landlineStateCode\")?.length <= 3 ? 8 : 7\n                        } numbers`,\n                        required: \"Landline number is required\",\n                        requiredSTDCode: \"Landline STD code is required\",\n                        pattern: \"Landline number is invalid\",\n                      }}\n                      render={({ field: { onChange, value }, ...fields }) => {\n                        return (\n                          <LandlineInput\n                            name=\"landlineNumber\"\n                            handleSelectCode={(opt) => {\n                              setValue(\"landlineStateCode\", opt.stdCode);\n                              if (watch(\"landlineStateCode\")) {\n                                if (\n                                  ((watch(\"landlineStateCode\").length <= 3 &&\n                                    getValues(\"landlineNumber\").length !== 8) ||\n                                    (watch(\"landlineStateCode\").length >= 4 &&\n                                      getValues(\"landlineNumber\").length !==\n                                        7)) &&\n                                  getValues(\"landlineNumber\").length !== 0\n                                ) {\n                                  setError(\"landlineNumber\", {\n                                    type: \"maxLength\",\n                                  });\n                                } else {\n                                  clearErrors(\"landlineNumber\");\n                                }\n                                if (getValues(\"landlineNumber\").length === 0) {\n                                  setError(\"landlineNumber\", {\n                                    type: \"required\",\n                                  });\n                                }\n                              } else {\n                                clearErrors(\"landlineNumber\");\n                              }\n                            }}\n                            selectedCode={watch(\"landlineStateCode\")}\n                            value={value}\n                            onChange={(e) => {\n                              onChange(e.target.value);\n                              setValue(\"landlineNumber\", e.target.value, {\n                                shouldValidate: true,\n                              });\n                              trigger(\"landlineNumber\");\n                            }}\n                          />\n                        );\n                      }}\n                    />\n\n                    <FormErrorMessage\n                      error={errors?.landlineStateCode}\n                      messages={{\n                        required: \"STD code is required\",\n                        maxLength:\n                          \"Landline number should contain maximum  numbers\",\n                        pattern: \"Landline number is invalid\",\n                      }}\n                    />\n                  </>\n                )}\n\n                {/* <InputBox\n                className=\"login_input\"\n                type=\"number\"\n                name={\"propertyContactLandLine\"}\n                placeholder=\"Enter landline\"\n                register={register(\"propertyContactLandLine\", {\n                  minLength: 10,\n                  maxLength: 10,\n                  pattern: /^[0-9\\b]+$/,\n                })}\n              /> */}\n              </div>\n              <div className={` col-md-3 ${styles.rowWidth} py-2`}>\n                <label className={showPreview ? \"preview-label\" : \"\"}>\n                  Property Contact (Mobile Number){\" \"}\n                  {!showPreview && <span className=\"text-danger\">*</span>}\n                </label>\n                {showPreview ? (\n                  <div className=\"preview-value1\">\n                    {\"+91 - \" + getValues(\"mobileNumber\")}\n                  </div>\n                ) : (\n                  <>\n                    <CommonLabelInput\n                      className=\"login_input\"\n                      type=\"number\"\n                      name={\"mobileNumber\"}\n                      value={getValues(\"mobileNumber\")}\n                      placeholder=\"Enter mobile number\"\n                      errors={errors}\n                      onKeyDown={numberInput}\n                      prefixText=\"+91\"\n                      register={register(\"mobileNumber\", {\n                        required: saveDraft ? false : true,\n                        minLength: 10,\n                        maxLength: 10,\n                        //pattern: /^[0-9\\b]+$/,\n                        pattern: /^[6-9]\\d{9}$/,\n                      })}\n                    />\n                    <FormErrorMessage\n                      error={errors.mobileNumber}\n                      messages={{\n                        required: \"Mobile number is required\",\n                        minLength: \"Should contain minimum of 10 numbers\",\n                        maxLength: \"Should contain maximum of 10 numbers\",\n                        pattern: \"Mobile number is invalid\",\n                      }}\n                      position={\"absolute\"}\n                    />\n                  </>\n                )}\n              </div>\n              <div className={` col-md-3 ${styles.rowWidth} py-2`}>\n                <label className={showPreview ? \"preview-label\" : \"\"}>\n                  Guest Type\n                  {!showPreview && <span className=\"text-danger\">*</span>}\n                </label>\n                {showPreview ? (\n                  residentTypePreviewValue ? (\n                    <div className=\"preview-value1\">\n                      {residentTypePreviewValue}\n                      {residentTypeValue.length > 2 && (\n                        <TooltipHover\n                          placement=\"bottom-start\"\n                          renderToolipUI={() => (\n                            <div className={styles.residentList}>\n                              <ul>\n                                {residentTypeValue.slice(2).map((o, index) => {\n                                  return <li key={index}>{o.label}</li>;\n                                })}\n                              </ul>\n                            </div>\n                          )}\n                        >\n                          <span style={{ background: \"#ffffff\" }}>\n                            ...\n                            <a className={styles.moreBtn}>{`+${\n                              residentTypeValue.length - 2\n                            } more  `}</a>\n                          </span>\n                        </TooltipHover>\n                      )}\n                    </div>\n                  ) : (\n                    <div>{\"-\"}</div>\n                  )\n                ) : (\n                  <>\n                    <CustomController\n                      name={\"residentType\"}\n                      control={control}\n                      error={errors?.residentType}\n                      defaultValue={null}\n                      rules={{\n                        required: saveDraft ? false : true,\n                      }}\n                      position={\"absolute\"}\n                      messages={{ required: \"Guest type is required\" }}\n                      render={({\n                        field: { onChange, value, ref },\n                        ...fields\n                      }) => {\n                        const correctionData = value\n                          ?.slice(0, 1)\n                          .map((data) => ({\n                            // value: data.value,\n                            //label: `${data.label.slice(0, 5)}...,`,\n                            label: `${\n                              data.label.length > 10\n                                ? `${data.label.slice(0, 10)}...`\n                                : `${data.label}`\n                            },`,\n                          }));\n                        const valueData = value.map((data) => ({\n                          value: data.value,\n                        }));\n                        // eslint-disable-next-line react-hooks/rules-of-hooks\n                        const updatedData = useMemo(() => {\n                          return [\n                            ...correctionData,\n                            {\n                              label: `...+${value.length - 1} more`,\n                            },\n                            ...valueData,\n                          ];\n                        }, [correctionData, value]);\n                        const twoDataOnly = value.map((data, index, array) => ({\n                          value: data.value,\n                          label:\n                            index === array.length - 1\n                              ? `${\n                                  data.label.length > 9\n                                    ? `${data.label.slice(0, 7)}...`\n                                    : `${data.label}`\n                                }`\n                              : // ? `${data.label.slice(0, 11)}...`\n                                `${\n                                  data.label.length > 7\n                                    ? `${data.label.slice(0, 7)}...`\n                                    : `${data.label}`\n                                },`,\n                        }));\n                        return (\n                          <NormalMultiSelect\n                            selectRef={ref}\n                            {...fields}\n                            isMulti={true}\n                            isClearable={false}\n                            addPropertyLabel={\"Add new Guest type\"}\n                            inputPlaceholder={\"Enter new Guest type\"}\n                            showCheckbox={true}\n                            options={residentTypes}\n                            name=\"residentType\"\n                            placeholder={\"Select Guest type\"}\n                            handleChange={({ target: { value } }) => {\n                              onChange(value);\n                            }}\n                            value={value.length > 1 ? updatedData : twoDataOnly}\n                            addProperty\n                            showfooterButton\n                            handleAdd={handleAddResidentType}\n                            closeMenuOnSelect={false}\n                            className={styles.residentTypeSelect}\n                            updatedValue={value}\n                          />\n                        );\n                      }}\n                    />\n                  </>\n                )}\n              </div>\n              <div className={` col-md-3 ${styles.rowWidth} py-2`}>\n                <label className={showPreview ? \"preview-label\" : \"\"}>\n                  Website\n                  {!showPreview && <span className=\"text-danger\">*</span>}\n                </label>\n                {showPreview ? (\n                  <div className=\"preview-value1\">\n                    {getValues(\"website\") ? getValues(\"website\") : \"-\"}\n                  </div>\n                ) : (\n                  <>\n                    <InputBox\n                      className=\"login_input\"\n                      type=\"url\"\n                      name={\"website\"}\n                      placeholder=\"Eg. www.xyz.com\"\n                      value={getValues(\"website\")}\n                      errors={errors}\n                      register={register(\"website\", {\n                        required: saveDraft ? false : true,\n                        pattern:\n                          /^((ftp|http|https):\\/\\/)?(www.)?(?!.*(ftp|http|https|www.))[a-zA-Z0-9_-]+(\\.[a-zA-Z]+)+((\\/)[\\w#]+)*(\\/\\w+\\?[a-zA-Z0-9_]+=\\w+(&[a-zA-Z0-9_]+=\\w+)*)?\\/?$/,\n                        //pattern: /(https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|www\\.[a-zA-Z0-9][a-zA-Z0-9-]+[a-zA-Z0-9]\\.[^\\s]{2,}|https?:\\/\\/(?:www\\.|(?!www))[a-zA-Z0-9]+\\.[^\\s]{2,}|www\\.[a-zA-Z0-9]+\\.[^\\s]{2,})/gi,//safwaan\n                        //pattern: /(https:\\/\\/www\\.|http:\\/\\/www\\.|https:\\/\\/|http:\\/\\/)?[a-zA-Z]{2,}(\\.[a-zA-Z]{2,})(\\.[a-zA-Z]{2,})?\\/[a-zA-Z0-9]{2,}|((https:\\/\\/www\\.|http:\\/\\/www\\.|https:\\/\\/|http:\\/\\/)?[a-zA-Z]{2,}(\\.[a-zA-Z]{2,})(\\.[a-zA-Z]{2,})?)|((ftp|https|http|www)\\:\\/\\/)?([a-zA-Z0-9.-]+\\.)+[a-zA-Z]{2,}(\\/\\S*)|(https:\\/\\/www\\.|http:\\/\\/www\\.|https:\\/\\/|http:\\/\\/)?[a-zA-Z0-9]{2,}\\.[a-zA-Z0-9]{2,}\\.[a-zA-Z0-9]{2,}(\\.[a-zA-Z0-9]{2,})?/g,//latest\n                        //pattern: /^((ftp|https|http|www)\\:\\/\\/)?([a-zA-Z0-9.-]+\\.)+[a-zA-Z]{2,}(\\/\\S*)?$/,//recent\n                        //pattern: /^(http(s))[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)$/g,//old\n                      })}\n                    />\n                    <FormErrorMessage\n                      error={errors.website}\n                      position={\"absolute\"}\n                      messages={{\n                        required: \"Website is required\",\n                        pattern: \"Invalid website\",\n                      }}\n                    />\n                  </>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"new-section py-4\">\n          <div className=\"basic-title\">\n            <h3 className={styles.propertyLabel}>Location Details</h3>\n          </div>\n          <div className=\"basic-form\">\n            <div className=\"row\">\n              <div className={` ${styles.AddressWidth}  py-2`}>\n                <label className={showPreview ? \"preview-label\" : \"\"}>\n                  {showPreview ? \"Address\" : \"Address Line 1\"}\n                  {!showPreview && <span className=\"text-danger\">*</span>}\n                </label>\n                {showPreview ? (\n                  getValues(\"locationDetails.addressLine1\") ||\n                  getValues(\"locationDetails.addressLine2\") ? (\n                    <div className=\"preview-value1\">\n                      {`\n                        ${getValues(\"locationDetails.addressLine1\")}\n                        ${\n                          getValues(\"locationDetails.addressLine2\")\n                            ? `, ${getValues(\"locationDetails.addressLine2\")}`\n                            : \"\"\n                        }`}\n                    </div>\n                  ) : (\n                    <div>{\"-\"}</div>\n                  )\n                ) : (\n                  <>\n                    <InputBox\n                      className=\"login_input\"\n                      type=\"text\"\n                      name={\"locationDetails.addressLine1\"}\n                      value={getValues(\"locationDetails.addressLine1\")}\n                      placeholder=\"Enter address details like area name, street name, etc.\"\n                      errors={errors}\n                      register={register(\"locationDetails.addressLine1\", {\n                        required: saveDraft ? false : true,\n                        //pattern: /^(?!\\s+$)[a-zA-Z0-9\\s\\-.,+#\\s]*$/,\n                        pattern: /^(?!\\s+$)[a-zA-Z0-9\\s\\-.,/+#\\s]*$/,\n                        //pattern: /^[a-zA-Z0-9\\s\\-.,+# \\/]*$/,\n                        // validate: {\n                        //   preventSpecialCharacter: (value) =>\n                        //     !/[^a-zA-Z0-9]/.test(value),\n                        // },\n                      })}\n                      // onChange={({ target: { name, value } }) => {\n                      //   setValue(name, value, { shouldValidate: true });\n                      // }}\n                    />\n                    <FormErrorMessage\n                      error={errors?.locationDetails?.addressLine1}\n                      position={\"absolute\"}\n                      messages={{\n                        required: \"Address Line is required\",\n                        pattern: \"Invalid address\",\n                        preventSpecialCharacter: \"Invalid address\",\n                      }}\n                    />\n                  </>\n                )}\n              </div>\n\n              {!showPreview && (\n                <div className={` ${styles.AddressWidth}  py-2`}>\n                  <label className={showPreview ? \"preview-label\" : \"\"}>\n                    Address Line 2\n                  </label>\n\n                  <InputBox\n                    className=\"login_input\"\n                    type=\"text\"\n                    name={\"locationDetails.addressLine2\"}\n                    placeholder=\"Enter address details like area name, street name, etc.\"\n                    errors={errors}\n                    value={getValues(\"locationDetails.addressLine2\")}\n                    register={register(\"locationDetails.addressLine2\", {\n                      required: false,\n                      pattern: /^(?!\\s+$)[a-zA-Z0-9\\s\\-.,/+#\\s]*$/,\n                    })}\n                    // onChange={({ target: { name, value } }) => {\n                    //   setValue(name, value, { shouldValidate: true });\n                    // }}\n                  />\n                  <FormErrorMessage\n                    error={errors?.locationDetails?.addressLine2}\n                    position={\"absolute\"}\n                    messages={{\n                      required: \"Address Line is required\",\n                      pattern: \"Invalid address\",\n                    }}\n                  />\n                </div>\n              )}\n\n              <div className={`col-md-3 ${styles.rowWidth}  py-2`}>\n                <label className={showPreview ? \"preview-label\" : \"\"}>\n                  Country\n                  {!showPreview && <span className=\"text-danger\">*</span>}\n                </label>\n                {showPreview ? (\n                  <div className=\"preview-value1\">\n                    {getValues(\"locationDetails.country\")\n                      ? getValues(\"locationDetails.country\")\n                      : \"-\"}\n                  </div>\n                ) : (\n                  <CustomController\n                    name={\"locationDetails.country\"}\n                    control={control}\n                    error={errors?.locationDetails?.country}\n                    value={getValues(\"locationDetails.country\")}\n                    rules={{ required: saveDraft ? false : true }}\n                    position={\"absolute\"}\n                    messages={{\n                      required: \"Country is required\",\n                    }}\n                    render={({ field: { onChange, value }, ...fields }) => {\n                      return (\n                        <NormalMultiSelect\n                          {...fields}\n                          placeholder={\"Select country\"}\n                          options={countryOptions}\n                          name=\"locationDetails.country\"\n                          handleChange={(e, valueobj) => {\n                            setLocation((prev) => ({\n                              ...prev,\n                              country: valueobj,\n                            }));\n                            onChange(e.target.value);\n                            setValue(\n                              \"locationDetails.countryISO\",\n                              valueobj.isoCode\n                            );\n                          }}\n                          isSearchable={true}\n                          value={value}\n                        />\n                      );\n                    }}\n                  />\n                )}\n              </div>\n              <div className={`col-md-3 ${styles.rowWidth}  py-2`}>\n                <label className={showPreview ? \"preview-label\" : \"\"}>\n                  State{!showPreview && <span className=\"text-danger\">*</span>}\n                </label>\n                {showPreview ? (\n                  <div className=\"preview-value1\">\n                    {getValues(\"locationDetails.state\")\n                      ? getValues(\"locationDetails.state\")\n                      : \"-\"}\n                  </div>\n                ) : (\n                  <CustomController\n                    name={\"locationDetails.state\"}\n                    control={control}\n                    error={errors?.locationDetails?.state}\n                    position={\"absolute\"}\n                    rules={{\n                      required: saveDraft ? false : true,\n                      pattern: /^(?!\\s*$).+/,\n                    }}\n                    messages={{\n                      required: \"State is required\",\n                      pattern: \"State is Invalid\",\n                    }}\n                    render={({ field: { onChange, value }, ...fields }) => {\n                      return (\n                        <NormalMultiSelect\n                          {...fields}\n                          placeholder={\"Select State\"}\n                          isSearchable={true}\n                          options={stateOption}\n                          name=\"locationDetails.state\"\n                          position={\"absolute\"}\n                          handleChange={(e, valueObj) => {\n                            onChange(e.target.value);\n                            setLocation((prev) => ({\n                              ...prev,\n                              state: valueObj,\n                            }));\n                            setValue(\n                              \"locationDetails.stateISO\",\n                              valueObj.isoCode\n                            );\n                          }}\n                          value={value}\n                        />\n                      );\n                    }}\n                  />\n                )}\n              </div>\n              <div className={`col-md-3 ${styles.rowWidth}  py-2`}>\n                <label className={showPreview ? \"preview-label\" : \"\"}>\n                  City/District\n                  {!showPreview && <span className=\"text-danger\">*</span>}\n                </label>\n                {showPreview ? (\n                  <div className=\"preview-value1\">\n                    {getValues(\"locationDetails.city\")\n                      ? getValues(\"locationDetails.city\")\n                      : \"-\"}\n                  </div>\n                ) : (\n                  <CustomController\n                    name={\"locationDetails.city\"}\n                    control={control}\n                    error={errors?.locationDetails?.city}\n                    rules={{ required: saveDraft ? false : true }}\n                    position={\"absolute\"}\n                    messages={{\n                      required: \"District / City is required\",\n                    }}\n                    render={({ field: { onChange, value }, ...fields }) => {\n                      return (\n                        <NormalMultiSelect\n                          {...fields}\n                          isSearchable={true}\n                          placeholder={\"Select District / City\"}\n                          options={cityOption}\n                          name=\"locationDetails.city\"\n                          handleChange={(e, valueObj) => {\n                            onChange(e.target.value);\n                            setLocation((prev) => ({\n                              ...prev,\n                              city: valueObj,\n                            }));\n                          }}\n                          value={value}\n                        />\n                      );\n                    }}\n                  />\n                )}\n\n                {/* <InputBox\n                className=\"login_input\"\n                type=\"text\"\n                name={\"city\"}\n                control={control}\n                error={errors?.city}\n                // defaultValue={getValues(\"primaryRole\")}\n                rules={{ required: saveDraft ? false : true }}\n                messages={{ required: \"City is required\" }}\n                render={({ field: { onChange }, ...fields }) => {\n                  return (\n                    <NormalMultiSelect\n                      {...fields}\n                      placeholder={\"Select city\"}\n                      options={cityOption}\n                      isSearchable={true}\n                      name=\"city\"\n                      handleChange={(e, { value } = {}) => {\n                        onChange(value);\n                        // setStatus(value);\n                      }}\n                    />\n                  );\n                }}\n              /> */}\n              </div>\n              <div\n                className={`col-md-3 ${\n                  showPreview ? styles.AddressWidth : styles.rowWidth\n                }  py-2`}\n              >\n                {showPreview ? (\n                  <label className={showPreview ? \"preview-label\" : \"\"}>\n                    Area Name\n                  </label>\n                ) : (\n                  <label>\n                    Area\n                    <span className=\"text-danger\">*</span>\n                  </label>\n                )}\n                {showPreview ? (\n                  <div className=\"preview-value1\">\n                    {getValues(\"locationDetails.area\")\n                      ? getValues(\"locationDetails.area\")\n                      : \"-\"}\n                  </div>\n                ) : (\n                  <>\n                    <InputBox\n                      className=\"login_input\"\n                      type=\"text\"\n                      name={\"locationDetails.area\"}\n                      placeholder=\"Enter area\"\n                      errors={errors}\n                      register={register(\"locationDetails.area\", {\n                        required: saveDraft ? false : true,\n                        pattern: /^(?!\\s+$)[A-Za-z0-9\\s]*$/,\n                        // validate: {\n                        //   isString: (value) => /^[A-Za-z\\s]*$/.test(value),\n                        // },\n                      })}\n                    />\n                    <FormErrorMessage\n                      error={errors?.locationDetails?.area}\n                      messages={{\n                        required: \"Area is required\",\n                        pattern: \"Invalid area\",\n                        // isString: \"Please enter a valid Area name\",\n                      }}\n                      position={\"absolute\"}\n                    />\n                  </>\n                )}\n              </div>\n              <div className={`col-md-3 ${styles.rowWidth}  py-2`}>\n                <label className={showPreview ? \"preview-label\" : \"\"}>\n                  Landmark\n                  {!showPreview && <span className=\"text-danger\">*</span>}\n                </label>\n                {showPreview ? (\n                  <div className=\"preview-value1\">\n                    {getValues(\"locationDetails.landmark\")\n                      ? getValues(\"locationDetails.landmark\")\n                      : \"-\"}\n                  </div>\n                ) : (\n                  <>\n                    <InputBox\n                      className=\"login_input\"\n                      type=\"text\"\n                      name={\"locationDetails.landmark\"}\n                      placeholder=\"Enter landmark\"\n                      errors={errors}\n                      register={register(\"locationDetails.landmark\", {\n                        required: saveDraft ? false : true,\n                        pattern: /^(?!\\s+$)[a-zA-Z0-9\\s\\-.,/+#\\s]*$/,\n                        // validate: {\n                        //   isString: (value) => /^[A-Za-z\\s0-9]*$/.test(value),\n                        // },\n                      })}\n                      onChange={({ target: { name, value } }) => {\n                        setValue(name, value, { shouldValidate: true });\n                      }}\n                    />\n                    <FormErrorMessage\n                      error={errors?.locationDetails?.landmark}\n                      messages={{\n                        required: \"Landmark is required\",\n                        pattern: \"Invalid landmark\",\n                        // isString: \"Please enter a valid landmark name\",\n                      }}\n                      position={\"absolute\"}\n                    />\n                  </>\n                )}\n              </div>\n              <div className={`col-md-3 ${styles.rowWidth}  py-2`}>\n                <label className={showPreview ? \"preview-label\" : \"\"}>\n                  Postal Code\n                  {!showPreview && <span className=\"text-danger\">*</span>}\n                </label>\n                {showPreview ? (\n                  <div className=\"preview-value1\">\n                    {getValues(\"locationDetails.postalCode\")\n                      ? getValues(\"locationDetails.postalCode\")\n                      : \"-\"}\n                  </div>\n                ) : (\n                  <>\n                    <InputBox\n                      className=\"login_input\"\n                      type=\"number\"\n                      name={\"locationDetails.postalCode\"}\n                      placeholder=\"Enter postal code\"\n                      onKeyDown={numberInput}\n                      errors={errors?.locationDetails?.postalCode}\n                      register={register(\"locationDetails.postalCode\", {\n                        required: saveDraft ? false : true,\n                        maxLength: 6,\n                        minLength: 6,\n                        pattern: /^[1-9]{1}[0-9]{2}[0-9]{3}$/,\n                      })}\n                      onChange={({ target: { name, value } }) => {\n                        setValue(name, value, { shouldValidate: true });\n                      }}\n                    />\n                    <FormErrorMessage\n                      error={errors?.locationDetails?.postalCode}\n                      messages={{\n                        required: \"Postal code is required\",\n                        pattern: \"Invalid postal code\",\n                        maxLength: \"Postal should be maximum of 6 numbers\",\n                        minLength: \"Postal should be minimum of 6 numbers\",\n                      }}\n                      position={\"absolute\"}\n                    />\n                  </>\n                )}\n              </div>\n              <div\n                className={` ${\n                  showPreview ? styles.rowWidth : styles.AddressWidth\n                }  py-2`}\n              >\n                <label className={showPreview ? \"preview-label\" : \"\"}>\n                  Google Map Link\n                  {!showPreview && <span className=\"text-danger\">*</span>}\n                </label>\n                {showPreview ? (\n                  <div className=\"preview-value1\">\n                    {getValues(\"locationDetails.googleMapLink\") ? (\n                      <a\n                        href={getValues(\"locationDetails.googleMapLink\")}\n                        target=\"_blank\"\n                        className={styles.previewTextBtn}\n                        rel=\"noreferrer\"\n                      >\n                        View Map\n                      </a>\n                    ) : (\n                      \"-\"\n                    )}\n                  </div>\n                ) : (\n                  <>\n                    <PopoverStickOnHover\n                      renderTooltipContent={() => (\n                        <div className=\"row m-0 justify-content-between\">\n                          <div className=\"col-10 p-0 pe-2\">\n                            <div className={styles.tooltipdesc}>\n                              {getValues(\"locationDetails.googleMapLink\")}\n                            </div>\n                          </div>\n                          <div className=\"col-1 p-0  d-flex align-items-center\">\n                            <IconButton\n                              className=\"pe-2\"\n                              onClick={handleCopyText}\n                            >\n                              <img src={CopyIcon} alt=\"copy\" />\n                            </IconButton>\n                          </div>\n                        </div>\n                      )}\n                      value={\n                        watch(\"locationDetails.googleMapLink\") &&\n                        !errors?.locationDetails?.googleMapLink\n                      }\n                      placement={\"top\"}\n                    >\n                      <div>\n                        <InputBox\n                          value={getValues(\"locationDetails.googleMapLink\")}\n                          className=\"login_input\"\n                          type=\"text\"\n                          name={\"locationDetails.googleMapLink\"}\n                          placeholder=\"Enter link\"\n                          register={register(\"locationDetails.googleMapLink\", {\n                            required: saveDraft ? false : true,\n                            //pattern: /^(http(s?):\\/\\/)?maps\\.app\\.goo\\.gl\\/[a-zA-Z0-9]+$/,\n                            pattern:\n                              /^(http|https):\\/\\/(www\\.)?google\\.com(\\.\\w*)?\\/maps\\/(place\\/[^@]*)?@([0123456789\\.,-]*z)(\\/data=[\\!\\:.\\-0123456789abcdefmsx]+)?/,\n                          })}\n                        />\n                      </div>\n                    </PopoverStickOnHover>\n\n                    <FormErrorMessage\n                      error={errors?.locationDetails?.googleMapLink}\n                      messages={{\n                        required: \"Map Link is required\",\n                        pattern: \"Invalid map link\",\n                      }}\n                      position={\"absolute\"}\n                    />\n                  </>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"new-section py-3\">\n          <div className=\"basic-title \">\n            <h3 className={styles.propertyLabel}>POC Details</h3>\n          </div>\n          {showPreview ? (\n            <div className={styles.tableWrap}>\n              <table className={styles.table}>\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Email ID</th>\n                    <th>Contact (Mobile)</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>\n                      <label className=\"preview-label\">\n                        Primary POC ({primaryRoleValue})\n                      </label>\n                      <div className=\"preview-value1\">\n                        {getValues(\"pocDetails.name\")}\n                      </div>\n                    </td>\n                    <td className=\"preview-value1\">\n                      {getValues(\"pocDetails.emailId\")\n                        ? getValues(\"pocDetails.emailId\")\n                        : \"-\"}\n                    </td>\n                    <td className=\"preview-value1\">\n                      +91 - {getValues(\"pocDetails.mobileNumber\")}\n                    </td>\n                  </tr>\n                  <tr>\n                    <td>\n                      <label className=\"preview-label\">\n                        Secondary POC ({secondaryRoleValue})\n                      </label>\n                      <div className=\"preview-value1\">\n                        {getValues(\"secPocDetails.0.name\")}\n                      </div>\n                    </td>\n                    <td className=\"preview-value1\">\n                      {getValues(\"secPocDetails.0.emailId\")\n                        ? getValues(\"secPocDetails.0.emailId\")\n                        : \"-\"}\n                    </td>\n                    <td className=\"preview-value1\">\n                      +91 - {getValues(\"secPocDetails.0.mobileNumber\")}\n                    </td>\n                  </tr>\n                  {secondaryTwoRoleValue &&\n                    getValues(\"secPocDetails.1.name\") && (\n                      <tr>\n                        <td>\n                          <label className=\"preview-label\">\n                            Secondary POC ({secondaryTwoRoleValue})\n                          </label>\n                          <div className=\"preview-value1\">\n                            {getValues(\"secPocDetails.1.name\")}\n                          </div>\n                        </td>\n                        <td className=\"preview-value1\">\n                          {getValues(\"secPocDetails.1.emailId\")}\n                        </td>\n                        <td className=\"preview-value1\">\n                          +91 - {getValues(\"secPocDetails.1.mobileNumber\")}\n                        </td>\n                      </tr>\n                    )}\n                </tbody>\n              </table>\n            </div>\n          ) : (\n            <div className=\"basic-form py-2\">\n              <div className=\"row\">\n                <div className={`col-md-3 ${styles.rowWidth}  py-2`}>\n                  <label>\n                    Primary POC<span className=\"text-danger\">*</span>\n                  </label>\n                  <InputBox\n                    className=\"login_input\"\n                    type=\"text\"\n                    name={\"pocDetails.name\"}\n                    placeholder=\"Enter name\"\n                    errors={errors}\n                    register={register(\"pocDetails.name\", {\n                      required: saveDraft ? false : true,\n                      //pattern: /^[A-Za-z]+(?:\\s[A-Za-z]+)*$/,\n                      pattern: /^[A-Za-z]+(?!\\s+$)[A-Za-z\\s]*$/,\n                      maxLength: 250,\n                    })}\n                  />\n                  <FormErrorMessage\n                    error={errors?.pocDetails?.name}\n                    messages={{\n                      required: \"Primary POC is required\",\n                      pattern: \"Should contain only alphabets\",\n                      maxLength: \"Invalid POC name\",\n                    }}\n                    position={\"absolute\"}\n                  />\n                </div>\n                <div className={`col-md-3 ${styles.rowWidth} py-2`}>\n                  <label>\n                    Email ID<span className=\"text-danger\">*</span>\n                  </label>\n                  <InputBox\n                    className=\"login_input\"\n                    type=\"text\"\n                    name={\"pocDetails.emailId\"}\n                    value={getValues(\"pocDetails.emailId\")}\n                    placeholder=\"Enter email ID\"\n                    errors={errors}\n                    register={register(\"pocDetails.emailId\", {\n                      required: saveDraft ? false : true,\n                      pattern: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$/,\n                      validate: {\n                        dupEmail: (value, field) => {\n                          const { secPocDetails } = field;\n                          if (!value) return true;\n                          if (\n                            secPocDetails[0].emailId === value ||\n                            secPocDetails[1].emailId === value\n                          ) {\n                            return false;\n                          }\n                          return true;\n                        },\n                      },\n                    })}\n                  />\n                  <FormErrorMessage\n                    error={errors?.pocDetails?.emailId}\n                    messages={{\n                      required: \"Email Id is Required\",\n                      pattern: \"Email Id is Invalid\",\n                      dupEmail: \"Email Id should be unique\",\n                    }}\n                    position={\"absolute\"}\n                  />\n                </div>\n                <div className={` col-md-3 ${styles.rowWidth} py-2`}>\n                  <label>\n                    Contact Number<span className=\"text-danger\">*</span>\n                  </label>\n                  <CommonLabelInput\n                    maxLength={10}\n                    className=\"login_input\"\n                    type=\"number\"\n                    value={getValues(\"pocDetails.mobileNumber\")}\n                    name={\"pocDetails.mobileNumber\"}\n                    placeholder=\"Enter mobile number\"\n                    errors={errors}\n                    onKeyDown={numberInput}\n                    prefixText=\"+91\"\n                    register={register(\"pocDetails.mobileNumber\", {\n                      required: saveDraft ? false : true,\n                      minLength: 10,\n                      maxLength: 10,\n                      //pattern: /^[0-9\\b]+$/,\n                      pattern: /^[6-9]\\d{9}$/,\n                      validate: {\n                        dupMobileNumber: (value, field) => {\n                          const {\n                            secPocDetails,\n                            pocDetails: { mobileNumber },\n                          } = field;\n                          if (!value) return true;\n                          if (\n                            secPocDetails[0].mobileNumber === value ||\n                            secPocDetails[1].mobileNumber === value\n                          ) {\n                            return false;\n                          }\n                          return true;\n                        },\n                      },\n                    })}\n                  />\n                  <FormErrorMessage\n                    error={errors?.pocDetails?.mobileNumber}\n                    messages={{\n                      required: \"Contact number is required\",\n                      minLength: \"Should contain minimum 10 numbers\",\n                      maxLength: \"Should contain maximum of 10 numbers\",\n                      pattern: \"Invalid contact number\",\n                      dupMobileNumber: \"Mobile number should be unique\",\n                    }}\n                    position={\"absolute\"}\n                  />\n                </div>\n                <div className={` col-md-3 ${styles.rowWidth} py-2`}>\n                  <label>\n                    Role<span className=\"text-danger\">*</span>\n                  </label>\n                  <CustomController\n                    name={\"pocDetails.role\"}\n                    control={control}\n                    error={errors?.pocDetails?.role}\n                    // defaultValue={getValues(\"primaryRole\")}\n                    rules={{ required: saveDraft ? false : true }}\n                    messages={{ required: \"Role is required\" }}\n                    position={\"absolute\"}\n                    render={({ field: { onChange, value }, ...fields }) => {\n                      return (\n                        <>\n                          <ReactSearchSelect\n                            name=\"pocDetails.role\"\n                            placeholder={\"Select role name\"}\n                            options={roles}\n                            handleChange={({ target: { value } } = {}) => {\n                              onChange(value);\n                            }}\n                            value={value}\n                          />\n                        </>\n                      );\n                    }}\n                  />\n                </div>\n              </div>\n              <div className=\"row align-items-center py-2\">\n                <div className={`col-md-3 ${styles.rowWidth}  py-2`}>\n                  <label>\n                    Secondary POC<span className=\"text-danger\">*</span>\n                  </label>\n\n                  <InputBox\n                    className=\"login_input\"\n                    type=\"text\"\n                    name={\"secPocDetails.0.name\"}\n                    placeholder=\"Enter name \"\n                    errors={errors}\n                    register={register(\"secPocDetails.0.name\", {\n                      required: saveDraft ? false : true,\n                      //pattern: /^(?!\\s*$).+/,\n                      pattern: /^[A-Za-z]+(?:\\s[A-Za-z]+)*$/,\n                      maxLength: 250,\n                    })}\n                  />\n                  <FormErrorMessage\n                    error={errors?.secPocDetails?.[0]?.name}\n                    position={\"absolute\"}\n                    messages={{\n                      required: \"Secondary POC is required\",\n                      pattern: \"Should contain only alphabets\",\n                      maxLength: \"Invalid POC name\",\n                    }}\n                  />\n                </div>\n                <div className={` col-md-3 ${styles.rowWidth} py-2`}>\n                  <label>\n                    Email ID<span className=\"text-danger\">*</span>\n                  </label>\n\n                  <InputBox\n                    className=\"login_input\"\n                    type=\"text\"\n                    name={\"secPocDetails.0.emailId\"}\n                    placeholder=\"Enter email ID\"\n                    errors={errors}\n                    value={getValues(\"secPocDetails.0.emailId\")}\n                    register={register(\"secPocDetails.0.emailId\", {\n                      required: saveDraft ? false : true,\n                      pattern: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$/,\n                      validate: {\n                        dupEmail: (value, field) => {\n                          const {\n                            secPocDetails,\n                            pocDetails: { emailId },\n                          } = field;\n                          if (!value) return true;\n                          if (emailId === value) {\n                            return false;\n                          }\n                          return true;\n                        },\n                      },\n                    })}\n                  />\n                  <FormErrorMessage\n                    error={errors?.secPocDetails?.[0]?.emailId}\n                    messages={{\n                      required: \"Email Id is Required\",\n                      pattern: \"Invalid email ID\",\n                      dupEmail: \"Email Id should be unique\",\n                    }}\n                    position={\"absolute\"}\n                  />\n                </div>\n                <div className={` col-md-3 ${styles.rowWidth} py-2`}>\n                  <label>\n                    Contact Number<span className=\"text-danger\">*</span>\n                  </label>\n                  <CommonLabelInput\n                    className=\"login_input\"\n                    type=\"number\"\n                    value={getValues(\"secPocDetails.0.mobileNumber\")}\n                    name={\"secPocDetails.0.mobileNumber\"}\n                    placeholder=\"Enter mobile number\"\n                    errors={errors}\n                    onKeyDown={numberInput}\n                    prefixText=\"+91\"\n                    register={register(\"secPocDetails.0.mobileNumber\", {\n                      required: saveDraft ? false : true,\n                      minLength: 10,\n                      maxLength: 10,\n                      //pattern: /^[0-9\\b]+$/,\n                      pattern: /^[6-9]\\d{9}$/,\n                      validate: {\n                        dupMobileNumber: (value, field) => {\n                          const {\n                            pocDetails: { mobileNumber },\n                            secPocDetails,\n                          } = field;\n                          if (!value) return true;\n                          if (\n                            mobileNumber === value ||\n                            secPocDetails[1].mobileNumber === value\n                          ) {\n                            return false;\n                          }\n                          console.log(value, field);\n                          return true;\n                        },\n                      },\n                    })}\n                  />\n                  <FormErrorMessage\n                    error={errors.secPocDetails?.[0]?.mobileNumber}\n                    messages={{\n                      required: \"Contact number is required\",\n                      minLength: \"Should contain minimum of 10 numbers\",\n                      maxLength: \"Should contain maximum of 10 numbers\",\n                      pattern: \"Invalid contact number\",\n                      dupMobileNumber: \"Contact number should be unique\",\n                    }}\n                    position={\"absolute\"}\n                  />\n                </div>\n                <div className={` col-md-3 ${styles.rowWidth} py-2`}>\n                  <label>\n                    Role<span className=\"text-danger\">*</span>\n                  </label>\n\n                  <CustomController\n                    name={\"secPocDetails.0.role\"}\n                    control={control}\n                    error={errors?.secPocDetails?.[0]?.role}\n                    // defaultValue={getValues(\"primaryRole\")}\n                    rules={{ required: saveDraft ? false : true }}\n                    messages={{ required: \"Role is required\" }}\n                    position={\"absolute\"}\n                    render={({ field: { onChange, value }, ...fields }) => {\n                      return (\n                        <ReactSearchSelect\n                          name=\"secPocDetails.0.role\"\n                          placeholder={\"Select role name\"}\n                          options={roles}\n                          handleChange={({ target: { value } } = {}) => {\n                            onChange(value);\n                          }}\n                          value={value}\n                        />\n                      );\n                    }}\n                  />\n                </div>\n              </div>\n              <div className=\"row align-items-center \">\n                <div className={`col-md-3 ${styles.rowWidth}  py-2`}>\n                  <InputBox\n                    className=\"login_input\"\n                    type=\"text\"\n                    name={\"secPocDetails.1.name\"}\n                    placeholder=\"Enter name (Optional)\"\n                    errors={errors?.secPocDetails?.[1]?.name}\n                    register={register(\"secPocDetails.1.name\", {\n                      required:\n                        saveDraft == false &&\n                        (getValues(\"secPocDetails.1.role\") ||\n                          getValues(\"secPocDetails.1.emailId\") ||\n                          getValues(\"secPocDetails.1.mobileNumber\"))\n                          ? true\n                          : false,\n                      pattern: /^[A-Za-z]+(?:\\s[A-Za-z]+)*$/,\n                      maxLength: 250,\n                    })}\n                  />\n                  <FormErrorMessage\n                    error={errors?.secPocDetails?.[1]?.name}\n                    messages={{\n                      required: \"Secondary POC is required\",\n                      pattern: \"Should contain only alphabets\",\n                      maxLength: \"Invalid POC name\",\n                    }}\n                    position={\"absolute\"}\n                  />\n                </div>\n                <div className={` col-md-3 ${styles.rowWidth} py-2`}>\n                  <InputBox\n                    className=\"login_input\"\n                    type=\"text\"\n                    name={\"secPocDetails.1.emailId\"}\n                    value={getValues(\"secPocDetails.1.emailId\")}\n                    placeholder=\"Enter email ID\"\n                    errors={errors?.secPocDetails?.[1]?.emailId}\n                    register={register(\"secPocDetails.1.emailId\", {\n                      required:\n                        saveDraft == false &&\n                        (getValues(\"secPocDetails.1.role\") ||\n                          getValues(\"secPocDetails.1.name\") ||\n                          getValues(\"secPocDetails.1.mobileNumber\"))\n                          ? true\n                          : false,\n                      pattern: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,}$/,\n                      validate: {\n                        dupEmail: (value, field) => {\n                          const {\n                            secPocDetails,\n                            pocDetails: { emailId },\n                          } = field;\n                          if (!value) return true;\n                          if (\n                            emailId === value ||\n                            secPocDetails[0]?.emailId === value\n                          ) {\n                            return false;\n                          }\n                          return true;\n                        },\n                      },\n                    })}\n                  />\n                  <FormErrorMessage\n                    error={errors?.secPocDetails?.[1]?.emailId}\n                    messages={{\n                      required: \"Email Id is required\",\n                      pattern: \"Email Id is Invalid\",\n                      dupEmail: \"Email Id should be unique\",\n                    }}\n                    position={\"absolute\"}\n                  />\n                </div>\n\n                <div className={` col-md-3 ${styles.rowWidth} py-2`}>\n                  <CommonLabelInput\n                    className=\"login_input\"\n                    type=\"number\"\n                    name={\"secPocDetails.1.mobileNumber\"}\n                    value={getValues(\"secPocDetails.1.mobileNumber\")}\n                    placeholder=\"Enter mobile number\"\n                    onKeyDown={numberInput}\n                    errors={errors.secPocDetails?.[1]?.mobileNumber}\n                    prefixText=\"+91\"\n                    register={register(\"secPocDetails.1.mobileNumber\", {\n                      required:\n                        saveDraft == false &&\n                        (getValues(\"secPocDetails.1.emailId\") ||\n                          getValues(\"secPocDetails.1.name\") ||\n                          getValues(\"secPocDetails.1.role\"))\n                          ? true\n                          : false,\n                      minLength: 10,\n                      maxLength: 10,\n                      //pattern: /^[0-9\\b]+$/,\n                      pattern: /^[6-9]\\d{9}$/,\n                      validate: {\n                        dupMobileNumber: (value, field) => {\n                          const {\n                            pocDetails: { mobileNumber },\n                            secPocDetails,\n                          } = field;\n                          if (!value) return true;\n                          if (\n                            mobileNumber === value ||\n                            secPocDetails[0].mobileNumber === value\n                          ) {\n                            return false;\n                          }\n                          return true;\n                        },\n                      },\n                    })}\n                  />\n                  <FormErrorMessage\n                    error={errors.secPocDetails?.[1]?.mobileNumber}\n                    messages={{\n                      pattern: \"Invalid contact number\",\n                      required: \"Contact number is required\",\n                      minLength: \"Should contain minimum of 10 numbers\",\n                      maxLength: \"Should contain maximum of 10 numbers\",\n                      dupMobileNumber: \"Contact number should be unique\",\n                    }}\n                    position={\"absolute\"}\n                  />\n                </div>\n\n                <div className={` col-md-3 ${styles.rowWidth} py-2`}>\n                  <CustomController\n                    name={\"secPocDetails.1.role\"}\n                    control={control}\n                    error={errors?.secPocDetails?.[1]?.role}\n                    // defaultValue={getValues(\"primaryRole\")}\n                    rules={{\n                      required:\n                        saveDraft == false &&\n                        (getValues(\"secPocDetails.1.emailId\") ||\n                          getValues(\"secPocDetails.1.name\") ||\n                          getValues(\"secPocDetails.1.mobileNumber\"))\n                          ? true\n                          : false,\n                    }}\n                    messages={{ required: \"Role is required\" }}\n                    position={\"absolute\"}\n                    render={({ field: { onChange, value }, ...fields }) => {\n                      return (\n                        <ReactSearchSelect\n                          name=\"secPocDetails.1.role\"\n                          placeholder={\"Select role name\"}\n                          //options={roles}\n                          options={\n                            getValues(\"secPocDetails.1.role\") !== \"\"\n                              ? [\n                                  {\n                                    value: \"\",\n                                    label: \"Click here to deselect\",\n                                  },\n                                  ...(roles || {}),\n                                ]\n                              : roles\n                          }\n                          handleChange={({ target: { value } } = {}) => {\n                            onChange(value);\n                          }}\n                          isClearable={true}\n                          value={value}\n                        />\n                      );\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n      {!PendingProperty && PropertyStatus == \"PENDING\" ? <></> : <hr />}\n      {showPreview ? (\n        !PendingProperty ? (\n          <>\n            {!TotalDraft && PropertyStatus !== \"PENDING\" && (\n              <div className=\"d-flex justify-content-start\">\n                <div\n                  className={`d-flex justify-content-start ${styles.btn} py-2 px-2 col`}\n                >\n                  <div className={styles.btnWidth}>{\n                    console.log(UnitCreationDraft)\n                  }\n                    {PropertyStatus == \"APPROVED\" &&\n                      UnitCreationDraft == false && (\n                        <NormalButton\n                          className={\"draftBtn\"}\n                          label={\"Add More Units\"}\n                          //id={\"draftBtn\"}\n                          //onClick={(e) => handleSaveDraft(e)}\n                          onClick={(e) => {}}\n                        />\n                      )}\n                  </div>\n                </div>\n                <div\n                  className={`d-flex justify-content-end ${styles.btn} py-2 px-2 col`}\n                >\n                  <div className={styles.btnWidth}>\n                    {PropertyStatus !== \"REJECTED\" ? (\n                      <NormalButton\n                        className={\"draftBtn\"}\n                        label={\"Edit Details\"}\n                        //id={\"draftBtn\"}\n                        //onClick={(e) => handleSaveDraft(e)}\n                        onClick={(e) => {\n                          handleNextTab(activeTab, true);\n                        }}\n                        disabled={isDisabled || (!isDirty && !propertyId)}\n                      />\n                    ) : (\n                      <NormalButton\n                        className={\"submitBtn\"}\n                        label={\"Edit Details\"}\n                        //id={\"draftBtn\"}\n                        //onClick={(e) => handleSaveDraft(e)}\n                        onClick={(e) => {\n                          handleNextTab(activeTab, true);\n                        }}\n                        disabled={isDisabled || (!isDirty && !propertyId)}\n                      />\n                    )}\n                  </div>\n                  {(UnitCreationDraft == \"\" || UnitCreationDraft == null) &&\n                  PropertyStatus !== \"REJECTED\" ? (\n                    <div className={styles.btnWidth}>\n                      <NormalButton\n                        className={\"submitBtn\"}\n                        label={\"Add Units\"}\n                        id=\"AddunitBtn\"\n                        onClick={debounce(async (e) => {\n                          //handleNextTab();\n                        }, 800)}\n                      />\n                    </div>\n                  ) : UnitCreationDraft == true &&\n                    PropertyStatus !== \"REJECTED\" ? (\n                    <div className={styles.btnWidth}>\n                      <NormalButton\n                        className={\"submitBtn\"}\n                        label={\"Continue Unit Creation\"}\n                        id=\"AddunitBtn\"\n                        onClick={debounce(async (e) => {\n                          //handleNextTab();\n                        }, 800)}\n                      />\n                    </div>\n                  ) : UnitCreationDraft == false &&\n                    PropertyStatus !== \"REJECTED\" ? (\n                    <div className={styles.btnWidth}>\n                      <NormalButton\n                        className={\"submitBtn\"}\n                        label={\"Add More Units\"}\n                        id=\"AddMoreBtn\"\n                        onClick={debounce(async (e) => {\n                          //handleNextTab();\n                        }, 800)}\n                      />\n                    </div>\n                  ) : UnitCreationDraft == false &&\n                    PropertyStatus == \"APPROVED\" ? (\n                    <div className={styles.btnWidth}>\n                      <NormalButton\n                        className={\"submitBtn\"}\n                        label={\"Submit\"}\n                        id=\"submitBtn\"\n                        onClick={debounce(async (e) => {\n                          handleNextTab();\n                        }, 800)}\n                      />\n                    </div>\n                  ) : (\n                    <></>\n                  )}\n                  {/* <div className={styles.btnWidth}>\n                <NormalButton\n                  className={\"submitBtn\"}\n                  label={\"Submit\"}\n                  id=\"submitBtn\"\n                  onClick={debounce(async (e) => {\n                    handleNextTab();\n                  }, 800)}\n                />\n              </div> */}\n                </div>\n              </div>\n            )}\n          </>\n        ) : (\n          <>\n              <div className=\"d-flex justify-content-start\">\n                <div\n                  className={`d-flex justify-content-end ${styles.btn} py-2 px-2 col`}\n                >\n                  <div className={styles.btnWidth}>\n                    <NormalButton\n                      className={\"draftBtn\"}\n                      label={\"Edit Details\"}\n                      //id={\"draftBtn\"}\n                      //onClick={(e) => handleSaveDraft(e)}\n                      onClick={(e) => {\n                        handleNextTab(activeTab, true);\n                      }}\n                      disabled={isDisabled || (!isDirty && !propertyId)}\n                    />\n                  </div>\n                  <div className={styles.btnWidth}>\n                    <NormalButton\n                      className={\"submitBtn\"}\n                      label={\"Submit\"}\n                      id=\"submitBtn\"\n                      onClick={debounce(async (e) => {\n                        handleNextTab();\n                      }, 800)}\n                    />\n                  </div>\n                </div>\n              </div>\n          </>\n        )\n      ) : (\n        <div className={`d-flex justify-content-end ${styles.btn} py-2 px-2`}>\n          <div className={styles.btnWidth}>\n            <NormalButton\n              innerref={childSaveDraftRef}\n              className={\"draftBtn\"}\n              label={isPreviewScreen ? \"Cancel\" : \"Save as Draft\"}\n              //id={\"draftBtn\"}\n              //onClick={(e) => handleSaveDraft(e)}\n              onClick={debounce(async (e) => {\n                if (isPreviewScreen) {\n                  handleNextTab(activeTab, false, isPreviewScreen);\n                } else {\n                  await setValue(\"isDraft\", true);\n                  await setSaveDraft(true);\n                  setTimeout(() => {\n                    handleSaveDraft(e);\n                  }, 500);\n                }\n              }, 800)}\n              disabled={isDisabled || (!isDirty && !propertyId)}\n            />\n          </div>\n          <div className={styles.btnWidth}>\n            <NormalButton\n              className={\"submitBtn\"}\n              label={isPreviewScreen ? \"Save Changes\" : \"Save & Proceed\"}\n              id=\"submitBtn\"\n              //onClick={handleNextTab}\n              onClick={debounce(async (e) => {\n                setSaveDraft(false);\n                await setValue(\"isDraft\", false);\n                handleSubmit(onsubmit)(e);\n              }, 800)}\n              // onClick={async (e) => {\n              //   //e.preventDefault();\n              //   setSaveDraft(false);\n              //   setValue(\"isDraft\", false);\n              //   await setTimeout(() => {\n              //     handleSubmit(onsubmit)(e);\n              //   }, 500);\n              // }}\n              disabled={isDisabled}\n              // onClick={(e) => {\n              //   setValue(\"isDraft\", false);\n              //   handleSubmit(onsubmit)(e);\n              // }}\n            />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(BasicDetailsForm);\n","import React, { useState, useEffect, useRef } from \"react\";\nimport classes from \"./ReactSearchDropdown.module.scss\";\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\nimport SearchIcon from \"assets/icons/search.svg\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Select, { components } from \"react-select\";\nimport { ExpandLess } from \"@mui/icons-material\";\n\nconst ReactSearchSelect = ({\n  placeholder = \"Search role\",\n  options = [],\n  value,\n  name,\n  notification = false,\n  ...props\n}) => {\n  const wrapperRef = useRef(null);\n\n  const [state, setState] = useState(false);\n\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\n        //setState((open) => false);\n        setState((open) => false);\n      }\n    };\n\n    window.addEventListener(\"click\", handleClickOutside, true);\n    return () => {\n      // eslint-disable-next-line no-restricted-globals\n      window.removeEventListener(\"click\", removeEventListener, true);\n    };\n  }, []);\n\n  const toggleOpen = async () => {\n    setState((open) => !open);\n  };\n\n  const handleChange = (newValue) => {\n    let { isMulti } = props;\n    if (!!isMulti) {\n      let body = {\n        target: {\n          name,\n          value: [],\n        },\n      };\n      if (!!newValue && newValue.length) {\n        newValue.forEach((array) => {\n          let obj = {\n            value: array.value,\n            label: array.label,\n          };\n          body.target.value.push(obj);\n        });\n      }\n      props.handleChange(body, newValue?.value);\n    } else {\n      let body = {\n        target: {\n          name: props.name,\n          value: newValue ? newValue.value : \"\",\n          label: newValue ? newValue.label : \"\",\n        },\n      };\n      props.handleChange(body, newValue);\n    }\n    toggleOpen();\n  };\n\n  const renderDisplay = () => {\n    const newValue = value ? options.find((o) => o.value.includes(value)) : \"\";\n    return (\n      <button\n        className={`${classes.input} ${newValue ? classes.selected : \"\"}`}\n        onClick={toggleOpen}\n        style={{ position: \"relative\" }}\n      // style={{\n      //   color: \"#1E2528\"\n      // }}\n      >\n        {newValue.label || placeholder}\n        {/* <IconButton className={classes.expandIcon}> */}\n        {state ? <ExpandLess /> : <ExpandMoreIcon />}\n        {/* </IconButton> */}\n      </button>\n    );\n  };\n\n  return (\n    <div ref={wrapperRef}>\n      <Dropdown\n        className=\"search-dropdown\"\n        isOpen={state}\n        target={renderDisplay()}\n      >\n        <div>\n          <IconButton className={classes.iconbtn}>\n            <img\n              className={classes.expandmoreIcon}\n              src={SearchIcon}\n              alt=\"search icon\"\n            />\n          </IconButton>\n          <Select\n            name={name}\n            className={classes.search_select_wrap}\n            classNamePrefix=\"search_select\"\n            // autoFocus\n            backspaceRemovesValue={false}\n            controlShouldRenderValue={false}\n            hideSelectedOptions={false}\n            isClearable={false}\n            menuIsOpen\n            onChange={handleChange}\n            options={options}\n            placeholder={placeholder}\n            tabSelectsValue={false}\n            components={{ IndicatorSeparator: null, DropdownIndicator: null }}\n            menuPosition=\"relative\"\n          />\n        </div>\n      </Dropdown>\n    </div>\n  );\n};\n\nconst Dropdown = ({ children, isOpen, target, onClose }) => (\n  <div className=\"position-relative\">\n    {target}\n    {isOpen ? <Menu>{children}</Menu> : null}\n  </div>\n);\n\nconst Menu = (props) => <div className={classes.menu} {...props} />;\n\nexport default ReactSearchSelect;\n","import React from \"react\";\nimport { OverlayTrigger } from 'react-bootstrap';\nimport Tooltip from 'react-bootstrap/Tooltip';\nimport classes from \"./Tooltip.module.scss\"\nimport { ReactComponent as InfoIcon } from \"assets/images/infoIcon.svg\";\n\nfunction TriggerExample({ children, label = \"Test Message\", renderToolipUI, placement = \"auto\" }) {\n  const renderTooltip = (props) => (\n    <Tooltip className={classes.tooltip} id=\"button-tooltip\" {...props}>\n      {renderToolipUI ? (\n        renderToolipUI()\n      ) : (\n        <div className=\"row d-flex align-items-center gap-1\">\n          <div className=\"col-2\">\n            <InfoIcon fontSize={6} className=\"p-1\" />\n          </div>\n          <div className=\"col px-0\">{label}</div>\n        </div>\n      )}\n    </Tooltip>\n  );\n  return (\n    <OverlayTrigger\n      placement={placement}\n      delay={{ show: 250, hide: 400 }}\n      overlay={renderTooltip}\n    >\n      {children}\n    </OverlayTrigger>\n  );\n}\n\nexport default TriggerExample;","// extracted by mini-css-extract-plugin\nexport default {\"basicInfo\":\"BasicDetailsForm_basicInfo__8Oxto\",\"contentPart\":\"BasicDetailsForm_contentPart__KGYLX\",\"btn\":\"BasicDetailsForm_btn__RpNOs\",\"rowWidth\":\"BasicDetailsForm_rowWidth__m6IrL\",\"AddressWidth\":\"BasicDetailsForm_AddressWidth__feDl4\",\"btnWidth\":\"BasicDetailsForm_btnWidth__Nl+69\",\"propertyLabel\":\"BasicDetailsForm_propertyLabel__cyI+o\",\"tooltipdesc\":\"BasicDetailsForm_tooltipdesc__wUaDj\",\"previewTextBtn\":\"BasicDetailsForm_previewTextBtn__Hv4uG\",\"moreBtn\":\"BasicDetailsForm_moreBtn__+SMN7\",\"tableWrap\":\"BasicDetailsForm_tableWrap__K8ehj\",\"table\":\"BasicDetailsForm_table__IRR9T\",\"residentList\":\"BasicDetailsForm_residentList__pwFlz\"};","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"ReactSearchDropdown_input__cRLJX\",\"selected\":\"ReactSearchDropdown_selected__cdNXz\",\"expandIcon\":\"ReactSearchDropdown_expandIcon__sYmez\",\"menu\":\"ReactSearchDropdown_menu__1COJm\",\"blanket\":\"ReactSearchDropdown_blanket__8K545\",\"search_select_wrap\":\"ReactSearchDropdown_search_select_wrap__ctHBN\",\"iconbtn\":\"ReactSearchDropdown_iconbtn__DykRD\",\"expandmoreIcon\":\"ReactSearchDropdown_expandmoreIcon__i2Goi\"};","// extracted by mini-css-extract-plugin\nexport default {\"tooltip\":\"Tooltip_tooltip__EU8gq\"};"],"names":["_path","_path2","_path3","_path4","_path5","_path6","_excluded","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgInfoIcon","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","d","fillRule","clipRule","stroke","strokeWidth","ForwardRef","BasicDetailsForm","_watch","_watch2","_getValues","_getValues2","_errors$locationDetai","_errors$locationDetai2","_errors$locationDetai3","_errors$locationDetai4","_errors$locationDetai5","_errors$locationDetai6","_errors$locationDetai7","_errors$locationDetai8","_errors$locationDetai9","_errors$locationDetai10","_errors$locationDetai11","_errors$pocDetails","_errors$pocDetails2","_errors$pocDetails3","_errors$pocDetails4","_errors$secPocDetails","_errors$secPocDetails2","_errors$secPocDetails3","_errors$secPocDetails4","_errors$secPocDetails5","_errors$secPocDetails6","_errors$secPocDetails7","_errors$secPocDetails8","_errors$secPocDetails9","_errors$secPocDetails10","_errors$secPocDetails11","_errors$secPocDetails12","_errors$secPocDetails13","_errors$secPocDetails14","_errors$secPocDetails15","_errors$secPocDetails16","_errors$secPocDetails17","_errors$secPocDetails18","_errors$secPocDetails19","_errors$secPocDetails20","_errors$secPocDetails21","_errors$secPocDetails22","handleNextTab","showPreview","activeTab","isPreviewScreen","childSaveDraftRef","_useForm","useForm","mode","defaultValues","propertyName","propertyType","propertyTypeName","status","landlineStateCode","landlineNumber","countryCode","mobileNumber","residentType","website","locationDetails","addressLine1","addressLine2","country","state","city","area","landmark","postalCode","googleMapLink","latitude","longitude","stateISO","countryISO","pocDetails","name","emailId","role","staffId","secPocDetails","isDraft","register","handleSubmit","getValues","setValue","reset","control","_useForm$formState","formState","errors","isDirty","watch","dirtyFields","trigger","setError","clearErrors","dispatch","useDispatch","residentTypes","useSelector","basic","propertyTypes","propertyId","basicDetails","_useState","useState","_useState2","_slicedToArray","setpropertyTypeName","_useState3","_useState4","isDisabled","setIsDisabled","_useState5","_useState6","location","setLocation","PropertyStatus","propertyStatus","UnitCreationDraft","unitCreationDraft","TotalDraft","PendingProperty","showPendingProperty","console","log","useEffect","getResidentTypes","getPropertyTypes","getBasicDetails","countryOptions","useMemo","countries","Country","getAllCountries","map","o","_objectSpread","value","label","stateOption","filterStates","State","isoCode","cityOption","filterCity","City","getCitiesOfState","removeUnderscoreId","restValues","_id","options","newValues","__v","approvalStatus","unitAdded","updatedAt","createdAt","_excluded2","_toConsumableArray","values","saver","reduce","acc","val","find","push","prefilledValues","getSelectedPropertyType","a","_basicDetails$locatio","newLocations","setTabDirty","statusOptions","roles","_useState7","_useState8","saveDraft","setSaveDraft","onsubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","data","_location$country","_location$state","_location$city","_location$city2","form","response","wrap","_context","prev","next","type","abrupt","residentTypeId","addBasicDetails","sent","setTabStatus","setPropertyId","Boolean","t0","stop","_x","handleSaveDraft","_ref3","_callee2","e","_context2","arg1","_x2","handleAddResidentType","fieldArray","addResidentType","types","then","handleAddPropertyType","addPropertyType","handleCopyText","navigator","clipboard","writeText","propertyTypePreviewValue","_propertyTypes$find","statusPreviewValue","_statusOptions$find","residentTypeValue","residentTypePreviewValue","slice","join","primaryRoleValue","_roles$find","secondaryRoleValue","_roles$find2","secondaryTwoRoleValue","_roles$find3","_jsxs","className","styles","basicInfo","children","concat","contentPart","_jsx","basicTitle","propertyLabel","basicForm","rowWidth","_Fragment","InputBox","placeholder","required","pattern","maxLength","FormErrorMessage","error","messages","position","CustomController","defaultValue","rules","render","_ref4","_ref4$field","field","onChange","fields","_excluded3","NormalMultiSelect","inputPlaceholder","isSearchable","isMulti","addProperty","handleChange","_ref5","undefined","handleAdd","_ref6","_ref6$field","_excluded4","minLength","requiredSTDCode","_ref8","_ref8$field","_excluded5","LandlineInput","handleSelectCode","opt","stdCode","selectedCode","shouldValidate","CommonLabelInput","onKeyDown","numberInput","prefixText","TooltipHover","placement","renderToolipUI","residentList","index","style","background","moreBtn","_ref9","_ref9$field","_excluded6","correctionData","valueData","updatedData","twoDataOnly","array","selectRef","isClearable","addPropertyLabel","showCheckbox","_ref10","showfooterButton","closeMenuOnSelect","residentTypeSelect","updatedValue","AddressWidth","preventSpecialCharacter","_ref11","_ref11$field","_excluded7","valueobj","_ref12","_ref12$field","_excluded8","valueObj","_ref13","_ref13$field","_excluded9","_ref14","_ref14$target","_ref15","_ref15$target","href","previewTextBtn","rel","PopoverStickOnHover","renderTooltipContent","tooltipdesc","IconButton","onClick","src","CopyIcon","alt","tableWrap","table","validate","dupEmail","dupMobileNumber","_ref16","_ref16$field","_excluded10","ReactSearchSelect","_ref18","_ref18$field","_excluded11","_secPocDetails$","_ref20","_ref20$field","_excluded12","btn","btnWidth","NormalButton","disabled","debounce","_ref26","_callee7","_context7","_x7","_ref23","_callee4","_context4","_x4","_ref24","_callee5","_context5","_x5","_ref25","_callee6","_context6","_x6","_ref22","_callee3","_context3","_x3","innerref","_ref27","_callee8","_context8","setTimeout","_x8","_ref28","_callee9","_context9","_x9","memo","Dropdown","isOpen","onClose","Menu","classes","menu","_ref$placeholder","_ref$options","notification","wrapperRef","useRef","setState","window","addEventListener","event","current","contains","open","removeEventListener","toggleOpen","newValue","includes","input","selected","ExpandLess","ExpandMoreIcon","renderDisplay","iconbtn","expandmoreIcon","SearchIcon","Select","search_select_wrap","classNamePrefix","backspaceRemovesValue","controlShouldRenderValue","hideSelectedOptions","menuIsOpen","body","forEach","obj","tabSelectsValue","components","IndicatorSeparator","DropdownIndicator","menuPosition","_ref$label","_ref$placement","OverlayTrigger","delay","show","hide","overlay","Tooltip","tooltip","InfoIcon","fontSize"],"sourceRoot":""}