{"version":3,"file":"static/js/1271.a3853500.chunk.js","mappings":"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","sources":["components/AddUnits/InventorySetUp/InventoryTable/BlockTable/index.jsx","components/UI/common/ErrorMessage/index.js","assets/images/tickCircle.svg","assets/icons/outlineCircletick.svg","components/UI/common/InputBox/InputBox.js","helpers/validation.js","../node_modules/@mui/icons-material/esm/ErrorOutlineOutlined.js","webpack://Boston-Living/./src/components/UI/common/InputBox/InputBox.scss?14be","webpack://Boston-Living/./src/components/AddUnits/InventorySetUp/InventoryTable/BlockTable/styles.module.scss?7e90"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\"; // Import useDispatch\nimport styles from \"./styles.module.scss\";\nimport { updateNumRows } from \"../../../../../redux/actions/otherBlocksActions\";\nimport InputBox from \"components/UI/common/InputBox/InputBox\";\nimport { numberInputMax } from \"helpers/validation\";\nimport FormErrorMessage from \"components/UI/common/ErrorMessage\";\n\nconst BlockTable = ({\n  tabelHeader,\n  tabelHeader2,\n  errors,\n  register = () => {},\n  otherBlocksList = [],\n  handleFloorCount = () => {},\n}) => {\n  const dispatch = useDispatch(); // Get the dispatch function\n  const [userInput, setUserInput] = useState(\"\"); // State to store user input\n\n  // Function to update the number of rows based on user input\n  const handleUserInput = (index, event) => {\n    const newValue = event.target.value;\n    setUserInput(newValue);\n    const updatedList = [...otherBlocksList];\n    updatedList[index].numberOfFloors = newValue;\n    handleFloorCount(event.target.name, newValue);\n    // if (!isNaN(newValue)) {\n    //   const newNumRows = parseInt(newValue, 10);\n    //   dispatch(updateNumRows(newNumRows));\n    // }\n  };\nconsole.log(otherBlocksList)\n  return (\n    <div className={styles.ChargesForm}>\n      <div className=\"\">\n        <div className={otherBlocksList.length>0 ? styles.basicForm : styles.basicForm1}>\n            <table className={`p-0 ${styles.earlyCheckInChargesBody}`}>\n              <thead className={styles.otherChargesheading}>\n                <th className={styles.rightBorder}>\n                  <span className={styles.tableHeading}>{tabelHeader}</span>\n                </th>\n                <th className={\"\"}>\n                  <span className={styles.tableHeading}>{tabelHeader2}</span>\n                </th>\n              </thead>\n              <tbody>\n                {otherBlocksList.length > 0 &&\n                  otherBlocksList.map((item, index, array) => (\n                    <tr key={index} className={``}>\n                      {console.log(item)}\n                      <td className={` ${styles.rightBorder} text-left`}>\n                        {item.block}\n                      </td>\n                      <td className={` text-left`}>\n                        <InputBox\n                          type=\"number\"\n                          className={`small-placeholder ${styles.styleInputBox}`}\n                          ratefiled={true}\n                          // disabled={preview}\n                          name={`floorsPerBlock.${index}.numberOfFloors`}\n                          placeholder=\"Enter number of floors\"\n                          errors={errors}\n                          value={item.numberOfFloors}\n                          onKeyDown={numberInputMax}\n                          onChange={(event) => handleUserInput(index, event)}\n                          register={register(\n                            `floorsPerBlock.${index}.numberOfFloors`,\n                            {\n                              required:\n                                item.numberOfFloors == \"\" ||\n                                item.numberOfFloors == null\n                                  ? // !saveDraft\n                                    true\n                                  : false,\n                              pattern: /^[0-9\\b]+$/,\n                              validate: {\n                                max100: (value) => {\n                                  if (parseInt(value) > 100) {\n                                    return \"Maximum value is 100\";\n                                  }\n                                  return true;\n                                },\n                              },\n                            }\n                          )}\n                        />\n                        <FormErrorMessage\n                      className={styles.error}\n                          error={\n                            errors?.floorsPerBlock?.[index]?.numberOfFloors\n                          }\n                          messages={{\n                            required: \"Enter number of floors is required\",\n                            pattern: \"Enter number of floors is invalid\",\n                            max100: \"Maximum number of floors is 100\",\n                          }}\n                        />\n                      </td>\n                    </tr>\n                  ))}\n              </tbody>\n            </table>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BlockTable;\n","/* eslint-disable react/prop-types */\nimport { ErrorOutlineOutlined } from \"@mui/icons-material\";\nimport React from \"react\";\n\nconst FormErrorMessage = ({ error, type, messages, icon = false, position = \"\", className = \"\" }) => {\n  if (!error) return null;\n  return (\n    <span\n      className={`text-danger d-flex align-items-center fs-12 fw-500 ${className || \"\"}`}\n      style={{\n        textTransform: \"\",\n        position,\n        marginTop: position === \"absolute\" ? \"4px\" : 0\n      }}>\n      {messages[error.type] ? <>{icon && <ErrorOutlineOutlined fontSize=\"12px\" />} {messages[error.type]}</> : <>{icon && <ErrorOutlineOutlined />} Error in field</>}\n    </span>\n  );\n};\nexport default FormErrorMessage;\n","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgTickCircle(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C17.5 22 22 17.5 22 12C22 6.5 17.5 2 12 2ZM10 17L5 12L6.41 10.59L10 14.17L17.59 6.58L19 8L10 17Z\",\n    fill: \"#61903D\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTickCircle);\nexport default __webpack_public_path__ + \"static/media/tickCircle.512623b0f3ec79af1078fc7f855c9d77.svg\";\nexport { ForwardRef as ReactComponent };","var _g, _defs;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgOutlineCircletick(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 18 18\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_5194_12640)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M8.99766 0.993164C4.58498 0.993164 0.992188 4.58596 0.992188 8.99863C0.992188 13.4113 4.58498 17.0002 8.99766 17.0002C13.4103 17.0002 16.9992 13.4113 16.9992 8.99863C16.9992 4.58596 13.4103 0.993164 8.99766 0.993164ZM8.99766 2.32719C12.6894 2.32719 15.6652 5.30692 15.6652 8.99863C15.6652 12.6903 12.6894 15.6662 8.99766 15.6662C5.30594 15.6662 2.32622 12.6903 2.32622 8.99863C2.32622 5.30692 5.30594 2.32719 8.99766 2.32719ZM12.3171 5.78342C12.2291 5.78983 12.1433 5.81362 12.0646 5.85343C11.9859 5.89323 11.9158 5.94825 11.8585 6.0153L7.94372 10.5593L6.10813 8.66382C6.04675 8.6009 5.97353 8.55075 5.8927 8.51622C5.81187 8.4817 5.72501 8.46349 5.63712 8.46265C5.54922 8.4618 5.46203 8.47834 5.38055 8.51131C5.29907 8.54427 5.22491 8.59302 5.16233 8.65474C5.03668 8.77835 4.96507 8.94666 4.96313 9.12291C4.96119 9.29915 5.02909 9.469 5.15199 9.59534L7.49175 12.012C7.55622 12.0786 7.63388 12.131 7.71975 12.166C7.80563 12.2009 7.89785 12.2175 7.99052 12.2148C8.08319 12.2121 8.17428 12.1902 8.25798 12.1503C8.34168 12.1104 8.41615 12.0535 8.47664 11.9833L12.8682 6.88168C12.9838 6.74778 13.0414 6.57348 13.0285 6.39709C13.0155 6.22071 12.9331 6.05668 12.7992 5.94109C12.6655 5.82713 12.4922 5.77045 12.3171 5.78342Z\",\n    fill: \"#1F9A50\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_5194_12640\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 18,\n    height: 18,\n    fill: \"white\"\n  })))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgOutlineCircletick);\nexport default __webpack_public_path__ + \"static/media/outlineCircletick.9f3c98014e8b20cc9b5d5d83b35a1edf.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useState } from \"react\";\n// styles\nimport \"./InputBox.scss\";\n// services\nimport { BsSearch, GoMail } from \"react-icons/bs\";\nimport { FiMail } from \"react-icons/fi\";\nimport { AiOutlineEye, AiOutlineEyeInvisible } from \"react-icons/ai\";\nimport TickCircel from \"assets/images/tickCircle.svg\";\nimport outlineCircletick from \"assets/icons/outlineCircletick.svg\";\nimport { debounce } from \"helpers\";\n\nconst InputBox = (props) => {\n  let {\n    className,\n    placeholder = \"\",\n    register = {},\n    value = \"\",\n    type = \"text\",\n    onChange,\n    name = \"\",\n    grayedBox = false,\n    shadow = false,\n    disabled = false,\n    maxLength,\n    SearchIcon = false,\n    confirm = false,\n    isOtp = false,\n    Message = false,\n    Password = false,\n    setPassword,\n    showPassword,\n    notesBox = false,\n    sendOtp,\n    isOtpVerify,\n    isError = false,\n    showSuccessBorder = false,\n    isPropertySubmitted = false,\n    inputClass = \"\",\n    ratefiled = false,\n    amountfiled = false,\n    onKeyDown,\n    title,\n    upperCaseLabel = false,\n    isDefaultValue = true,\n    isWhiteDisableBg = false,\n    readOnly = false,\n    ref,\n    searchData = [],\n    searchValue = false,\n    showData = false,\n    SearchCompanyNameID=()=>{},\n    registerBlock=false,\n    style={}\n  } = props;\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [searchCompanyNameID, SetSearchCompanyNameID] = useState(\"\");\n  const handleClose = () => {\n    setTimeout(() => {\n      setShowDropdown(false);\n    }, 1000);\n  };\n  useEffect(() => {\n    SearchCompanyNameID(searchCompanyNameID);\n  }, [searchCompanyNameID]);\n  return (\n    <>\n      {notesBox ? (\n        <div>\n          <textarea\n            disabled={disabled}\n            name={name}\n            placeholder={placeholder}\n            className={`\n              ${\n                disabled\n                  ? \"inputBoxGrayed\"\n                  : notesBox\n                  ? \"NotesinputBoxStyle\"\n                  : \"\"\n              } ${className}`}\n            value={upperCaseLabel ? String(value).toUpperCase() : value}\n            maxLength={maxLength}\n            onWheel={(event) => event.currentTarget.blur()}\n            onChange={(e) => {\n              const body = {\n                target: {\n                  name: e.target.name,\n                  value: e.target.value,\n                },\n              };\n              if (onChange) onChange(body);\n            }}\n            autoComplete={\"off\"}\n          />\n        </div>\n      ) : (\n        <div className=\"input_head\">\n          <input\n            ref={ref}\n            disabled={disabled}\n            title={title}\n            name={name}\n            placeholder={\n              placeholder &&\n              String(placeholder)?.charAt(0).toUpperCase() +\n                String(placeholder)?.slice(1)\n            }\n            readOnly={readOnly}\n            onKeyDown={onKeyDown}\n            className={` ${className} ${\n              disabled\n                ? `inputBoxGrayed ${isWhiteDisableBg ? \"whiteDisableBg\" : \"\"}`\n                : grayedBox\n                ? \"inputBoxGrayed\"\n                : shadow\n                ? \"inputBoxIconStyle\"\n                : notesBox\n                ? \"NotesinputBoxStyle\"\n                : ratefiled\n                ? \"ratefiled\"\n                : amountfiled\n                ? \"amountfiled\"\n                : `inputBoxStyle ${isError && \"error\"} ${\n                    showSuccessBorder && \"success\"\n                  }\n                        \n                        ${name === \"website\" ? \" inherit-text\" : \"\"}  `\n            } ${inputClass} ${upperCaseLabel ? \"uppercaseText\" : \"\"}`}\n            {...register}\n            {...(isDefaultValue ? { defaultValue: value } : { value })}\n            type={!showPassword ? type : \"password\"}\n            maxLength={maxLength}\n            defaultValue={value}\n            onFocus={() => {\n              setShowDropdown(true);\n            }}\n            onBlur={handleClose}\n            onWheel={(event) => event.currentTarget.blur()}\n            onChange={(e) => {\n              const body = {\n                target: {\n                  name: e.target.name,\n                  value: e.target.value,\n                },\n              };\n              if (onChange) onChange(body);\n              if(!registerBlock){\n                register?.onChange?.(body);\n              }\n              \n            }}\n            autoComplete={\"off\"}\n            style={style}\n          />\n          {searchData.length && showDropdown && searchValue ? (\n            <div className=\"dropDown-style\">\n              {console.log(SearchCompanyNameID)}\n              {showData &&\n                searchData.map((item) => {\n                  console.log(item?._id);\n                  return (\n                    <div\n                      onClick={() => SetSearchCompanyNameID(item)}\n                      className=\"dropdown-List\"\n                      key={item.id}\n                    >\n                      <span>{item?.companyName ? item?.companyName : \"\"}</span>\n                    </div>\n                  );\n                })}\n            </div>\n          ) : null}\n\n          <div>\n            {isPropertySubmitted ? (\n              <div className=\"property_submit\">\n                <img className=\"outline_circle_tick\" src={outlineCircletick} />\n              </div>\n            ) : SearchIcon ? (\n              <i className=\"search_icon\">\n                <BsSearch color=\"grey\" />\n              </i>\n            ) : confirm ? (\n              <div className=\"search_icon\">\n                <span>Confirm</span>\n              </div>\n            ) : isOtp ? (\n              <div className=\"search_icon\">\n                {isOtpVerify ? (\n                  <img src={TickCircel} alt=\"tick\" />\n                ) : (\n                  <span onClick={sendOtp}>Send OTP</span>\n                )}\n              </div>\n            ) : Message ? (\n              <i className=\"message_icon\">\n                <FiMail />\n              </i>\n            ) : Password ? (\n              <i className=\"password_icon\">\n                {\" \"}\n                <span onClick={() => setPassword(!showPassword)}>\n                  {!showPassword ? (\n                    <AiOutlineEye style={{ fontSize: \"20px\" }} />\n                  ) : (\n                    <AiOutlineEyeInvisible style={{ fontSize: \"20px\" }} />\n                  )}\n                </span>\n              </i>\n            ) : (\n              \"\"\n            )}\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default InputBox;\n","import moment from \"moment\";\n\nconst PASSWORD_REGEX =\n  /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?& ]{8,}$/s;\n\nconst Name_Regex = /^[a-zA-Z ]+$/;\n\nconst pinCodeRegex = /^\\d{6}$/;\n\nexport const spaceValidation = (value) =>\n  value ? value.toString().trim() !== \"\" : true;\n\nexport const validatePIN = (pin) => pinCodeRegex.test(pin);\n\nexport const nameValidation = (value) =>\n  value ? Name_Regex.test(value) : true;\n\nexport const passwordValidation = (value) =>\n  value && PASSWORD_REGEX.test(value);\n\nexport const ignoreNegativeValue = (value) => value && value > 0;\n\nexport const onlyNumbers = (value) => (value ? /^[0-9]+$/.test(value) : true);\n\nexport const numberLetterValidation = (value) =>\n  value ? /^[0-9a-zA-Z]+$/.test(value) : true;\n\nexport const maxLengthValidation = (len) => (value) =>\n  value ? String(value)?.length <= len : true;\n\nexport const minLengthValidation = (len) => (value) =>\n  value ? String(value)?.length >= len : true;\n\nexport const experienceValidate = (\n  data,\n  experienceYear,\n  setError,\n  errorName,\n  errorType,\n  shouldFocus\n) => {\n  if (data?.length > 0) {\n    let momentDates = data\n      ?.map((x) => x && moment(x?.passingYear))\n      .filter(Boolean);\n    const minDate = moment.min(momentDates);\n    const diffYear = moment().get(\"year\") - moment(minDate).get(\"year\");\n\n    if (+experienceYear && diffYear < +experienceYear) {\n      if (setError && errorName && errorType) {\n        setError(errorName, { type: errorType, shouldFocus });\n        return false;\n      }\n    }\n  }\n  return true;\n};\n\nexport const numberInput = (event) => {\n  // Check if the pressed key is the up arrow (38) or down arrow (40)\n  if (event.which === 107 || event.which === 187 || event.which === 38 || event.which === 40 || event.which === 45 || event.which === 69 || event.which === 189 || event.which === 173 || event.which === 110 || event.which === 109 || event.which === 190 || event.which === 46) {\n    event.preventDefault();\n  }\n};\n\nexport const numberInputMax = (event) => {\n  if (event.which === 107 || event.which === 187 || event.which === 38 || event.which === 40 || event.which === 45 || event.which === 69 || event.which === 189 || event.which === 173 || event.which === 110 || event.which === 109 || event.which === 190 || event.which === 46) {\n    event.preventDefault();\n  }\n  // if (event.which === 69 || event.which == 189 || event.which === 38 || event.which === 40 ) {\n  //   event.preventDefault();\n  // }\n  // Check if the pressed key is the up arrow (38) or down arrow (40)\n  const currentValue = event.target.value;\n  if (currentValue.length >= 3) {\n    const newValue = currentValue.slice(0, 2);\n    event.target.value = newValue;\n  }\n};\n\n// export const numberInput = event => {\n//     if (\n//         (event?.keyCode === 8) ||\n//         (event?.keyCode >= 48 && event?.keyCode <= 57) ||\n//         (event?.keyCode >= 37 && event?.keyCode <= 49)\n//     ) {\n//         return true;\n//     } else {\n//         event.preventDefault();\n//     }\n// }\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 15h2v2h-2v-2zm0-8h2v6h-2V7zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutlineOutlined');","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"ChargesForm\":\"styles_ChargesForm__djH2M\",\"basicForm1\":\"styles_basicForm1__hYWQ0\",\"basicForm\":\"styles_basicForm__c1qgu\",\"rightBorder\":\"styles_rightBorder__60Ezf\",\"error\":\"styles_error__QCpsS\",\"comments\":\"styles_comments__8OvGS\",\"newChargeType\":\"styles_newChargeType__sMfst\",\"btn\":\"styles_btn__GFwzp\"};"],"names":["_ref","tabelHeader","tabelHeader2","errors","_ref$register","register","_ref$otherBlocksList","otherBlocksList","_ref$handleFloorCount","handleFloorCount","_useState","useDispatch","useState","_useState2","_slicedToArray","setUserInput","console","log","_jsx","className","styles","ChargesForm","children","length","basicForm","basicForm1","_jsxs","concat","earlyCheckInChargesBody","otherChargesheading","rightBorder","tableHeading","map","item","index","array","_errors$floorsPerBloc","_errors$floorsPerBloc2","block","InputBox","type","styleInputBox","ratefiled","name","placeholder","value","numberOfFloors","onKeyDown","numberInputMax","onChange","event","newValue","target","_toConsumableArray","handleUserInput","required","pattern","validate","max100","parseInt","FormErrorMessage","error","floorsPerBlock","messages","_ref$icon","icon","_ref$position","position","_ref$className","style","textTransform","marginTop","_Fragment","ErrorOutlineOutlined","fontSize","props","_String","_String2","_props$placeholder","_props$register","_props$value","_props$type","_props$name","_props$grayedBox","grayedBox","_props$shadow","shadow","_props$disabled","disabled","maxLength","_props$SearchIcon","SearchIcon","_props$confirm","confirm","_props$isOtp","isOtp","_props$Message","Message","_props$Password","Password","setPassword","showPassword","_props$notesBox","notesBox","sendOtp","isOtpVerify","_props$isError","isError","_props$showSuccessBor","showSuccessBorder","_props$isPropertySubm","isPropertySubmitted","_props$inputClass","inputClass","_props$ratefiled","_props$amountfiled","amountfiled","title","_props$upperCaseLabel","upperCaseLabel","_props$isDefaultValue","isDefaultValue","_props$isWhiteDisable","isWhiteDisableBg","_props$readOnly","readOnly","ref","_props$searchData","searchData","_props$searchValue","searchValue","_props$showData","showData","_props$SearchCompanyN","SearchCompanyNameID","_props$registerBlock","registerBlock","_props$style","showDropdown","setShowDropdown","_useState3","_useState4","searchCompanyNameID","SetSearchCompanyNameID","useEffect","String","toUpperCase","onWheel","currentTarget","blur","e","body","autoComplete","_objectSpread","charAt","slice","defaultValue","onFocus","onBlur","setTimeout","_register$onChange","call","_id","onClick","companyName","id","src","outlineCircletick","BsSearch","color","TickCircel","alt","FiMail","AiOutlineEyeInvisible","AiOutlineEye","PASSWORD_REGEX","Name_Regex","pinCodeRegex","spaceValidation","toString","trim","validatePIN","pin","test","nameValidation","passwordValidation","ignoreNegativeValue","onlyNumbers","numberLetterValidation","maxLengthValidation","len","minLengthValidation","experienceValidate","data","experienceYear","setError","errorName","errorType","shouldFocus","momentDates","x","moment","passingYear","filter","Boolean","minDate","diffYear","get","numberInput","which","preventDefault","currentValue","createSvgIcon","d"],"sourceRoot":""}