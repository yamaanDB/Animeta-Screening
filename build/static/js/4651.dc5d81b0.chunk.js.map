{"version":3,"file":"static/js/4651.dc5d81b0.chunk.js","mappings":"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","sources":["assets/icons/dropdownArrow.svg","assets/icons/upArrow.svg","components/AddUnits/UnitNaming/UnitNamingTable/index.jsx","components/UI/common/ErrorMessage/index.js","assets/images/tickCircle.svg","assets/icons/outlineCircletick.svg","components/UI/common/InputBox/InputBox.js","../node_modules/@mui/icons-material/esm/ErrorOutlineOutlined.js","webpack://Boston-Living/./src/components/UI/common/InputBox/InputBox.scss?14be","webpack://Boston-Living/./src/components/AddUnits/UnitNaming/UnitNamingTable/index.module.scss?f56e"],"sourcesContent":["var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgDropdownArrow(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 10,\n    height: 6,\n    viewBox: \"0 0 10 6\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9 1L5 5L1 1\",\n    stroke: \"#1E2528\",\n    strokeWidth: 1.2,\n    strokeMiterlimit: 10,\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgDropdownArrow);\nexport default __webpack_public_path__ + \"static/media/dropdownArrow.1110f3c54e41b6820f381d3b1ac4477a.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgUpArrow(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"#000000\",\n    height: \"800px\",\n    width: \"800px\",\n    id: \"Layer_1\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    viewBox: \"0 0 330 330\",\n    xmlSpace: \"preserve\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    id: \"XMLID_224_\",\n    d: \"M325.606,229.393l-150.004-150C172.79,76.58,168.974,75,164.996,75c-3.979,0-7.794,1.581-10.607,4.394 l-149.996,150c-5.858,5.858-5.858,15.355,0,21.213c5.857,5.857,15.355,5.858,21.213,0l139.39-139.393l139.397,139.393 C307.322,253.536,311.161,255,315,255c3.839,0,7.678-1.464,10.607-4.394C331.464,244.748,331.464,235.251,325.606,229.393z\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgUpArrow);\nexport default __webpack_public_path__ + \"static/media/upArrow.4c6abf93e5f81056680a18aefc73d87e.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useState } from \"react\";\nimport styles from \"./index.module.scss\";\n// import dropdownArrow from \"../../../../../assets/icons/dropdownArrow.svg\";\nimport dropdownArrow from \"../../../../assets/icons/dropdownArrow.svg\";\nimport UpArrow from \"../../../../assets/icons/upArrow.svg\";\nimport InputBox from \"components/UI/common/InputBox/InputBox\";\nimport FormErrorMessage from \"components/UI/common/ErrorMessage\";\n\nconst UnitNamingTable = ({ initialData, tabelHeader, tabelHeader2, tabelHeader3, errors, control, register, onToggleBulkUpload, isManual, activeTab }) => {\n\n  // array to keep track of which dropdowns are open\n  const [openDropdowns, setOpenDropdowns] = useState(\n    Array(initialData.length).fill(false)\n  );\n  const [combinedData, setCombinedData] = useState([]);\n  const [activeFloor, setActiveFloor] = useState(null);\n\n  const toggleDropdown = (index, floorName) => {\n    const updatedDropdowns = [...openDropdowns];\n    updatedDropdowns[index] = !updatedDropdowns[index];\n    setOpenDropdowns(updatedDropdowns);\n    onToggleBulkUpload();\n\n    if (floorName === activeFloor) setActiveFloor(null)\n    else setActiveFloor(floorName);\n  };\n\n  // handleInputChange function to update the input values\n  const handleInputChange = (e, rowIndex, columnName) => {\n    // const updatedData = [...tableData];\n    // updatedData[rowIndex][columnName] = e.target.value;\n    // setTableData(updatedData);\n  };\n\n  useEffect(() => {\n    if (initialData?.length) {\n      const uniqueFloorNames = [...new Set(initialData.flatMap(a => a.blockName === activeTab ? [a.floorName] : []))];\n      if (uniqueFloorNames?.length) {\n        const tempArr = uniqueFloorNames.map(floorName => {\n          let obj = { floorName };\n          const flatOnFloor = initialData.filter(data => data.floorName === floorName && data.blockName === activeTab);\n          if (flatOnFloor?.length) {\n            obj.combinedSequence = flatOnFloor[0].flatSequence + \" - \" + flatOnFloor[flatOnFloor.length - 1].flatSequence\n            obj.flatCounts = flatOnFloor.length;\n          }\n          return obj;\n        });\n\n        setCombinedData(tempArr)\n      }\n    }\n  }, [initialData, activeTab, isManual]);\n\n  return (\n    <>\n      <div className={styles.tableContainer}>\n        <table className={styles.table}>\n          <thead>\n            <tr>\n              <th>{`Floor`}</th>\n              <th className={styles.propertyName}>\n                <div className={styles.columnContainer}>{`Number of Flats`}</div>\n              </th>\n              {isManual && <th>{`Flat Number`}</th>}\n              <th>{`Flats Sequence`}</th>\n            </tr>\n          </thead>\n          <tbody>\n            {combinedData.length && combinedData.map((row, index) => {\n              return (<React.Fragment key={index}>\n                <tr>\n                  <td className=\"px-4\">\n                    <span\n                      className={styles.dropdownArrow}\n                      onClick={() => toggleDropdown(index, row.floorName)}\n                    >\n                      {activeFloor === row.floorName ? (\n                        <img\n                          src={UpArrow}\n                          alt=\"Dropdown Arrow\"\n                          style={{ width: \"10px\", height: \"10px\" }}\n                        />\n                      ) : (\n                        <img\n                          src={dropdownArrow}\n                          alt=\"Dropdown Arrow\"\n                        /> /* Unicode for drop-down arrow */\n                      )}\n                    </span>\n                    <span>\n                      {row.floorName || 0}\n                    </span>\n                  </td>\n                  <td className=\"px-4\">\n                    <span>\n                      {row?.flatCounts}\n                      {isManual && \"  Flats\"}\n                    </span>\n                  </td>\n                  {isManual && <td className=\"px-4\">\n                    <span className=\"d-inline-block\">\n                      {\" \"}\n                    </span></td>}\n                    <td className={!isManual && styles.color} style={{ background: isManual ? \"#FFF\" : \"#F3F5E7\" }}>\n                    <span>\n                      {isManual ? \"\" : row.combinedSequence || \"\"}\n                    </span>\n                  </td>\n                </tr>\n                {activeFloor === row.floorName && initialData.length > 0 && (\n                  <>\n                    {!isManual && <tr className={styles.dropdownTable}>\n                      <td className=\"px-4\">Flat Count</td>\n                      <td>Flat Number</td>\n                      <td>Flat Sequence</td>\n                    </tr>}\n\n                    {initialData.map((input, i) => (\n                      <tr key={i} className={`${styles.dropdownTable} ${(input?.floorName === activeFloor && input?.blockName === activeTab) ? \"\" : \"d-none\"}`}>\n                        {isManual && <td>\n                        </td>}\n                        <td className=\"px-4\">\n                          <InputBox\n                            type=\"text\"\n                            ratefiled\n                            name={`flatDetails.${i}.flatcount`}\n                            readOnly\n                            register={register(`flatDetails.${i}.flatcount`)}\n                          />\n                        </td>\n                        <td>\n                          <InputBox\n                            type=\"text\"\n                            ratefiled\n                            name={`flatDetails.${i}.flatnumber`}\n                            placeholder=\"Flat Number\"\n                            readOnly={!isManual}\n                            register={register(`flatDetails.${i}.flatnumber`, {\n                              required: true,\n                              pattern: /^[0-9\\b]+$/,\n                              validate: {\n                                max100: (value) => {\n                                  if (parseInt(value) > 100) {\n                                    return \"Maximum value is 100\";\n                                  }\n                                  return true;\n                                },\n                              },\n                            })}\n                          />\n                          <FormErrorMessage\n                            className={styles.error}\n                            error={\n                              errors?.flatDetails?.[i]?.flatnumber\n                            }\n                            messages={{\n                              required: \"Flat Number is required\",\n                              pattern: \"Flat Number is invalid\",\n                              max100: \"Maximum Flat Number is 100\",\n                            }}\n                          />\n                        </td>\n                        <td className={isManual && styles.color}>\n                          <InputBox\n                            type=\"text\"\n                            ratefiled\n                            placeholder=\"Flat Sequence\"\n                            name={`flatDetails.${i}.flatSequence`}\n                            readOnly={!isManual}\n                            register={register(`flatDetails.${i}.flatSequence`, {\n                              required: true,\n                              pattern: /^[0-9\\b]+$/,\n                              validate: {\n                                max100: (value) => {\n                                  if (parseInt(value) > 100) {\n                                    return \"Maximum value is 100\";\n                                  }\n                                  return true;\n                                },\n                              },\n                            })}\n                          />\n                          <FormErrorMessage\n                            className={styles.error}\n                            error={\n                              errors?.flatDetails?.[i]?.flatSequence\n                            }\n                            messages={{\n                              required: \"Flat Sequence is required\",\n                              pattern: \"Flat Sequence is invalid\",\n                              max100: \"Maximum Flat Sequence is 100\",\n                            }}\n                          />\n                        </td>\n                      </tr>\n                    ))}\n                  </>\n                )}\n              </React.Fragment>)\n            })}\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n};\nexport default UnitNamingTable;\n","/* eslint-disable react/prop-types */\nimport { ErrorOutlineOutlined } from \"@mui/icons-material\";\nimport React from \"react\";\n\nconst FormErrorMessage = ({ error, type, messages, icon = false, position = \"\", className = \"\" }) => {\n  if (!error) return null;\n  return (\n    <span\n      className={`text-danger d-flex align-items-center fs-12 fw-500 ${className || \"\"}`}\n      style={{\n        textTransform: \"\",\n        position,\n        marginTop: position === \"absolute\" ? \"4px\" : 0\n      }}>\n      {messages[error.type] ? <>{icon && <ErrorOutlineOutlined fontSize=\"12px\" />} {messages[error.type]}</> : <>{icon && <ErrorOutlineOutlined />} Error in field</>}\n    </span>\n  );\n};\nexport default FormErrorMessage;\n","var _path;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgTickCircle(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C17.5 22 22 17.5 22 12C22 6.5 17.5 2 12 2ZM10 17L5 12L6.41 10.59L10 14.17L17.59 6.58L19 8L10 17Z\",\n    fill: \"#61903D\"\n  })));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgTickCircle);\nexport default __webpack_public_path__ + \"static/media/tickCircle.512623b0f3ec79af1078fc7f855c9d77.svg\";\nexport { ForwardRef as ReactComponent };","var _g, _defs;\nvar _excluded = [\"title\", \"titleId\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from \"react\";\nfunction SvgOutlineCircletick(_ref, svgRef) {\n  var title = _ref.title,\n    titleId = _ref.titleId,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 18,\n    height: 18,\n    viewBox: \"0 0 18 18\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    clipPath: \"url(#clip0_5194_12640)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M8.99766 0.993164C4.58498 0.993164 0.992188 4.58596 0.992188 8.99863C0.992188 13.4113 4.58498 17.0002 8.99766 17.0002C13.4103 17.0002 16.9992 13.4113 16.9992 8.99863C16.9992 4.58596 13.4103 0.993164 8.99766 0.993164ZM8.99766 2.32719C12.6894 2.32719 15.6652 5.30692 15.6652 8.99863C15.6652 12.6903 12.6894 15.6662 8.99766 15.6662C5.30594 15.6662 2.32622 12.6903 2.32622 8.99863C2.32622 5.30692 5.30594 2.32719 8.99766 2.32719ZM12.3171 5.78342C12.2291 5.78983 12.1433 5.81362 12.0646 5.85343C11.9859 5.89323 11.9158 5.94825 11.8585 6.0153L7.94372 10.5593L6.10813 8.66382C6.04675 8.6009 5.97353 8.55075 5.8927 8.51622C5.81187 8.4817 5.72501 8.46349 5.63712 8.46265C5.54922 8.4618 5.46203 8.47834 5.38055 8.51131C5.29907 8.54427 5.22491 8.59302 5.16233 8.65474C5.03668 8.77835 4.96507 8.94666 4.96313 9.12291C4.96119 9.29915 5.02909 9.469 5.15199 9.59534L7.49175 12.012C7.55622 12.0786 7.63388 12.131 7.71975 12.166C7.80563 12.2009 7.89785 12.2175 7.99052 12.2148C8.08319 12.2121 8.17428 12.1902 8.25798 12.1503C8.34168 12.1104 8.41615 12.0535 8.47664 11.9833L12.8682 6.88168C12.9838 6.74778 13.0414 6.57348 13.0285 6.39709C13.0155 6.22071 12.9331 6.05668 12.7992 5.94109C12.6655 5.82713 12.4922 5.77045 12.3171 5.78342Z\",\n    fill: \"#1F9A50\"\n  }))), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"clipPath\", {\n    id: \"clip0_5194_12640\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    width: 18,\n    height: 18,\n    fill: \"white\"\n  })))));\n}\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgOutlineCircletick);\nexport default __webpack_public_path__ + \"static/media/outlineCircletick.9f3c98014e8b20cc9b5d5d83b35a1edf.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useEffect, useState } from \"react\";\n// styles\nimport \"./InputBox.scss\";\n// services\nimport { BsSearch, GoMail } from \"react-icons/bs\";\nimport { FiMail } from \"react-icons/fi\";\nimport { AiOutlineEye, AiOutlineEyeInvisible } from \"react-icons/ai\";\nimport TickCircel from \"assets/images/tickCircle.svg\";\nimport outlineCircletick from \"assets/icons/outlineCircletick.svg\";\nimport { debounce } from \"helpers\";\n\nconst InputBox = (props) => {\n  let {\n    className,\n    placeholder = \"\",\n    register = {},\n    value = \"\",\n    type = \"text\",\n    onChange,\n    name = \"\",\n    grayedBox = false,\n    shadow = false,\n    disabled = false,\n    maxLength,\n    SearchIcon = false,\n    confirm = false,\n    isOtp = false,\n    Message = false,\n    Password = false,\n    setPassword,\n    showPassword,\n    notesBox = false,\n    sendOtp,\n    isOtpVerify,\n    isError = false,\n    showSuccessBorder = false,\n    isPropertySubmitted = false,\n    inputClass = \"\",\n    ratefiled = false,\n    amountfiled = false,\n    onKeyDown,\n    title,\n    upperCaseLabel = false,\n    isDefaultValue = true,\n    isWhiteDisableBg = false,\n    readOnly = false,\n    ref,\n    searchData = [],\n    searchValue = false,\n    showData = false,\n    SearchCompanyNameID=()=>{},\n    registerBlock=false,\n    style={}\n  } = props;\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [searchCompanyNameID, SetSearchCompanyNameID] = useState(\"\");\n  const handleClose = () => {\n    setTimeout(() => {\n      setShowDropdown(false);\n    }, 1000);\n  };\n  useEffect(() => {\n    SearchCompanyNameID(searchCompanyNameID);\n  }, [searchCompanyNameID]);\n  return (\n    <>\n      {notesBox ? (\n        <div>\n          <textarea\n            disabled={disabled}\n            name={name}\n            placeholder={placeholder}\n            className={`\n              ${\n                disabled\n                  ? \"inputBoxGrayed\"\n                  : notesBox\n                  ? \"NotesinputBoxStyle\"\n                  : \"\"\n              } ${className}`}\n            value={upperCaseLabel ? String(value).toUpperCase() : value}\n            maxLength={maxLength}\n            onWheel={(event) => event.currentTarget.blur()}\n            onChange={(e) => {\n              const body = {\n                target: {\n                  name: e.target.name,\n                  value: e.target.value,\n                },\n              };\n              if (onChange) onChange(body);\n            }}\n            autoComplete={\"off\"}\n          />\n        </div>\n      ) : (\n        <div className=\"input_head\">\n          <input\n            ref={ref}\n            disabled={disabled}\n            title={title}\n            name={name}\n            placeholder={\n              placeholder &&\n              String(placeholder)?.charAt(0).toUpperCase() +\n                String(placeholder)?.slice(1)\n            }\n            readOnly={readOnly}\n            onKeyDown={onKeyDown}\n            className={` ${className} ${\n              disabled\n                ? `inputBoxGrayed ${isWhiteDisableBg ? \"whiteDisableBg\" : \"\"}`\n                : grayedBox\n                ? \"inputBoxGrayed\"\n                : shadow\n                ? \"inputBoxIconStyle\"\n                : notesBox\n                ? \"NotesinputBoxStyle\"\n                : ratefiled\n                ? \"ratefiled\"\n                : amountfiled\n                ? \"amountfiled\"\n                : `inputBoxStyle ${isError && \"error\"} ${\n                    showSuccessBorder && \"success\"\n                  }\n                        \n                        ${name === \"website\" ? \" inherit-text\" : \"\"}  `\n            } ${inputClass} ${upperCaseLabel ? \"uppercaseText\" : \"\"}`}\n            {...register}\n            {...(isDefaultValue ? { defaultValue: value } : { value })}\n            type={!showPassword ? type : \"password\"}\n            maxLength={maxLength}\n            defaultValue={value}\n            onFocus={() => {\n              setShowDropdown(true);\n            }}\n            onBlur={handleClose}\n            onWheel={(event) => event.currentTarget.blur()}\n            onChange={(e) => {\n              const body = {\n                target: {\n                  name: e.target.name,\n                  value: e.target.value,\n                },\n              };\n              if (onChange) onChange(body);\n              if(!registerBlock){\n                register?.onChange?.(body);\n              }\n              \n            }}\n            autoComplete={\"off\"}\n            style={style}\n          />\n          {searchData.length && showDropdown && searchValue ? (\n            <div className=\"dropDown-style\">\n              {console.log(SearchCompanyNameID)}\n              {showData &&\n                searchData.map((item) => {\n                  console.log(item?._id);\n                  return (\n                    <div\n                      onClick={() => SetSearchCompanyNameID(item)}\n                      className=\"dropdown-List\"\n                      key={item.id}\n                    >\n                      <span>{item?.companyName ? item?.companyName : \"\"}</span>\n                    </div>\n                  );\n                })}\n            </div>\n          ) : null}\n\n          <div>\n            {isPropertySubmitted ? (\n              <div className=\"property_submit\">\n                <img className=\"outline_circle_tick\" src={outlineCircletick} />\n              </div>\n            ) : SearchIcon ? (\n              <i className=\"search_icon\">\n                <BsSearch color=\"grey\" />\n              </i>\n            ) : confirm ? (\n              <div className=\"search_icon\">\n                <span>Confirm</span>\n              </div>\n            ) : isOtp ? (\n              <div className=\"search_icon\">\n                {isOtpVerify ? (\n                  <img src={TickCircel} alt=\"tick\" />\n                ) : (\n                  <span onClick={sendOtp}>Send OTP</span>\n                )}\n              </div>\n            ) : Message ? (\n              <i className=\"message_icon\">\n                <FiMail />\n              </i>\n            ) : Password ? (\n              <i className=\"password_icon\">\n                {\" \"}\n                <span onClick={() => setPassword(!showPassword)}>\n                  {!showPassword ? (\n                    <AiOutlineEye style={{ fontSize: \"20px\" }} />\n                  ) : (\n                    <AiOutlineEyeInvisible style={{ fontSize: \"20px\" }} />\n                  )}\n                </span>\n              </i>\n            ) : (\n              \"\"\n            )}\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default InputBox;\n","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M11 15h2v2h-2v-2zm0-8h2v6h-2V7zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"\n}), 'ErrorOutlineOutlined');","// extracted by mini-css-extract-plugin\nexport default {};","// extracted by mini-css-extract-plugin\nexport default {\"table\":\"UnitNamingTable_table__9Y18E\",\"tableContainer\":\"UnitNamingTable_tableContainer__OgfPY\",\"container\":\"UnitNamingTable_container__If239\",\"dropdownArrow\":\"UnitNamingTable_dropdownArrow__OhwJq\",\"dropdownTable\":\"UnitNamingTable_dropdownTable__N3d9R\",\"color\":\"UnitNamingTable_color__gc-PH\",\"inputfield\":\"UnitNamingTable_inputfield__gxGqP\",\"inputBorder\":\"UnitNamingTable_inputBorder__X+Kww\"};"],"names":["_ref","initialData","errors","tabelHeader","tabelHeader2","tabelHeader3","register","control","onToggleBulkUpload","isManual","activeTab","_useState","useState","Array","length","fill","_useState2","_slicedToArray","openDropdowns","setOpenDropdowns","_useState3","_useState4","combinedData","setCombinedData","_useState5","_useState6","activeFloor","setActiveFloor","useEffect","uniqueFloorNames","_toConsumableArray","Set","flatMap","a","blockName","floorName","tempArr","map","obj","flatOnFloor","filter","data","combinedSequence","flatSequence","flatCounts","_jsx","_Fragment","children","className","styles","tableContainer","_jsxs","table","propertyName","columnContainer","row","index","React","dropdownArrow","onClick","updatedDropdowns","toggleDropdown","src","UpArrow","alt","style","width","height","color","background","dropdownTable","input","i","_errors$flatDetails","_errors$flatDetails$i","_errors$flatDetails2","_errors$flatDetails2$","concat","InputBox","type","ratefiled","name","readOnly","placeholder","required","pattern","validate","max100","value","parseInt","FormErrorMessage","error","flatDetails","flatnumber","messages","_ref$icon","icon","_ref$position","position","_ref$className","textTransform","marginTop","ErrorOutlineOutlined","fontSize","props","_String","_String2","_props$placeholder","_props$register","_props$value","_props$type","onChange","_props$name","_props$grayedBox","grayedBox","_props$shadow","shadow","_props$disabled","disabled","maxLength","_props$SearchIcon","SearchIcon","_props$confirm","confirm","_props$isOtp","isOtp","_props$Message","Message","_props$Password","Password","setPassword","showPassword","_props$notesBox","notesBox","sendOtp","isOtpVerify","_props$isError","isError","_props$showSuccessBor","showSuccessBorder","_props$isPropertySubm","isPropertySubmitted","_props$inputClass","inputClass","_props$ratefiled","_props$amountfiled","amountfiled","onKeyDown","title","_props$upperCaseLabel","upperCaseLabel","_props$isDefaultValue","isDefaultValue","_props$isWhiteDisable","isWhiteDisableBg","_props$readOnly","ref","_props$searchData","searchData","_props$searchValue","searchValue","_props$showData","showData","_props$SearchCompanyN","SearchCompanyNameID","_props$registerBlock","registerBlock","_props$style","showDropdown","setShowDropdown","searchCompanyNameID","SetSearchCompanyNameID","String","toUpperCase","onWheel","event","currentTarget","blur","e","body","target","autoComplete","_objectSpread","charAt","slice","defaultValue","onFocus","onBlur","setTimeout","_register$onChange","call","console","log","item","_id","companyName","id","outlineCircletick","BsSearch","TickCircel","FiMail","AiOutlineEyeInvisible","AiOutlineEye","createSvgIcon","d"],"sourceRoot":""}