{"version":3,"file":"static/js/5279.62613682.chunk.js","mappings":"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","sources":["Constants/api.js","Constants/axiosHelpers.js","Constants/toast.js","service/TabDetails.js"],"sourcesContent":["// .ENV\nexport const baseUrl = \"http://doodlebluelive.com:2223/api/v1\",\n  authService = `${baseUrl}/users`,\n  propertyBasicDetailsService = `${baseUrl}/property`,\n  propertynotificationService =`${baseUrl}/notifications/property`;\n\nexport const endpoints = {\n  auth: {\n    SEND_OTP: `${authService}/sendOTP`,\n    VERIFY_OTP: `${authService}/verifyOTP`,\n    CREATE_PASSWORD: `${authService}/createPassword`,\n    LOGIN: `${authService}/signIn`,\n    RESET_PASSWORD: `${authService}/resetPassword`,\n    FORGET_PASSWORD: `${authService}/forgetPassword `,\n    LOGOUT: `${authService}/logout`,\n  },\n  basicdetails: {\n    ADD_BASIC_DETAILS: `${propertyBasicDetailsService}/basicDetails`,\n    ADD_RESIDENT_TYPE: `${propertyBasicDetailsService}/residentType`,\n    ADD_PROPERTY_TYPE: `${propertyBasicDetailsService}/addType`,\n    GET_PROPERTY_TYPES: `${propertyBasicDetailsService}/typeList`,\n    GET_RESIDENT_TYPES: `${propertyBasicDetailsService}/residentType`,\n    GET_BASIC_DETAILS: `${propertyBasicDetailsService}/basicDetails`,\n  },\n  uploadImageAndDocuments: {\n    UPLOAD_IMAGES_AND_DOCUMENTS: `${propertyBasicDetailsService}/fileUploads`,\n    PROCEED_IMAGES_AND_DOCUMENTS: `${propertyBasicDetailsService}/createMedia`,\n    GET_IMAGES_AND_DOCUMENTS: `${propertyBasicDetailsService}/media/list`,\n  },\n  companyDetails: {\n    ADD_COMPANY: `${propertyBasicDetailsService}/company`,\n    GET_COMPANY_DETAILS: `${propertyBasicDetailsService}/company`,\n    SEARCH_COMPANY_NAME:`${propertyBasicDetailsService}/company/search`,\n    GET_COMPANY_NAME_DETAILS:`${propertyBasicDetailsService}/singleCompany`,\n  },\n  stayDetails: {\n    ADD_UPDATE_STAY_TYPE: `${propertyBasicDetailsService}/stayType`,\n    ADD_DEFINE_ROOM_TYPE: `${propertyBasicDetailsService}/roomType`,\n    GET_STAY_TYPE: `${propertyBasicDetailsService}/stayType`,\n  },\n  chargersAndTimings: {\n    ADD_CHARGERS_TIMINGS: `${propertyBasicDetailsService}/chargesTimings`,\n    GET_CHARGERS_TIMINGS: `${propertyBasicDetailsService}/chargesTimings`,\n  },\n  roomPackages: {\n    ADD_ROOM_PACKAGES: `${propertyBasicDetailsService}/roomPackage`,\n    GET_ROOM_PACKAGES: `${propertyBasicDetailsService}/roomPackage`,\n    GET_ROOM_TYPE_LIST: `${propertyBasicDetailsService}/roomType`,\n  },\n  serviceAmenity: {\n    GET_FREQUENCY_LIST: `${propertyBasicDetailsService}/frequencyList`,\n    ADD_FREQUENCY: `${propertyBasicDetailsService}/addFrequencies`,\n    SERVICES_AMENITIES: `${propertyBasicDetailsService}/servicesAmenities`,\n    GET_ROOM_TYPE: `${propertyBasicDetailsService}/roomType`,\n  },\n  tabStatus: {\n    GET_TAB_STATUS: `${propertyBasicDetailsService}/tabStatus`,\n  },\n  propertyList: {\n    GET_PROPERTY_LIST: `${propertyBasicDetailsService}/list`,\n    DELETE_PROPERTY_LIST: `${propertyBasicDetailsService}/delete`,\n    DEACTIVATE_PROPERTY:`${propertyBasicDetailsService}/status`,\n    NOTIFICATION_LIST:`${propertynotificationService}`,\n    READ_NOTIFICATION:`${baseUrl}/notifications/addressNotification`\n  },\n};\n","import { history } from \"../helpers\";\nimport { Toast } from \"./toast\";\n\nexport default function axiosHelpers(error, action, checkUnauthorized = true){\n  const requestStatus = error?.request?.status;\n  const responseStatus = error?.response?.status;\n  const dataStatus = error?.response?.data?.status;\n\n  Toast({\n    type: \"error\",\n    message:\n      error?.response?.data?.data?.message ||\n      error?.response?.data?.Error ||\n      error?.response?.data?.message || \n      error?.message,\n  });\n  \n  /* if (!localStorage.getItem(\"token\")) {\n    history.push(\"/auth\");\n  }\n\n  if (dataStatus === 400 || responseStatus === 400 || requestStatus === 400) {\n    if (localStorage.getItem(\"token\")) {\n      Toast({\n        type: \"error\",\n        message:\n          error?.response?.data?.data?.message ||\n          error?.response?.data?.message ||\n          error?.response?.data?.data,\n      });\n    }\n  }\n\n  if (dataStatus === 401 || responseStatus === 401 || requestStatus === 401) {\n    localStorage.clear();\n    history.push(\"/auth\");\n  }\n\n  if (\n    checkUnauthorized &&\n    (dataStatus === 409 || responseStatus === 409 || requestStatus === 409)\n  ) {\n    if (localStorage.getItem(\"token\")) {\n      Toast({ type: \"error\", message: error?.response?.data?.message });\n    }\n  }\n\n  if (action === \"uploadImage\") {\n    if (dataStatus === 500 || responseStatus === 500 || requestStatus === 500) {\n      if (localStorage.getItem(\"token\")) {\n        const message = error?.response?.data?.message;\n        message && Toast({ type: \"error\", message });\n      } else history.push(\"/auth\");\n    }\n  } */\n\n  if (error.response) return error.response;\n  else if (error.request) return error.request;\n  else return error.message;\n};\n","import { NotificationManager } from \"react-notifications\";\nimport \"react-notifications/lib/notifications.css\";\n\nexport const Toast = ({ type, message }) => {\n  NotificationManager.listNotify.forEach((n) =>\n    NotificationManager.remove({ id: n.id })\n  );\n  switch (type) {\n    case \"success\":\n      NotificationManager.success(message, '', 3000);\n      break;\n    case \"error\":\n      NotificationManager.error(message, '', 3000);\n      break;\n    case \"info\":\n      NotificationManager.info(message, '', 3000);\n      break;\n    case \"warning\":\n      NotificationManager.warning(message, '', 3000);\n      break;\n  }\n};\n","import axios from \"axios\";\nimport { endpoints } from \"Constants/api\";\nimport axiosHelpers from \"Constants/axiosHelpers\";\nimport {\n  updateResidentTypes,\n  updatePropertyTypes,\n  setBasicDetails,\n} from \"../redux/slice/basicSlice\";\n\nexport const getTabStatusDetails = async (Id) => {\n  try {\n    const url = `${endpoints.tabStatus.GET_TAB_STATUS}?id=${Id}`;\n    const response = await axios.get(url, {\n      headers: {},\n    });\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching company details:\", error);\n    throw error;\n  }\n};\n"],"names":["baseUrl","authService","concat","propertyBasicDetailsService","propertynotificationService","endpoints","auth","SEND_OTP","VERIFY_OTP","CREATE_PASSWORD","LOGIN","RESET_PASSWORD","FORGET_PASSWORD","LOGOUT","basicdetails","ADD_BASIC_DETAILS","ADD_RESIDENT_TYPE","ADD_PROPERTY_TYPE","GET_PROPERTY_TYPES","GET_RESIDENT_TYPES","GET_BASIC_DETAILS","uploadImageAndDocuments","UPLOAD_IMAGES_AND_DOCUMENTS","PROCEED_IMAGES_AND_DOCUMENTS","GET_IMAGES_AND_DOCUMENTS","companyDetails","ADD_COMPANY","GET_COMPANY_DETAILS","SEARCH_COMPANY_NAME","GET_COMPANY_NAME_DETAILS","stayDetails","ADD_UPDATE_STAY_TYPE","ADD_DEFINE_ROOM_TYPE","GET_STAY_TYPE","chargersAndTimings","ADD_CHARGERS_TIMINGS","GET_CHARGERS_TIMINGS","roomPackages","ADD_ROOM_PACKAGES","GET_ROOM_PACKAGES","GET_ROOM_TYPE_LIST","serviceAmenity","GET_FREQUENCY_LIST","ADD_FREQUENCY","SERVICES_AMENITIES","GET_ROOM_TYPE","tabStatus","GET_TAB_STATUS","propertyList","GET_PROPERTY_LIST","DELETE_PROPERTY_LIST","DEACTIVATE_PROPERTY","NOTIFICATION_LIST","READ_NOTIFICATION","axiosHelpers","error","action","_error$request","_error$response","_error$response2","_error$response2$data","_error$response3","_error$response3$data","_error$response3$data2","_error$response4","_error$response4$data","_error$response5","_error$response5$data","request","status","response","data","Toast","type","message","Error","_ref","NotificationManager","listNotify","forEach","n","remove","id","success","info","warning","getTabStatusDetails","_asyncToGenerator","_regeneratorRuntime","mark","_callee","Id","url","wrap","_context","prev","next","axios","get","headers","sent","abrupt","t0","console","stop","_x","apply","arguments"],"sourceRoot":""}